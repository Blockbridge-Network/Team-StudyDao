{
	"id": "c491fcde01e91645128ff1bcce5c23e0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/StudyTokenAuthority.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./StudyToken.sol\";\n\n/**\n * @title StudyTokenAuthority\n * @dev Contract for managing token authority operations for StudyDAO\n */\ncontract StudyTokenAuthority {\n    // StudyToken contract reference\n    StudyToken public studyToken;\n    \n    // Address of the contract owner\n    address public owner;\n    \n    // Mapping to track authorized contracts\n    mapping(address => bool) public authorizedContracts;\n    \n    // Mapping to track user token limits\n    mapping(address => uint256) public userDailyLimits;\n    \n    // Default daily limit\n    uint256 public defaultDailyLimit;\n    \n    // Mapping to track user daily usage\n    mapping(address => mapping(uint256 => uint256)) public userDailyUsage;\n    \n    // Events\n    event ContractAuthorized(address indexed contractAddress);\n    event ContractDeauthorized(address indexed contractAddress);\n    event UserLimitSet(address indexed user, uint256 limit);\n    event TokenOperationApproved(address indexed user, uint256 amount, string operation);\n    event TokenOperationDenied(address indexed user, uint256 amount, string operation);\n    \n    // Modifiers\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n    \n    modifier onlyAuthorized() {\n        require(authorizedContracts[msg.sender] || msg.sender == owner, \"Not authorized\");\n        _;\n    }\n    \n    /**\n     * @dev Constructor to initialize the token authority\n     * @param _studyTokenAddress Address of the StudyToken contract\n     * @param _defaultDailyLimit Default daily limit for users\n     */\n    constructor(address _studyTokenAddress, uint256 _defaultDailyLimit) {\n        require(_studyTokenAddress != address(0), \"Invalid token address\");\n        owner = msg.sender;\n        studyToken = StudyToken(_studyTokenAddress);\n        defaultDailyLimit = _defaultDailyLimit;\n        \n        // Automatically authorize the deployer\n        authorizedContracts[msg.sender] = true;\n        emit ContractAuthorized(msg.sender);\n    }\n    \n    /**\n     * @dev Authorize a contract to interact with the token authority\n     * @param contractAddress Address of the contract to authorize\n     */\n    function authorizeContract(address contractAddress) external onlyOwner {\n        require(contractAddress != address(0), \"Invalid contract address\");\n        require(!authorizedContracts[contractAddress], \"Contract already authorized\");\n        \n        authorizedContracts[contractAddress] = true;\n        emit ContractAuthorized(contractAddress);\n    }\n    \n    /**\n     * @dev Deauthorize a contract\n     * @param contractAddress Address of the contract to deauthorize\n     */\n    function deauthorizeContract(address contractAddress) external onlyOwner {\n        require(authorizedContracts[contractAddress], \"Contract not authorized\");\n        \n        authorizedContracts[contractAddress] = false;\n        emit ContractDeauthorized(contractAddress);\n    }\n    \n    /**\n     * @dev Set daily token limit for a specific user\n     * @param user Address of the user\n     * @param limit Daily limit amount\n     */\n    function setUserDailyLimit(address user, uint256 limit) external onlyOwner {\n        require(user != address(0), \"Invalid user address\");\n        \n        userDailyLimits[user] = limit;\n        emit UserLimitSet(user, limit);\n    }\n    \n    /**\n     * @dev Set default daily limit for all users\n     * @param limit Default daily limit amount\n     */\n    function setDefaultDailyLimit(uint256 limit) external onlyOwner {\n        defaultDailyLimit = limit;\n    }\n    \n    /**\n     * @dev Get the current day number (for daily limit tracking)\n     * @return The current day number\n     */\n    function getCurrentDay() public view returns (uint256) {\n        return block.timestamp / 1 days;\n    }\n    \n    /**\n     * @dev Get a user's effective daily limit\n     * @param user Address of the user\n     * @return The user's daily limit\n     */\n    function getUserDailyLimit(address user) public view returns (uint256) {\n        uint256 userLimit = userDailyLimits[user];\n        return userLimit > 0 ? userLimit : defaultDailyLimit;\n    }\n    \n    /**\n     * @dev Get a user's remaining daily limit\n     * @param user Address of the user\n     * @return The user's remaining daily limit\n     */\n    function getRemainingDailyLimit(address user) public view returns (uint256) {\n        uint256 dayNumber = getCurrentDay();\n        uint256 usedToday = userDailyUsage[user][dayNumber];\n        uint256 limit = getUserDailyLimit(user);\n        \n        return usedToday >= limit ? 0 : limit - usedToday;\n    }\n    \n    /**\n     * @dev Authorize a token mint operation\n     * @param to Recipient of the tokens\n     * @param amount Amount of tokens to mint\n     * @return Whether the operation is authorized\n     */\n    function authorizeMint(address to, uint256 amount) external onlyAuthorized returns (bool) {\n        uint256 dayNumber = getCurrentDay();\n        uint256 userLimit = getUserDailyLimit(to);\n        uint256 usedToday = userDailyUsage[to][dayNumber];\n        \n        if (usedToday + amount <= userLimit) {\n            userDailyUsage[to][dayNumber] = usedToday + amount;\n            emit TokenOperationApproved(to, amount, \"mint\");\n            return true;\n        } else {\n            emit TokenOperationDenied(to, amount, \"mint\");\n            return false;\n        }\n    }\n    \n    /**\n     * @dev Authorize a token transfer operation\n     * @param from Sender of the tokens\n     * @param to Recipient of the tokens\n     * @param amount Amount of tokens to transfer\n     * @return Whether the operation is authorized\n     */\n    function authorizeTransfer(address from, address to, uint256 amount) external onlyAuthorized returns (bool) {\n        // For this simple implementation, we'll always authorize transfers\n        // More complex logic could be added here\n        emit TokenOperationApproved(from, amount, \"transfer\");\n        return true;\n    }\n    \n    /**\n     * @dev Connect to an existing StudyToken contract\n     * @param _studyTokenAddress Address of the StudyToken contract\n     */\n    function setStudyToken(address _studyTokenAddress) external onlyOwner {\n        require(_studyTokenAddress != address(0), \"Invalid token address\");\n        studyToken = StudyToken(_studyTokenAddress);\n    }\n    \n    /**\n     * @dev Request the token contract to add this authority as a minter\n     * @return Whether the operation was successful\n     */\n    function requestMinterRole() external onlyOwner returns (bool) {\n        try studyToken.addMinter(address(this)) {\n            return true;\n        } catch {\n            return false;\n        }\n    }\n    \n    /**\n     * @dev Mint tokens through the authority (if it's a minter)\n     * @param to Recipient of the tokens\n     * @param amount Amount of tokens to mint\n     * @return Whether the operation was successful\n     */\n    function mintTokens(address to, uint256 amount) external onlyOwner returns (bool) {\n        try studyToken.mintReward(to, amount) {\n            emit TokenOperationApproved(to, amount, \"authorityMint\");\n            return true;\n        } catch {\n            emit TokenOperationDenied(to, amount, \"authorityMint\");\n            return false;\n        }\n    }\n    \n    /**\n     * @dev Add a new StudyGroup contract as an authorized minter on the token\n     * @param studyGroupAddress Address of the StudyGroup contract\n     * @return Whether the operation was successful\n     */\n    function authorizeStudyGroupAsMinter(address studyGroupAddress) external onlyOwner returns (bool) {\n        require(studyGroupAddress != address(0), \"Invalid study group address\");\n        \n        try studyToken.addMinter(studyGroupAddress) {\n            emit ContractAuthorized(studyGroupAddress);\n            return true;\n        } catch {\n            return false;\n        }\n    }\n}"
			},
			"contracts/StudyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title StudyToken\n * @dev ERC20 token for the StudyDAO platform\n */\ncontract StudyToken is ERC20, Ownable {\n    // Mapping to track minters (can be StudyGroup contracts or other authorized entities)\n    mapping(address => bool) public minters;\n    \n    // Events\n    event MinterAdded(address indexed minter);\n    event MinterRemoved(address indexed minter);\n    \n    /**\n     * @dev Constructor that initializes the token with name and symbol\n     * @param initialSupply The initial token supply to mint to the contract deployer\n     */\n    constructor(uint256 initialSupply) ERC20(\"StudyToken\", \"STUDY\") Ownable(msg.sender) {\n        // Mint initial supply to the deployer\n        _mint(msg.sender, initialSupply * 10**decimals());\n    }\n    \n    /**\n     * @dev Add a new minter address\n     * @param minter The address to add as a minter\n     */\n    function addMinter(address minter) external onlyOwner {\n        require(minter != address(0), \"Invalid minter address\");\n        require(!minters[minter], \"Already a minter\");\n        \n        minters[minter] = true;\n        emit MinterAdded(minter);\n    }\n    \n    /**\n     * @dev Remove a minter address\n     * @param minter The address to remove as a minter\n     */\n    function removeMinter(address minter) external onlyOwner {\n        require(minters[minter], \"Not a minter\");\n        \n        minters[minter] = false;\n        emit MinterRemoved(minter);\n    }\n    \n    /**\n     * @dev Mint new tokens to a recipient (only callable by minters)\n     * @param to The address that will receive the minted tokens\n     * @param amount The amount of tokens to mint\n     */\n    function mintReward(address to, uint256 amount) external {\n        require(minters[msg.sender], \"Only minters can mint rewards\");\n        require(to != address(0), \"Cannot mint to zero address\");\n        \n        _mint(to, amount);\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StudyToken.sol": {
				"StudyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "MinterAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "MinterRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "addMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "minters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "removeMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token for the StudyDAO platform",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"addMinter(address)": {
								"details": "Add a new minter address",
								"params": {
									"minter": "The address to add as a minter"
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Constructor that initializes the token with name and symbol",
								"params": {
									"initialSupply": "The initial token supply to mint to the contract deployer"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"mintReward(address,uint256)": {
								"details": "Mint new tokens to a recipient (only callable by minters)",
								"params": {
									"amount": "The amount of tokens to mint",
									"to": "The address that will receive the minted tokens"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeMinter(address)": {
								"details": "Remove a minter address",
								"params": {
									"minter": "The address to remove as a minter"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "StudyToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StudyToken.sol\":243:2044  contract StudyToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StudyToken.sol\":717:914  constructor(uint256 initialSupply) ERC20(\"StudyToken\", \"STUDY\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/StudyToken.sol\":789:799  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb1, 0x29ba3ab23caa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x5354554459)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3036:3087   */\n  mstore\n    /* \"#utility.yul\":3009:3027   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/StudyToken.sol\":858:907  _mint(msg.sender, initialSupply * 10**decimals()) */\n  tag_18\n    /* \"contracts/StudyToken.sol\":864:874  msg.sender */\n  caller\n    /* \"contracts/StudyToken.sol\":892:906  10**decimals() */\n  tag_21\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"contracts/StudyToken.sol\":892:894  10 */\n  0x0a\n    /* \"contracts/StudyToken.sol\":892:906  10**decimals() */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/StudyToken.sol\":876:906  initialSupply * 10**decimals() */\n  tag_23\n  swap1\n    /* \"contracts/StudyToken.sol\":876:889  initialSupply */\n  dup5\n    /* \"contracts/StudyToken.sol\":876:906  initialSupply * 10**decimals() */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/StudyToken.sol\":858:863  _mint */\n  tag_25\n    /* \"contracts/StudyToken.sol\":858:907  _mint(msg.sender, initialSupply * 10**decimals()) */\n  jump\t// in\ntag_18:\n    /* \"contracts/StudyToken.sol\":717:914  constructor(uint256 initialSupply) ERC20(\"StudyToken\", \"STUDY\") Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/StudyToken.sol\":243:2044  contract StudyToken is ERC20, Ownable {... */\n  jump(tag_54)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3036:3087   */\n  mstore\n    /* \"#utility.yul\":3009:3027   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":2890:3093   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  tag_33\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_38\n  swap1\n  pop\n  jump\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5130:5162   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5112:5163   */\n  mstore\n    /* \"#utility.yul\":5179:5197   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5172:5206   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5222:5240   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5215:5249   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5085:5103   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":4910:5255   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n    /* \"#utility.yul\":5406:5431   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5394:5396   */\n  0x20\n    /* \"#utility.yul\":5379:5397   */\n  add\n  swap1\n    /* \"#utility.yul\":5260:5437   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_56:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:330   */\ntag_46:\n    /* \"#utility.yul\":264:274   */\n  0x4e487b71\n    /* \"#utility.yul\":259:262   */\n  0xe0\n    /* \"#utility.yul\":255:275   */\n  shl\n    /* \"#utility.yul\":252:253   */\n  0x00\n    /* \"#utility.yul\":245:276   */\n  mstore\n    /* \"#utility.yul\":295:299   */\n  0x41\n    /* \"#utility.yul\":292:293   */\n  0x04\n    /* \"#utility.yul\":285:300   */\n  mstore\n    /* \"#utility.yul\":319:323   */\n  0x24\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":309:324   */\n  revert\n    /* \"#utility.yul\":335:715   */\ntag_47:\n    /* \"#utility.yul\":414:415   */\n  0x01\n    /* \"#utility.yul\":410:422   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":457:469   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":478:539   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":532:536   */\n  0x7f\n    /* \"#utility.yul\":524:530   */\n  dup3\n    /* \"#utility.yul\":520:537   */\n  and\n    /* \"#utility.yul\":510:537   */\n  swap2\n  pop\n    /* \"#utility.yul\":478:539   */\ntag_59:\n    /* \"#utility.yul\":585:587   */\n  0x20\n    /* \"#utility.yul\":577:583   */\n  dup3\n    /* \"#utility.yul\":574:588   */\n  lt\n    /* \"#utility.yul\":554:572   */\n  dup2\n    /* \"#utility.yul\":551:589   */\n  sub\n    /* \"#utility.yul\":548:709   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":631:641   */\n  0x4e487b71\n    /* \"#utility.yul\":626:629   */\n  0xe0\n    /* \"#utility.yul\":622:642   */\n  shl\n    /* \"#utility.yul\":619:620   */\n  0x00\n    /* \"#utility.yul\":612:643   */\n  mstore\n    /* \"#utility.yul\":666:670   */\n  0x22\n    /* \"#utility.yul\":663:664   */\n  0x04\n    /* \"#utility.yul\":656:671   */\n  mstore\n    /* \"#utility.yul\":694:698   */\n  0x24\n    /* \"#utility.yul\":691:692   */\n  0x00\n    /* \"#utility.yul\":684:699   */\n  revert\n    /* \"#utility.yul\":548:709   */\ntag_60:\n  pop\n    /* \"#utility.yul\":335:715   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":846:1364   */\ntag_49:\n    /* \"#utility.yul\":948:950   */\n  0x1f\n    /* \"#utility.yul\":943:946   */\n  dup3\n    /* \"#utility.yul\":940:951   */\n  gt\n    /* \"#utility.yul\":937:1358   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":984:989   */\n  dup1\n    /* \"#utility.yul\":981:982   */\n  0x00\n    /* \"#utility.yul\":974:990   */\n  mstore\n    /* \"#utility.yul\":1028:1032   */\n  0x20\n    /* \"#utility.yul\":1025:1026   */\n  0x00\n    /* \"#utility.yul\":1015:1033   */\n  keccak256\n    /* \"#utility.yul\":1098:1100   */\n  0x1f\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n    /* \"#utility.yul\":1082:1101   */\n  add\n    /* \"#utility.yul\":1079:1080   */\n  0x05\n    /* \"#utility.yul\":1075:1102   */\n  shr\n    /* \"#utility.yul\":1069:1073   */\n  dup2\n    /* \"#utility.yul\":1065:1103   */\n  add\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1122:1132   */\n  dup6\n    /* \"#utility.yul\":1119:1139   */\n  lt\n    /* \"#utility.yul\":1116:1163   */\n  iszero\n  tag_64\n  jumpi\n  pop\n    /* \"#utility.yul\":1157:1161   */\n  dup1\n    /* \"#utility.yul\":1116:1163   */\ntag_64:\n    /* \"#utility.yul\":1212:1214   */\n  0x1f\n    /* \"#utility.yul\":1207:1210   */\n  dup5\n    /* \"#utility.yul\":1203:1215   */\n  add\n    /* \"#utility.yul\":1200:1201   */\n  0x05\n    /* \"#utility.yul\":1196:1216   */\n  shr\n    /* \"#utility.yul\":1190:1194   */\n  dup3\n    /* \"#utility.yul\":1186:1217   */\n  add\n    /* \"#utility.yul\":1176:1217   */\n  swap2\n  pop\n    /* \"#utility.yul\":1267:1348   */\ntag_65:\n    /* \"#utility.yul\":1285:1287   */\n  dup2\n    /* \"#utility.yul\":1278:1283   */\n  dup2\n    /* \"#utility.yul\":1275:1288   */\n  lt\n    /* \"#utility.yul\":1267:1348   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1344:1345   */\n  0x00\n    /* \"#utility.yul\":1330:1346   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1311:1312   */\n  0x01\n    /* \"#utility.yul\":1300:1313   */\n  add\n    /* \"#utility.yul\":1267:1348   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":1271:1274   */\n  pop\n  pop\n    /* \"#utility.yul\":937:1358   */\ntag_63:\n    /* \"#utility.yul\":846:1364   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1540:2885   */\ntag_9:\n    /* \"#utility.yul\":1660:1670   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1682:1712   */\n  dup2\n  gt\n    /* \"#utility.yul\":1679:1735   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1715:1733   */\n  tag_71\n  tag_46\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1744:1841   */\n  tag_72\n    /* \"#utility.yul\":1834:1840   */\n  dup2\n    /* \"#utility.yul\":1794:1832   */\n  tag_73\n    /* \"#utility.yul\":1826:1830   */\n  dup5\n    /* \"#utility.yul\":1820:1831   */\n  sload\n    /* \"#utility.yul\":1794:1832   */\n  tag_47\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1788:1792   */\n  dup5\n    /* \"#utility.yul\":1744:1841   */\n  tag_49\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1896:1900   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1953:1955   */\n  0x1f\n    /* \"#utility.yul\":1942:1956   */\n  dup4\n  gt\n    /* \"#utility.yul\":1970:1971   */\n  0x01\n    /* \"#utility.yul\":1965:2628   */\n  dup2\n  eq\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2672:2673   */\n  0x00\n    /* \"#utility.yul\":2689:2695   */\n  dup5\n    /* \"#utility.yul\":2686:2775   */\n  iszero\n  tag_76\n  jumpi\n  pop\n    /* \"#utility.yul\":2741:2760   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2735:2761   */\n  mload\n    /* \"#utility.yul\":2686:2775   */\ntag_76:\n  not(0x00)\n    /* \"#utility.yul\":1497:1498   */\n  0x03\n    /* \"#utility.yul\":1493:1504   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1489:1513   */\n  shr\n    /* \"#utility.yul\":1485:1514   */\n  not\n    /* \"#utility.yul\":1475:1515   */\n  and\n    /* \"#utility.yul\":1521:1522   */\n  0x01\n    /* \"#utility.yul\":1517:1528   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1472:1529   */\n  or\n    /* \"#utility.yul\":2788:2869   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1935:2879   */\n  jump(tag_74)\n    /* \"#utility.yul\":1965:2628   */\ntag_75:\n    /* \"#utility.yul\":793:794   */\n  0x00\n    /* \"#utility.yul\":786:800   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":817:835   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2001:2021   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2119:2355   */\ntag_79:\n    /* \"#utility.yul\":2133:2140   */\n  dup3\n    /* \"#utility.yul\":2130:2131   */\n  dup2\n    /* \"#utility.yul\":2127:2141   */\n  lt\n    /* \"#utility.yul\":2119:2355   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2222:2241   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2216:2242   */\n  mload\n    /* \"#utility.yul\":2201:2243   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2314:2341   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2282:2283   */\n  0x01\n    /* \"#utility.yul\":2270:2284   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2149:2168   */\n  dup5\n  add\n    /* \"#utility.yul\":2119:2355   */\n  jump(tag_79)\ntag_81:\n    /* \"#utility.yul\":2123:2126   */\n  pop\n    /* \"#utility.yul\":2383:2389   */\n  dup6\n    /* \"#utility.yul\":2374:2381   */\n  dup3\n    /* \"#utility.yul\":2371:2390   */\n  lt\n    /* \"#utility.yul\":2368:2569   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2444:2463   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2438:2464   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2527:2528   */\n  0x03\n    /* \"#utility.yul\":2523:2537   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2539:2542   */\n  0xf8\n    /* \"#utility.yul\":2519:2543   */\n  and\n    /* \"#utility.yul\":2515:2552   */\n  shr\n    /* \"#utility.yul\":2511:2553   */\n  not\n    /* \"#utility.yul\":2496:2554   */\n  and\n    /* \"#utility.yul\":2481:2555   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2368:2569   */\ntag_82:\n  pop\n  pop\n    /* \"#utility.yul\":2615:2616   */\n  0x01\n    /* \"#utility.yul\":2606:2612   */\n  dup5\n    /* \"#utility.yul\":2603:2604   */\n  0x01\n    /* \"#utility.yul\":2599:2613   */\n  shl\n    /* \"#utility.yul\":2595:2617   */\n  add\n    /* \"#utility.yul\":2589:2593   */\n  dup6\n    /* \"#utility.yul\":2582:2618   */\n  sstore\n    /* \"#utility.yul\":1935:2879   */\ntag_74:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1540:2885   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3098:3225   */\ntag_51:\n    /* \"#utility.yul\":3159:3169   */\n  0x4e487b71\n    /* \"#utility.yul\":3154:3157   */\n  0xe0\n    /* \"#utility.yul\":3150:3170   */\n  shl\n    /* \"#utility.yul\":3147:3148   */\n  0x00\n    /* \"#utility.yul\":3140:3171   */\n  mstore\n    /* \"#utility.yul\":3190:3194   */\n  0x11\n    /* \"#utility.yul\":3187:3188   */\n  0x04\n    /* \"#utility.yul\":3180:3195   */\n  mstore\n    /* \"#utility.yul\":3214:3218   */\n  0x24\n    /* \"#utility.yul\":3211:3212   */\n  0x00\n    /* \"#utility.yul\":3204:3219   */\n  revert\n    /* \"#utility.yul\":3230:3646   */\ntag_52:\n    /* \"#utility.yul\":3319:3320   */\n  0x01\n    /* \"#utility.yul\":3356:3361   */\n  dup2\n    /* \"#utility.yul\":3319:3320   */\n  dup2\n    /* \"#utility.yul\":3370:3640   */\ntag_86:\n    /* \"#utility.yul\":3391:3398   */\n  dup1\n    /* \"#utility.yul\":3381:3389   */\n  dup6\n    /* \"#utility.yul\":3378:3399   */\n  gt\n    /* \"#utility.yul\":3370:3640   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3450:3454   */\n  dup2\n    /* \"#utility.yul\":3446:3447   */\n  0x00\n    /* \"#utility.yul\":3442:3448   */\n  not\n    /* \"#utility.yul\":3438:3455   */\n  div\n    /* \"#utility.yul\":3432:3436   */\n  dup3\n    /* \"#utility.yul\":3429:3456   */\n  gt\n    /* \"#utility.yul\":3426:3479   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":3459:3477   */\n  tag_90\n  tag_51\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3509:3516   */\n  dup1\n    /* \"#utility.yul\":3499:3507   */\n  dup6\n    /* \"#utility.yul\":3495:3517   */\n  and\n    /* \"#utility.yul\":3492:3547   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3529:3545   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3492:3547   */\ntag_91:\n    /* \"#utility.yul\":3608:3630   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3568:3583   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3370:3640   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":3374:3377   */\n  pop\n    /* \"#utility.yul\":3230:3646   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3651:4457   */\ntag_53:\n    /* \"#utility.yul\":3700:3705   */\n  0x00\n    /* \"#utility.yul\":3730:3738   */\n  dup3\n    /* \"#utility.yul\":3720:3800   */\n  tag_93\n  jumpi\n  pop\n    /* \"#utility.yul\":3771:3772   */\n  0x01\n    /* \"#utility.yul\":3785:3790   */\n  jump(tag_92)\n    /* \"#utility.yul\":3720:3800   */\ntag_93:\n    /* \"#utility.yul\":3819:3823   */\n  dup2\n    /* \"#utility.yul\":3809:3885   */\n  tag_94\n  jumpi\n  pop\n    /* \"#utility.yul\":3856:3857   */\n  0x00\n    /* \"#utility.yul\":3870:3875   */\n  jump(tag_92)\n    /* \"#utility.yul\":3809:3885   */\ntag_94:\n    /* \"#utility.yul\":3901:3905   */\n  dup2\n    /* \"#utility.yul\":3919:3920   */\n  0x01\n    /* \"#utility.yul\":3914:3973   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3987:3988   */\n  0x02\n    /* \"#utility.yul\":3982:4112   */\n  dup2\n  eq\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3894:4112   */\n  jump(tag_95)\n    /* \"#utility.yul\":3914:3973   */\ntag_96:\n    /* \"#utility.yul\":3944:3945   */\n  0x01\n    /* \"#utility.yul\":3935:3945   */\n  swap2\n  pop\n    /* \"#utility.yul\":3958:3963   */\n  pop\n  jump(tag_92)\n    /* \"#utility.yul\":3982:4112   */\ntag_97:\n    /* \"#utility.yul\":4019:4022   */\n  0xff\n    /* \"#utility.yul\":4009:4017   */\n  dup5\n    /* \"#utility.yul\":4006:4023   */\n  gt\n    /* \"#utility.yul\":4003:4046   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4026:4044   */\n  tag_99\n  tag_51\n  jump\t// in\ntag_99:\n  pop\n  pop\n    /* \"#utility.yul\":4082:4083   */\n  0x01\n    /* \"#utility.yul\":4068:4084   */\n  dup3\n  shl\n    /* \"#utility.yul\":4097:4102   */\n  jump(tag_92)\n    /* \"#utility.yul\":3894:4112   */\ntag_95:\n  pop\n    /* \"#utility.yul\":4196:4198   */\n  0x20\n    /* \"#utility.yul\":4186:4194   */\n  dup4\n    /* \"#utility.yul\":4183:4199   */\n  lt\n    /* \"#utility.yul\":4177:4180   */\n  0x0133\n    /* \"#utility.yul\":4171:4175   */\n  dup4\n    /* \"#utility.yul\":4168:4181   */\n  lt\n    /* \"#utility.yul\":4164:4200   */\n  and\n    /* \"#utility.yul\":4158:4160   */\n  0x4e\n    /* \"#utility.yul\":4148:4156   */\n  dup5\n    /* \"#utility.yul\":4145:4161   */\n  lt\n    /* \"#utility.yul\":4140:4142   */\n  0x0b\n    /* \"#utility.yul\":4134:4138   */\n  dup5\n    /* \"#utility.yul\":4131:4143   */\n  lt\n    /* \"#utility.yul\":4127:4162   */\n  and\n    /* \"#utility.yul\":4124:4201   */\n  or\n    /* \"#utility.yul\":4121:4280   */\n  iszero\n  tag_100\n  jumpi\n  pop\n    /* \"#utility.yul\":4233:4252   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4265:4270   */\n  jump(tag_92)\n    /* \"#utility.yul\":4121:4280   */\ntag_100:\n    /* \"#utility.yul\":4312:4346   */\n  tag_101\n    /* \"#utility.yul\":4337:4345   */\n  dup4\n    /* \"#utility.yul\":4331:4335   */\n  dup4\n    /* \"#utility.yul\":4312:4346   */\n  tag_52\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4382:4388   */\n  dup1\n    /* \"#utility.yul\":4378:4379   */\n  0x00\n    /* \"#utility.yul\":4374:4380   */\n  not\n    /* \"#utility.yul\":4370:4389   */\n  div\n    /* \"#utility.yul\":4361:4368   */\n  dup3\n    /* \"#utility.yul\":4358:4390   */\n  gt\n    /* \"#utility.yul\":4355:4413   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4393:4411   */\n  tag_103\n  tag_51\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4431:4451   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3651:4457   */\ntag_92:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4462:4602   */\ntag_22:\n    /* \"#utility.yul\":4520:4525   */\n  0x00\n    /* \"#utility.yul\":4549:4596   */\n  tag_105\n    /* \"#utility.yul\":4590:4594   */\n  0xff\n    /* \"#utility.yul\":4580:4588   */\n  dup5\n    /* \"#utility.yul\":4576:4595   */\n  and\n    /* \"#utility.yul\":4570:4574   */\n  dup4\n    /* \"#utility.yul\":4549:4596   */\n  tag_53\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4540:4596   */\n  swap4\n    /* \"#utility.yul\":4462:4602   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4607:4775   */\ntag_24:\n    /* \"#utility.yul\":4680:4689   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4711:4720   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4728:4743   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4722:4744   */\n  dup5\n  eq\n    /* \"#utility.yul\":4708:4745   */\n  or\n    /* \"#utility.yul\":4698:4769   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4749:4767   */\n  tag_92\n  tag_51\n  jump\t// in\n    /* \"#utility.yul\":4780:4905   */\ntag_37:\n    /* \"#utility.yul\":4845:4854   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4866:4876   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4863:4899   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4879:4897   */\n  tag_92\n  tag_51\n  jump\t// in\n    /* \"#utility.yul\":5260:5437   */\ntag_54:\n    /* \"contracts/StudyToken.sol\":243:2044  contract StudyToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StudyToken.sol\":243:2044  contract StudyToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf46eccc4\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x983b2d56\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9a49090e\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x3092afd5\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x3092afd5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"contracts/StudyToken.sol\":1402:1594  function removeMinter(address minter) external onlyOwner {... */\n    tag_7:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":2044:2080   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2032:2034   */\n      0x20\n        /* \"#utility.yul\":2017:2035   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_24\n        /* \"#utility.yul\":1902:2086   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_32\n      tag_50\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2237:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_22\n      tag_60\n      jump\t// in\n        /* \"contracts/StudyToken.sol\":1029:1285  function addMinter(address minter) external onlyOwner {... */\n    tag_13:\n      tag_41\n      tag_63\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"contracts/StudyToken.sol\":1805:2042  function mintReward(address to, uint256 amount) external {... */\n    tag_14:\n      tag_41\n      tag_66\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_26\n      tag_69\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_32\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_41\n      tag_78\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/StudyToken.sol\":378:417  mapping(address => bool) public minters */\n    tag_18:\n      tag_26\n      tag_81\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_81:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_86\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_91:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_101:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StudyToken.sol\":1402:1594  function removeMinter(address minter) external onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyToken.sol\":1477:1492  minters[minter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyToken.sol\":1477:1484  minters */\n      0x06\n        /* \"contracts/StudyToken.sol\":1477:1492  minters[minter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/StudyToken.sol\":1469:1509  require(minters[minter], \"Not a minter\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3151:3153   */\n      0x20\n        /* \"contracts/StudyToken.sol\":1469:1509  require(minters[minter], \"Not a minter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3133:3154   */\n      mstore\n        /* \"#utility.yul\":3190:3192   */\n      0x0c\n        /* \"#utility.yul\":3170:3188   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3163:3193   */\n      mstore\n      shl(0xa1, 0x2737ba10309036b4b73a32b9)\n        /* \"#utility.yul\":3209:3227   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3202:3244   */\n      mstore\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      add\n        /* \"contracts/StudyToken.sol\":1469:1509  require(minters[minter], \"Not a minter\") */\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyToken.sol\":1528:1543  minters[minter] */\n      dup2\n      and\n        /* \"contracts/StudyToken.sol\":1546:1551  false */\n      0x00\n        /* \"contracts/StudyToken.sol\":1528:1543  minters[minter] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/StudyToken.sol\":1528:1535  minters */\n      0x06\n        /* \"contracts/StudyToken.sol\":1528:1543  minters[minter] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/StudyToken.sol\":1528:1551  minters[minter] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/StudyToken.sol\":1566:1587  MinterRemoved(minter) */\n      mload\n      0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692\n      swap2\n        /* \"contracts/StudyToken.sol\":1546:1551  false */\n      swap1\n        /* \"contracts/StudyToken.sol\":1566:1587  MinterRemoved(minter) */\n      log2\n        /* \"contracts/StudyToken.sol\":1402:1594  function removeMinter(address minter) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n        /* \"contracts/StudyToken.sol\":1029:1285  function addMinter(address minter) external onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyToken.sol\":1101:1121  minter != address(0) */\n      dup2\n      and\n        /* \"contracts/StudyToken.sol\":1093:1148  require(minter != address(0), \"Invalid minter address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3492:3494   */\n      0x20\n        /* \"contracts/StudyToken.sol\":1093:1148  require(minter != address(0), \"Invalid minter address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3474:3495   */\n      mstore\n        /* \"#utility.yul\":3531:3533   */\n      0x16\n        /* \"#utility.yul\":3511:3529   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3504:3534   */\n      mstore\n      shl(0x50, 0x496e76616c6964206d696e7465722061646472657373)\n        /* \"#utility.yul\":3550:3568   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3543:3595   */\n      mstore\n        /* \"#utility.yul\":3612:3630   */\n      0x64\n      add\n        /* \"contracts/StudyToken.sol\":1093:1148  require(minter != address(0), \"Invalid minter address\") */\n      tag_108\n        /* \"#utility.yul\":3290:3636   */\n      jump\n        /* \"contracts/StudyToken.sol\":1093:1148  require(minter != address(0), \"Invalid minter address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyToken.sol\":1167:1182  minters[minter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyToken.sol\":1167:1174  minters */\n      0x06\n        /* \"contracts/StudyToken.sol\":1167:1182  minters[minter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/StudyToken.sol\":1166:1182  !minters[minter] */\n      iszero\n        /* \"contracts/StudyToken.sol\":1158:1203  require(!minters[minter], \"Already a minter\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3843:3845   */\n      0x20\n        /* \"contracts/StudyToken.sol\":1158:1203  require(!minters[minter], \"Already a minter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3825:3846   */\n      mstore\n        /* \"#utility.yul\":3882:3884   */\n      0x10\n        /* \"#utility.yul\":3862:3880   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3855:3885   */\n      mstore\n      shl(0x81, 0x20b63932b0b23c90309036b4b73a32b9)\n        /* \"#utility.yul\":3901:3919   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3894:3940   */\n      mstore\n        /* \"#utility.yul\":3957:3975   */\n      0x64\n      add\n        /* \"contracts/StudyToken.sol\":1158:1203  require(!minters[minter], \"Already a minter\") */\n      tag_108\n        /* \"#utility.yul\":3641:3981   */\n      jump\n        /* \"contracts/StudyToken.sol\":1158:1203  require(!minters[minter], \"Already a minter\") */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyToken.sol\":1222:1237  minters[minter] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/StudyToken.sol\":1222:1229  minters */\n      0x06\n        /* \"contracts/StudyToken.sol\":1222:1237  minters[minter] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/StudyToken.sol\":1222:1244  minters[minter] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/StudyToken.sol\":1240:1244  true */\n      0x01\n        /* \"contracts/StudyToken.sol\":1222:1244  minters[minter] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/StudyToken.sol\":1259:1278  MinterAdded(minter) */\n      mload\n      0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n      swap2\n        /* \"contracts/StudyToken.sol\":1222:1237  minters[minter] */\n      swap1\n        /* \"contracts/StudyToken.sol\":1259:1278  MinterAdded(minter) */\n      log2\n        /* \"contracts/StudyToken.sol\":1029:1285  function addMinter(address minter) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StudyToken.sol\":1805:2042  function mintReward(address to, uint256 amount) external {... */\n    tag_67:\n        /* \"contracts/StudyToken.sol\":1888:1898  msg.sender */\n      caller\n        /* \"contracts/StudyToken.sol\":1880:1899  minters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyToken.sol\":1880:1887  minters */\n      0x06\n        /* \"contracts/StudyToken.sol\":1880:1899  minters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/StudyToken.sol\":1872:1933  require(minters[msg.sender], \"Only minters can mint rewards\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4188:4190   */\n      0x20\n        /* \"contracts/StudyToken.sol\":1872:1933  require(minters[msg.sender], \"Only minters can mint rewards\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4170:4191   */\n      mstore\n        /* \"#utility.yul\":4227:4229   */\n      0x1d\n        /* \"#utility.yul\":4207:4225   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4200:4230   */\n      mstore\n        /* \"#utility.yul\":4266:4297   */\n      0x4f6e6c79206d696e746572732063616e206d696e742072657761726473000000\n        /* \"#utility.yul\":4246:4264   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4239:4298   */\n      mstore\n        /* \"#utility.yul\":4315:4333   */\n      0x64\n      add\n        /* \"contracts/StudyToken.sol\":1872:1933  require(minters[msg.sender], \"Only minters can mint rewards\") */\n      tag_108\n        /* \"#utility.yul\":3986:4339   */\n      jump\n        /* \"contracts/StudyToken.sol\":1872:1933  require(minters[msg.sender], \"Only minters can mint rewards\") */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyToken.sol\":1951:1967  to != address(0) */\n      dup3\n      and\n        /* \"contracts/StudyToken.sol\":1943:1999  require(to != address(0), \"Cannot mint to zero address\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4546:4548   */\n      0x20\n        /* \"contracts/StudyToken.sol\":1943:1999  require(to != address(0), \"Cannot mint to zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4528:4549   */\n      mstore\n        /* \"#utility.yul\":4585:4587   */\n      0x1b\n        /* \"#utility.yul\":4565:4583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4558:4588   */\n      mstore\n        /* \"#utility.yul\":4624:4653   */\n      0x43616e6e6f74206d696e7420746f207a65726f20616464726573730000000000\n        /* \"#utility.yul\":4604:4622   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4597:4654   */\n      mstore\n        /* \"#utility.yul\":4671:4689   */\n      0x64\n      add\n        /* \"contracts/StudyToken.sol\":1943:1999  require(to != address(0), \"Cannot mint to zero address\") */\n      tag_108\n        /* \"#utility.yul\":4344:4695   */\n      jump\n        /* \"contracts/StudyToken.sol\":1943:1999  require(to != address(0), \"Cannot mint to zero address\") */\n    tag_137:\n        /* \"contracts/StudyToken.sol\":2018:2035  _mint(to, amount) */\n      tag_140\n        /* \"contracts/StudyToken.sol\":2024:2026  to */\n      dup3\n        /* \"contracts/StudyToken.sol\":2028:2034  amount */\n      dup3\n        /* \"contracts/StudyToken.sol\":2018:2023  _mint */\n      tag_141\n        /* \"contracts/StudyToken.sol\":2018:2035  _mint(to, amount) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/StudyToken.sol\":1805:2042  function mintReward(address to, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_108\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4920:4952   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4902:4953   */\n      mstore\n        /* \"#utility.yul\":4969:4987   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4962:4996   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5012:5030   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5005:5039   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4875:4893   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_108\n        /* \"#utility.yul\":4700:5045   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_108\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_108\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_108\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      tag_108\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_108\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_108\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_187\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_192\n      swap1\n      pop\n      jump\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4920:4952   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4902:4953   */\n      mstore\n        /* \"#utility.yul\":4969:4987   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4962:4996   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5012:5030   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5005:5039   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4875:4893   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_108\n        /* \"#utility.yul\":4700:5045   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_196)\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_197\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_25:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_201:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_201)\n    tag_203:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_198:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_205:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_28:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_207:\n        /* \"#utility.yul\":913:942   */\n      tag_208\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_198\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_38:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_212:\n        /* \"#utility.yul\":1563:1592   */\n      tag_213\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_198\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_214\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_198\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1711:1897   */\n    tag_43:\n        /* \"#utility.yul\":1770:1776   */\n      0x00\n        /* \"#utility.yul\":1823:1825   */\n      0x20\n        /* \"#utility.yul\":1811:1820   */\n      dup3\n        /* \"#utility.yul\":1802:1809   */\n      dup5\n        /* \"#utility.yul\":1798:1821   */\n      sub\n        /* \"#utility.yul\":1794:1826   */\n      slt\n        /* \"#utility.yul\":1791:1843   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1836:1837   */\n      dup1\n        /* \"#utility.yul\":1829:1841   */\n      revert\n        /* \"#utility.yul\":1791:1843   */\n    tag_216:\n        /* \"#utility.yul\":1862:1891   */\n      tag_217\n        /* \"#utility.yul\":1881:1890   */\n      dup3\n        /* \"#utility.yul\":1862:1891   */\n      tag_198\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1852:1891   */\n      swap4\n        /* \"#utility.yul\":1711:1897   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2559   */\n    tag_74:\n        /* \"#utility.yul\":2367:2373   */\n      0x00\n        /* \"#utility.yul\":2375:2381   */\n      dup1\n        /* \"#utility.yul\":2428:2430   */\n      0x40\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2407:2414   */\n      dup6\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2448   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      dup1\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2396:2448   */\n    tag_221:\n        /* \"#utility.yul\":2467:2496   */\n      tag_222\n        /* \"#utility.yul\":2486:2495   */\n      dup4\n        /* \"#utility.yul\":2467:2496   */\n      tag_198\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2457:2496   */\n      swap2\n      pop\n        /* \"#utility.yul\":2515:2553   */\n      tag_223\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup5\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2515:2553   */\n      tag_198\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2505:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2299:2559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:2944   */\n    tag_86:\n        /* \"#utility.yul\":2643:2644   */\n      0x01\n        /* \"#utility.yul\":2639:2651   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2686:2698   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2707:2768   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2761:2765   */\n      0x7f\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2749:2766   */\n      and\n        /* \"#utility.yul\":2739:2766   */\n      swap2\n      pop\n        /* \"#utility.yul\":2707:2768   */\n    tag_225:\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2806:2812   */\n      dup3\n        /* \"#utility.yul\":2803:2817   */\n      lt\n        /* \"#utility.yul\":2783:2801   */\n      dup2\n        /* \"#utility.yul\":2780:2818   */\n      sub\n        /* \"#utility.yul\":2777:2938   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2860:2870   */\n      0x4e487b71\n        /* \"#utility.yul\":2855:2858   */\n      0xe0\n        /* \"#utility.yul\":2851:2871   */\n      shl\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2872   */\n      mstore\n        /* \"#utility.yul\":2895:2899   */\n      0x22\n        /* \"#utility.yul\":2892:2893   */\n      0x04\n        /* \"#utility.yul\":2885:2900   */\n      mstore\n        /* \"#utility.yul\":2923:2927   */\n      0x24\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2913:2928   */\n      revert\n        /* \"#utility.yul\":2777:2938   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":2564:2944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5050:5272   */\n    tag_191:\n        /* \"#utility.yul\":5115:5124   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5136:5146   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5133:5266   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":5188:5198   */\n      0x4e487b71\n        /* \"#utility.yul\":5183:5186   */\n      0xe0\n        /* \"#utility.yul\":5179:5199   */\n      shl\n        /* \"#utility.yul\":5176:5177   */\n      0x00\n        /* \"#utility.yul\":5169:5200   */\n      mstore\n        /* \"#utility.yul\":5223:5227   */\n      0x11\n        /* \"#utility.yul\":5220:5221   */\n      0x04\n        /* \"#utility.yul\":5213:5228   */\n      mstore\n        /* \"#utility.yul\":5251:5255   */\n      0x24\n        /* \"#utility.yul\":5248:5249   */\n      0x00\n        /* \"#utility.yul\":5241:5256   */\n      revert\n\n    auxdata: 0xa26469706673582212207103a6c20b4044d427fa569635fd9bf43dd99a0799dc358a49ef48cfe248503464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 336,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 255,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 396,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5439:8",
										"nodeType": "YulBlock",
										"src": "0:5439:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:103:8",
													"nodeType": "YulBlock",
													"src": "95:103:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:8",
																"nodeType": "YulBlock",
																"src": "141:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:8",
																					"nodeType": "YulLiteral",
																					"src": "150:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:8",
																					"nodeType": "YulLiteral",
																					"src": "153:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:8"
																			},
																			"nativeSrc": "143:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:8"
																		},
																		"nativeSrc": "143:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:8"
																		},
																		"nativeSrc": "112:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "137:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:8"
																},
																"nativeSrc": "108:32:8",
																"nodeType": "YulFunctionCall",
																"src": "108:32:8"
															},
															"nativeSrc": "105:52:8",
															"nodeType": "YulIf",
															"src": "105:52:8"
														},
														{
															"nativeSrc": "166:26:8",
															"nodeType": "YulAssignment",
															"src": "166:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "182:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "176:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:8"
																},
																"nativeSrc": "176:16:8",
																"nodeType": "YulFunctionCall",
																"src": "176:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "166:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "14:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:8",
														"nodeType": "YulTypedName",
														"src": "61:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:8",
														"nodeType": "YulTypedName",
														"src": "72:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:8",
														"nodeType": "YulTypedName",
														"src": "84:6:8",
														"type": ""
													}
												],
												"src": "14:184:8"
											},
											{
												"body": {
													"nativeSrc": "235:95:8",
													"nodeType": "YulBlock",
													"src": "235:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "252:1:8",
																		"nodeType": "YulLiteral",
																		"src": "252:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "259:3:8",
																				"nodeType": "YulLiteral",
																				"src": "259:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "264:10:8",
																				"nodeType": "YulLiteral",
																				"src": "264:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "255:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:8"
																		},
																		"nativeSrc": "255:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "255:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "245:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "245:6:8"
																},
																"nativeSrc": "245:31:8",
																"nodeType": "YulFunctionCall",
																"src": "245:31:8"
															},
															"nativeSrc": "245:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "245:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "292:1:8",
																		"nodeType": "YulLiteral",
																		"src": "292:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "295:4:8",
																		"nodeType": "YulLiteral",
																		"src": "295:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "285:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "285:6:8"
																},
																"nativeSrc": "285:15:8",
																"nodeType": "YulFunctionCall",
																"src": "285:15:8"
															},
															"nativeSrc": "285:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "285:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "316:1:8",
																		"nodeType": "YulLiteral",
																		"src": "316:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "319:4:8",
																		"nodeType": "YulLiteral",
																		"src": "319:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "309:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "309:6:8"
																},
																"nativeSrc": "309:15:8",
																"nodeType": "YulFunctionCall",
																"src": "309:15:8"
															},
															"nativeSrc": "309:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "309:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "203:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "203:127:8"
											},
											{
												"body": {
													"nativeSrc": "390:325:8",
													"nodeType": "YulBlock",
													"src": "390:325:8",
													"statements": [
														{
															"nativeSrc": "400:22:8",
															"nodeType": "YulAssignment",
															"src": "400:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "414:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "417:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "417:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "410:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "410:3:8"
																},
																"nativeSrc": "410:12:8",
																"nodeType": "YulFunctionCall",
																"src": "410:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "400:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:8"
																}
															]
														},
														{
															"nativeSrc": "431:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "431:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "461:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "461:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "467:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "457:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:8"
																},
																"nativeSrc": "457:12:8",
																"nodeType": "YulFunctionCall",
																"src": "457:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "435:18:8",
																	"nodeType": "YulTypedName",
																	"src": "435:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "508:31:8",
																"nodeType": "YulBlock",
																"src": "508:31:8",
																"statements": [
																	{
																		"nativeSrc": "510:27:8",
																		"nodeType": "YulAssignment",
																		"src": "510:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "524:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "524:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "532:4:8",
																					"nodeType": "YulLiteral",
																					"src": "532:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "520:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "520:3:8"
																			},
																			"nativeSrc": "520:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "520:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "510:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "510:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "488:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "488:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "481:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:8"
																},
																"nativeSrc": "481:26:8",
																"nodeType": "YulFunctionCall",
																"src": "481:26:8"
															},
															"nativeSrc": "478:61:8",
															"nodeType": "YulIf",
															"src": "478:61:8"
														},
														{
															"body": {
																"nativeSrc": "598:111:8",
																"nodeType": "YulBlock",
																"src": "598:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "619:1:8",
																					"nodeType": "YulLiteral",
																					"src": "619:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "626:3:8",
																							"nodeType": "YulLiteral",
																							"src": "626:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "631:10:8",
																							"nodeType": "YulLiteral",
																							"src": "631:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "622:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "622:3:8"
																					},
																					"nativeSrc": "622:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "622:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "612:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:8"
																			},
																			"nativeSrc": "612:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "612:31:8"
																		},
																		"nativeSrc": "612:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "612:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "663:1:8",
																					"nodeType": "YulLiteral",
																					"src": "663:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "666:4:8",
																					"nodeType": "YulLiteral",
																					"src": "666:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "656:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:6:8"
																			},
																			"nativeSrc": "656:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "656:15:8"
																		},
																		"nativeSrc": "656:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "656:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "691:1:8",
																					"nodeType": "YulLiteral",
																					"src": "691:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "694:4:8",
																					"nodeType": "YulLiteral",
																					"src": "694:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "684:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "684:6:8"
																			},
																			"nativeSrc": "684:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "684:15:8"
																		},
																		"nativeSrc": "684:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "684:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "554:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "554:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "577:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "585:2:8",
																				"nodeType": "YulLiteral",
																				"src": "585:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "574:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "574:2:8"
																		},
																		"nativeSrc": "574:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "574:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "551:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "551:2:8"
																},
																"nativeSrc": "551:38:8",
																"nodeType": "YulFunctionCall",
																"src": "551:38:8"
															},
															"nativeSrc": "548:161:8",
															"nodeType": "YulIf",
															"src": "548:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "335:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "370:4:8",
														"nodeType": "YulTypedName",
														"src": "370:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "379:6:8",
														"nodeType": "YulTypedName",
														"src": "379:6:8",
														"type": ""
													}
												],
												"src": "335:380:8"
											},
											{
												"body": {
													"nativeSrc": "776:65:8",
													"nodeType": "YulBlock",
													"src": "776:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "793:1:8",
																		"nodeType": "YulLiteral",
																		"src": "793:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "796:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "796:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "786:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:8"
																},
																"nativeSrc": "786:14:8",
																"nodeType": "YulFunctionCall",
																"src": "786:14:8"
															},
															"nativeSrc": "786:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "786:14:8"
														},
														{
															"nativeSrc": "809:26:8",
															"nodeType": "YulAssignment",
															"src": "809:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "827:1:8",
																		"nodeType": "YulLiteral",
																		"src": "827:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:4:8",
																		"nodeType": "YulLiteral",
																		"src": "830:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "817:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "817:9:8"
																},
																"nativeSrc": "817:18:8",
																"nodeType": "YulFunctionCall",
																"src": "817:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "809:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "720:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "759:3:8",
														"nodeType": "YulTypedName",
														"src": "759:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "767:4:8",
														"nodeType": "YulTypedName",
														"src": "767:4:8",
														"type": ""
													}
												],
												"src": "720:121:8"
											},
											{
												"body": {
													"nativeSrc": "927:437:8",
													"nodeType": "YulBlock",
													"src": "927:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "960:398:8",
																"nodeType": "YulBlock",
																"src": "960:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "981:1:8",
																					"nodeType": "YulLiteral",
																					"src": "981:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "984:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "984:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "974:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "974:6:8"
																			},
																			"nativeSrc": "974:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "974:16:8"
																		},
																		"nativeSrc": "974:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "974:16:8"
																	},
																	{
																		"nativeSrc": "1003:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1003:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1025:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1025:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1028:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1028:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1015:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:8"
																			},
																			"nativeSrc": "1015:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1015:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1007:4:8",
																				"nodeType": "YulTypedName",
																				"src": "1007:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1046:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1046:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1069:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1069:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1079:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1079:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1086:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1086:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1098:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1098:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1082:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:8"
																							},
																							"nativeSrc": "1082:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1075:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1075:3:8"
																					},
																					"nativeSrc": "1075:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1075:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1065:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:8"
																			},
																			"nativeSrc": "1065:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1065:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1050:11:8",
																				"nodeType": "YulTypedName",
																				"src": "1050:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1140:23:8",
																			"nodeType": "YulBlock",
																			"src": "1140:23:8",
																			"statements": [
																				{
																					"nativeSrc": "1142:19:8",
																					"nodeType": "YulAssignment",
																					"src": "1142:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1157:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1157:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1142:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "1142:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1122:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "1122:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1119:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1119:2:8"
																			},
																			"nativeSrc": "1119:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1119:20:8"
																		},
																		"nativeSrc": "1116:47:8",
																		"nodeType": "YulIf",
																		"src": "1116:47:8"
																	},
																	{
																		"nativeSrc": "1176:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1176:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1190:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1190:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1200:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1200:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1207:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1207:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1212:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1212:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1203:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1203:3:8"
																							},
																							"nativeSrc": "1203:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1203:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1196:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1196:3:8"
																					},
																					"nativeSrc": "1196:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1196:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1186:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1186:3:8"
																			},
																			"nativeSrc": "1186:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1186:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1180:2:8",
																				"nodeType": "YulTypedName",
																				"src": "1180:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1230:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1230:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1243:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "1243:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1234:5:8",
																				"nodeType": "YulTypedName",
																				"src": "1234:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1328:20:8",
																			"nodeType": "YulBlock",
																			"src": "1328:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1337:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1337:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1344:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1344:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1330:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1330:6:8"
																						},
																						"nativeSrc": "1330:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1330:16:8"
																					},
																					"nativeSrc": "1330:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "1330:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1278:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1278:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1285:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1285:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1275:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1275:2:8"
																			},
																			"nativeSrc": "1275:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1275:13:8"
																		},
																		"nativeSrc": "1267:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1289:26:8",
																			"nodeType": "YulBlock",
																			"src": "1289:26:8",
																			"statements": [
																				{
																					"nativeSrc": "1291:22:8",
																					"nodeType": "YulAssignment",
																					"src": "1291:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1304:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1304:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1311:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1311:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1300:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:8"
																						},
																						"nativeSrc": "1300:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1291:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1291:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1271:3:8",
																			"nodeType": "YulBlock",
																			"src": "1271:3:8",
																			"statements": []
																		},
																		"src": "1267:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "943:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "943:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:2:8",
																		"nodeType": "YulLiteral",
																		"src": "948:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "940:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "940:2:8"
																},
																"nativeSrc": "940:11:8",
																"nodeType": "YulFunctionCall",
																"src": "940:11:8"
															},
															"nativeSrc": "937:421:8",
															"nodeType": "YulIf",
															"src": "937:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "846:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "899:5:8",
														"nodeType": "YulTypedName",
														"src": "899:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "906:3:8",
														"nodeType": "YulTypedName",
														"src": "906:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "911:10:8",
														"nodeType": "YulTypedName",
														"src": "911:10:8",
														"type": ""
													}
												],
												"src": "846:518:8"
											},
											{
												"body": {
													"nativeSrc": "1454:81:8",
													"nodeType": "YulBlock",
													"src": "1454:81:8",
													"statements": [
														{
															"nativeSrc": "1464:65:8",
															"nodeType": "YulAssignment",
															"src": "1464:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1479:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1479:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1497:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1497:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1500:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1500:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1493:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1493:3:8"
																								},
																								"nativeSrc": "1493:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1493:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1510:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1510:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1506:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1506:3:8"
																								},
																								"nativeSrc": "1506:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1506:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1489:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1489:3:8"
																						},
																						"nativeSrc": "1489:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1489:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1485:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1485:3:8"
																				},
																				"nativeSrc": "1485:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1485:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1475:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:8"
																		},
																		"nativeSrc": "1475:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1475:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1521:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1521:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1524:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1524:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1517:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:8"
																		},
																		"nativeSrc": "1517:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1472:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1472:2:8"
																},
																"nativeSrc": "1472:57:8",
																"nodeType": "YulFunctionCall",
																"src": "1472:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1464:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1464:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1369:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1431:4:8",
														"nodeType": "YulTypedName",
														"src": "1431:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1437:3:8",
														"nodeType": "YulTypedName",
														"src": "1437:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1445:4:8",
														"nodeType": "YulTypedName",
														"src": "1445:4:8",
														"type": ""
													}
												],
												"src": "1369:166:8"
											},
											{
												"body": {
													"nativeSrc": "1636:1249:8",
													"nodeType": "YulBlock",
													"src": "1636:1249:8",
													"statements": [
														{
															"nativeSrc": "1646:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1646:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1666:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1666:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1660:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1660:5:8"
																},
																"nativeSrc": "1660:10:8",
																"nodeType": "YulFunctionCall",
																"src": "1660:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1650:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1650:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1713:22:8",
																"nodeType": "YulBlock",
																"src": "1713:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1715:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1715:16:8"
																			},
																			"nativeSrc": "1715:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1715:18:8"
																		},
																		"nativeSrc": "1715:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1715:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1685:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1685:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1701:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1701:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1705:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1705:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1697:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1697:3:8"
																				},
																				"nativeSrc": "1697:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1697:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1709:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1709:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1693:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1693:3:8"
																		},
																		"nativeSrc": "1693:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1693:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1682:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1682:2:8"
																},
																"nativeSrc": "1682:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1682:30:8"
															},
															"nativeSrc": "1679:56:8",
															"nodeType": "YulIf",
															"src": "1679:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1788:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1788:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1826:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1826:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1820:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1820:5:8"
																				},
																				"nativeSrc": "1820:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1820:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1794:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "1794:25:8"
																		},
																		"nativeSrc": "1794:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1794:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1834:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1834:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1744:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1744:43:8"
																},
																"nativeSrc": "1744:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1744:97:8"
															},
															"nativeSrc": "1744:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "1744:97:8"
														},
														{
															"nativeSrc": "1850:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1850:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1867:1:8",
																"nodeType": "YulLiteral",
																"src": "1867:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1854:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1854:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1877:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1877:23:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1896:4:8",
																"nodeType": "YulLiteral",
																"src": "1896:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1881:11:8",
																	"nodeType": "YulTypedName",
																	"src": "1881:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1909:17:8",
															"nodeType": "YulAssignment",
															"src": "1909:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1922:4:8",
																"nodeType": "YulLiteral",
																"src": "1922:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1909:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1909:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1972:656:8",
																		"nodeType": "YulBlock",
																		"src": "1972:656:8",
																		"statements": [
																			{
																				"nativeSrc": "1986:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1986:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2005:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2005:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2017:2:8",
																									"nodeType": "YulLiteral",
																									"src": "2017:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2013:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2013:3:8"
																							},
																							"nativeSrc": "2013:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2013:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2001:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2001:3:8"
																					},
																					"nativeSrc": "2001:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2001:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1990:7:8",
																						"nodeType": "YulTypedName",
																						"src": "1990:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2034:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2034:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2078:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2078:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2048:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "2048:29:8"
																					},
																					"nativeSrc": "2048:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2048:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2038:6:8",
																						"nodeType": "YulTypedName",
																						"src": "2038:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2096:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2096:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2105:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2105:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2100:1:8",
																						"nodeType": "YulTypedName",
																						"src": "2100:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2183:172:8",
																					"nodeType": "YulBlock",
																					"src": "2183:172:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2208:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2208:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2226:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "2226:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2231:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "2231:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2222:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2222:3:8"
																												},
																												"nativeSrc": "2222:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2222:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2216:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "2216:5:8"
																										},
																										"nativeSrc": "2216:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2216:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2201:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2201:6:8"
																								},
																								"nativeSrc": "2201:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2201:42:8"
																							},
																							"nativeSrc": "2201:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2201:42:8"
																						},
																						{
																							"nativeSrc": "2260:24:8",
																							"nodeType": "YulAssignment",
																							"src": "2260:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2274:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2274:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2282:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2282:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2270:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2270:3:8"
																								},
																								"nativeSrc": "2270:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2270:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2260:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2260:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2301:40:8",
																							"nodeType": "YulAssignment",
																							"src": "2301:40:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2318:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "2318:9:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2329:11:8",
																										"nodeType": "YulIdentifier",
																										"src": "2329:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2314:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2314:3:8"
																								},
																								"nativeSrc": "2314:27:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2314:27:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2301:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2301:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2130:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "2130:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2133:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2133:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2127:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2127:2:8"
																					},
																					"nativeSrc": "2127:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2127:14:8"
																				},
																				"nativeSrc": "2119:236:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2142:28:8",
																					"nodeType": "YulBlock",
																					"src": "2142:28:8",
																					"statements": [
																						{
																							"nativeSrc": "2144:24:8",
																							"nodeType": "YulAssignment",
																							"src": "2144:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2153:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "2153:1:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2156:11:8",
																										"nodeType": "YulIdentifier",
																										"src": "2156:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2149:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2149:3:8"
																								},
																								"nativeSrc": "2149:19:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2149:19:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2144:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "2144:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2123:3:8",
																					"nodeType": "YulBlock",
																					"src": "2123:3:8",
																					"statements": []
																				},
																				"src": "2119:236:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "2403:166:8",
																					"nodeType": "YulBlock",
																					"src": "2403:166:8",
																					"statements": [
																						{
																							"nativeSrc": "2421:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2421:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2448:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2448:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2453:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2453:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2444:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2444:3:8"
																										},
																										"nativeSrc": "2444:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2444:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2438:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2438:5:8"
																								},
																								"nativeSrc": "2438:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2438:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2425:9:8",
																									"nodeType": "YulTypedName",
																									"src": "2425:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2488:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2488:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2500:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2500:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2527:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "2527:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2530:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "2530:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2523:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "2523:3:8"
																																		},
																																		"nativeSrc": "2523:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2523:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2539:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2539:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2519:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2519:3:8"
																																},
																																"nativeSrc": "2519:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2519:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2549:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2549:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2545:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2545:3:8"
																																},
																																"nativeSrc": "2545:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2545:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2515:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "2515:3:8"
																														},
																														"nativeSrc": "2515:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "2515:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2511:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2511:3:8"
																												},
																												"nativeSrc": "2511:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2511:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2496:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2496:3:8"
																										},
																										"nativeSrc": "2496:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2496:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2481:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2481:6:8"
																								},
																								"nativeSrc": "2481:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2481:74:8"
																							},
																							"nativeSrc": "2481:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2481:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2374:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2374:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2383:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2383:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2371:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2371:2:8"
																					},
																					"nativeSrc": "2371:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2371:19:8"
																				},
																				"nativeSrc": "2368:201:8",
																				"nodeType": "YulIf",
																				"src": "2368:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2589:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2589:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2603:1:8",
																											"nodeType": "YulLiteral",
																											"src": "2603:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2606:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "2606:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2599:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2599:3:8"
																									},
																									"nativeSrc": "2599:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "2599:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2615:1:8",
																									"nodeType": "YulLiteral",
																									"src": "2615:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2595:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2595:3:8"
																							},
																							"nativeSrc": "2595:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2595:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2582:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2582:6:8"
																					},
																					"nativeSrc": "2582:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2582:36:8"
																				},
																				"nativeSrc": "2582:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2582:36:8"
																			}
																		]
																	},
																	"nativeSrc": "1965:663:8",
																	"nodeType": "YulCase",
																	"src": "1965:663:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1970:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1970:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2645:234:8",
																		"nodeType": "YulBlock",
																		"src": "2645:234:8",
																		"statements": [
																			{
																				"nativeSrc": "2659:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2659:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2672:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2672:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2663:5:8",
																						"nodeType": "YulTypedName",
																						"src": "2663:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2708:67:8",
																					"nodeType": "YulBlock",
																					"src": "2708:67:8",
																					"statements": [
																						{
																							"nativeSrc": "2726:35:8",
																							"nodeType": "YulAssignment",
																							"src": "2726:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2745:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2745:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2750:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2750:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2741:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2741:3:8"
																										},
																										"nativeSrc": "2741:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2741:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2735:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2735:5:8"
																								},
																								"nativeSrc": "2735:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2735:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2726:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2726:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2689:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2689:6:8"
																				},
																				"nativeSrc": "2686:89:8",
																				"nodeType": "YulIf",
																				"src": "2686:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2795:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2795:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2854:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2854:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2861:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2861:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2801:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "2801:52:8"
																							},
																							"nativeSrc": "2801:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2801:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2788:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2788:6:8"
																					},
																					"nativeSrc": "2788:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2788:81:8"
																				},
																				"nativeSrc": "2788:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2788:81:8"
																			}
																		]
																	},
																	"nativeSrc": "2637:242:8",
																	"nodeType": "YulCase",
																	"src": "2637:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1945:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1945:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1953:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1953:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1942:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1942:2:8"
																},
																"nativeSrc": "1942:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1942:14:8"
															},
															"nativeSrc": "1935:944:8",
															"nodeType": "YulSwitch",
															"src": "1935:944:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1540:1345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1621:4:8",
														"nodeType": "YulTypedName",
														"src": "1621:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1627:3:8",
														"nodeType": "YulTypedName",
														"src": "1627:3:8",
														"type": ""
													}
												],
												"src": "1540:1345:8"
											},
											{
												"body": {
													"nativeSrc": "2991:102:8",
													"nodeType": "YulBlock",
													"src": "2991:102:8",
													"statements": [
														{
															"nativeSrc": "3001:26:8",
															"nodeType": "YulAssignment",
															"src": "3001:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3013:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3013:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3024:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3024:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3009:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3009:3:8"
																},
																"nativeSrc": "3009:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3009:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3001:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3001:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3043:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3043:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3058:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3058:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3074:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3074:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3079:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3079:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3070:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3070:3:8"
																						},
																						"nativeSrc": "3070:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3070:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3083:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3083:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3066:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3066:3:8"
																				},
																				"nativeSrc": "3066:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3066:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3054:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:8"
																		},
																		"nativeSrc": "3054:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3054:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3036:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3036:6:8"
																},
																"nativeSrc": "3036:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3036:51:8"
															},
															"nativeSrc": "3036:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3036:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2890:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2960:9:8",
														"nodeType": "YulTypedName",
														"src": "2960:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2971:6:8",
														"nodeType": "YulTypedName",
														"src": "2971:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2982:4:8",
														"nodeType": "YulTypedName",
														"src": "2982:4:8",
														"type": ""
													}
												],
												"src": "2890:203:8"
											},
											{
												"body": {
													"nativeSrc": "3130:95:8",
													"nodeType": "YulBlock",
													"src": "3130:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3147:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3154:3:8",
																				"nodeType": "YulLiteral",
																				"src": "3154:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3159:10:8",
																				"nodeType": "YulLiteral",
																				"src": "3159:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3150:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:8"
																		},
																		"nativeSrc": "3150:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3150:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3140:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:8"
																},
																"nativeSrc": "3140:31:8",
																"nodeType": "YulFunctionCall",
																"src": "3140:31:8"
															},
															"nativeSrc": "3140:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "3140:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3187:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3187:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3190:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3190:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3180:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:8"
																},
																"nativeSrc": "3180:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3180:15:8"
															},
															"nativeSrc": "3180:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3180:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3211:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3211:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3214:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3214:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3204:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:8"
																},
																"nativeSrc": "3204:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3204:15:8"
															},
															"nativeSrc": "3204:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3204:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3098:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3098:127:8"
											},
											{
												"body": {
													"nativeSrc": "3294:352:8",
													"nodeType": "YulBlock",
													"src": "3294:352:8",
													"statements": [
														{
															"nativeSrc": "3304:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3304:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3319:1:8",
																"nodeType": "YulLiteral",
																"src": "3319:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3308:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3308:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3329:10:8",
															"nodeType": "YulAssignment",
															"src": "3329:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3338:1:8",
																"nodeType": "YulLiteral",
																"src": "3338:1:8",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3329:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3329:5:8"
																}
															]
														},
														{
															"nativeSrc": "3348:13:8",
															"nodeType": "YulAssignment",
															"src": "3348:13:8",
															"value": {
																"name": "_base",
																"nativeSrc": "3356:5:8",
																"nodeType": "YulIdentifier",
																"src": "3356:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3348:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3348:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3412:228:8",
																"nodeType": "YulBlock",
																"src": "3412:228:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3457:22:8",
																			"nodeType": "YulBlock",
																			"src": "3457:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3459:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "3459:16:8"
																						},
																						"nativeSrc": "3459:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3459:18:8"
																					},
																					"nativeSrc": "3459:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "3459:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3432:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3432:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3446:1:8",
																									"nodeType": "YulLiteral",
																									"src": "3446:1:8",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3442:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3442:3:8"
																							},
																							"nativeSrc": "3442:6:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3442:6:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3450:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3450:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3438:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3438:3:8"
																					},
																					"nativeSrc": "3438:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3438:17:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3429:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3429:2:8"
																			},
																			"nativeSrc": "3429:27:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3429:27:8"
																		},
																		"nativeSrc": "3426:53:8",
																		"nodeType": "YulIf",
																		"src": "3426:53:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "3518:29:8",
																			"nodeType": "YulBlock",
																			"src": "3518:29:8",
																			"statements": [
																				{
																					"nativeSrc": "3520:25:8",
																					"nodeType": "YulAssignment",
																					"src": "3520:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3533:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "3533:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3540:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "3540:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3529:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3529:3:8"
																						},
																						"nativeSrc": "3529:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3529:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3520:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "3520:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3499:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "3499:8:8"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3509:7:8",
																					"nodeType": "YulIdentifier",
																					"src": "3509:7:8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3495:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3495:3:8"
																			},
																			"nativeSrc": "3495:22:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3495:22:8"
																		},
																		"nativeSrc": "3492:55:8",
																		"nodeType": "YulIf",
																		"src": "3492:55:8"
																	},
																	{
																		"nativeSrc": "3560:23:8",
																		"nodeType": "YulAssignment",
																		"src": "3560:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3572:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3572:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3578:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3578:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3568:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3568:3:8"
																			},
																			"nativeSrc": "3568:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3568:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3560:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3560:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3596:34:8",
																		"nodeType": "YulAssignment",
																		"src": "3596:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3612:7:8",
																					"nodeType": "YulIdentifier",
																					"src": "3612:7:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3621:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "3621:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3608:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3608:3:8"
																			},
																			"nativeSrc": "3608:22:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3608:22:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3596:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3596:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3381:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3381:8:8"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3391:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3391:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3378:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3378:2:8"
																},
																"nativeSrc": "3378:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3378:21:8"
															},
															"nativeSrc": "3370:270:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3400:3:8",
																"nodeType": "YulBlock",
																"src": "3400:3:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3374:3:8",
																"nodeType": "YulBlock",
																"src": "3374:3:8",
																"statements": []
															},
															"src": "3370:270:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3230:416:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3258:5:8",
														"nodeType": "YulTypedName",
														"src": "3258:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3265:8:8",
														"nodeType": "YulTypedName",
														"src": "3265:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3278:5:8",
														"nodeType": "YulTypedName",
														"src": "3278:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3285:4:8",
														"nodeType": "YulTypedName",
														"src": "3285:4:8",
														"type": ""
													}
												],
												"src": "3230:416:8"
											},
											{
												"body": {
													"nativeSrc": "3710:747:8",
													"nodeType": "YulBlock",
													"src": "3710:747:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3748:52:8",
																"nodeType": "YulBlock",
																"src": "3748:52:8",
																"statements": [
																	{
																		"nativeSrc": "3762:10:8",
																		"nodeType": "YulAssignment",
																		"src": "3762:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3771:1:8",
																			"nodeType": "YulLiteral",
																			"src": "3771:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3762:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3762:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3785:5:8",
																		"nodeType": "YulLeave",
																		"src": "3785:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3730:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3730:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3723:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3723:6:8"
																},
																"nativeSrc": "3723:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3723:16:8"
															},
															"nativeSrc": "3720:80:8",
															"nodeType": "YulIf",
															"src": "3720:80:8"
														},
														{
															"body": {
																"nativeSrc": "3833:52:8",
																"nodeType": "YulBlock",
																"src": "3833:52:8",
																"statements": [
																	{
																		"nativeSrc": "3847:10:8",
																		"nodeType": "YulAssignment",
																		"src": "3847:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3856:1:8",
																			"nodeType": "YulLiteral",
																			"src": "3856:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3847:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3847:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3870:5:8",
																		"nodeType": "YulLeave",
																		"src": "3870:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3819:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3819:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3812:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3812:6:8"
																},
																"nativeSrc": "3812:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3812:12:8"
															},
															"nativeSrc": "3809:76:8",
															"nodeType": "YulIf",
															"src": "3809:76:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3921:52:8",
																		"nodeType": "YulBlock",
																		"src": "3921:52:8",
																		"statements": [
																			{
																				"nativeSrc": "3935:10:8",
																				"nodeType": "YulAssignment",
																				"src": "3935:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3944:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3944:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3935:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3935:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3958:5:8",
																				"nodeType": "YulLeave",
																				"src": "3958:5:8"
																			}
																		]
																	},
																	"nativeSrc": "3914:59:8",
																	"nodeType": "YulCase",
																	"src": "3914:59:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3919:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3919:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3989:123:8",
																		"nodeType": "YulBlock",
																		"src": "3989:123:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4024:22:8",
																					"nodeType": "YulBlock",
																					"src": "4024:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4026:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "4026:16:8"
																								},
																								"nativeSrc": "4026:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4026:18:8"
																							},
																							"nativeSrc": "4026:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4026:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4009:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4009:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4019:3:8",
																							"nodeType": "YulLiteral",
																							"src": "4019:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4006:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4006:2:8"
																					},
																					"nativeSrc": "4006:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4006:17:8"
																				},
																				"nativeSrc": "4003:43:8",
																				"nodeType": "YulIf",
																				"src": "4003:43:8"
																			},
																			{
																				"nativeSrc": "4059:25:8",
																				"nodeType": "YulAssignment",
																				"src": "4059:25:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4072:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4072:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4082:1:8",
																							"nodeType": "YulLiteral",
																							"src": "4082:1:8",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4068:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4068:3:8"
																					},
																					"nativeSrc": "4068:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4068:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4059:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4059:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4097:5:8",
																				"nodeType": "YulLeave",
																				"src": "4097:5:8"
																			}
																		]
																	},
																	"nativeSrc": "3982:130:8",
																	"nodeType": "YulCase",
																	"src": "3982:130:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3987:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3987:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3901:4:8",
																"nodeType": "YulIdentifier",
																"src": "3901:4:8"
															},
															"nativeSrc": "3894:218:8",
															"nodeType": "YulSwitch",
															"src": "3894:218:8"
														},
														{
															"body": {
																"nativeSrc": "4210:70:8",
																"nodeType": "YulBlock",
																"src": "4210:70:8",
																"statements": [
																	{
																		"nativeSrc": "4224:28:8",
																		"nodeType": "YulAssignment",
																		"src": "4224:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4237:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "4237:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4243:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4243:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4233:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4233:3:8"
																			},
																			"nativeSrc": "4233:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4233:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4224:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4224:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4265:5:8",
																		"nodeType": "YulLeave",
																		"src": "4265:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4134:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4134:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4140:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4140:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4131:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4131:2:8"
																				},
																				"nativeSrc": "4131:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4131:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4148:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4158:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4158:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4145:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4145:2:8"
																				},
																				"nativeSrc": "4145:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4145:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4127:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4127:3:8"
																		},
																		"nativeSrc": "4127:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4171:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4171:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4177:3:8",
																						"nodeType": "YulLiteral",
																						"src": "4177:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4168:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4168:2:8"
																				},
																				"nativeSrc": "4168:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4168:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4186:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4186:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4196:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4196:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4183:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4183:2:8"
																				},
																				"nativeSrc": "4183:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4183:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4164:3:8"
																		},
																		"nativeSrc": "4164:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4164:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4124:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4124:2:8"
																},
																"nativeSrc": "4124:77:8",
																"nodeType": "YulFunctionCall",
																"src": "4124:77:8"
															},
															"nativeSrc": "4121:159:8",
															"nodeType": "YulIf",
															"src": "4121:159:8"
														},
														{
															"nativeSrc": "4289:57:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4289:57:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4331:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4331:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4337:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "4337:8:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4312:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4312:18:8"
																},
																"nativeSrc": "4312:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4312:34:8"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4293:7:8",
																	"nodeType": "YulTypedName",
																	"src": "4293:7:8",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4302:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4302:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4391:22:8",
																"nodeType": "YulBlock",
																"src": "4391:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4393:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4393:16:8"
																			},
																			"nativeSrc": "4393:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4393:18:8"
																		},
																		"nativeSrc": "4393:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4393:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4361:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4361:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4378:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4378:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4374:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4374:3:8"
																				},
																				"nativeSrc": "4374:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4374:6:8"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4382:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4382:6:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4370:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:8"
																		},
																		"nativeSrc": "4370:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:19:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4358:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4358:2:8"
																},
																"nativeSrc": "4358:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4358:32:8"
															},
															"nativeSrc": "4355:58:8",
															"nodeType": "YulIf",
															"src": "4355:58:8"
														},
														{
															"nativeSrc": "4422:29:8",
															"nodeType": "YulAssignment",
															"src": "4422:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4435:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4435:7:8"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4444:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4444:6:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4431:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4431:3:8"
																},
																"nativeSrc": "4431:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4431:20:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4422:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4422:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3651:806:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3681:4:8",
														"nodeType": "YulTypedName",
														"src": "3681:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3687:8:8",
														"nodeType": "YulTypedName",
														"src": "3687:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3700:5:8",
														"nodeType": "YulTypedName",
														"src": "3700:5:8",
														"type": ""
													}
												],
												"src": "3651:806:8"
											},
											{
												"body": {
													"nativeSrc": "4530:72:8",
													"nodeType": "YulBlock",
													"src": "4530:72:8",
													"statements": [
														{
															"nativeSrc": "4540:56:8",
															"nodeType": "YulAssignment",
															"src": "4540:56:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4570:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4570:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4580:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "4580:8:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4590:4:8",
																				"nodeType": "YulLiteral",
																				"src": "4590:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4576:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4576:3:8"
																		},
																		"nativeSrc": "4576:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4576:19:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4549:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "4549:20:8"
																},
																"nativeSrc": "4549:47:8",
																"nodeType": "YulFunctionCall",
																"src": "4549:47:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4540:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4540:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4462:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4501:4:8",
														"nodeType": "YulTypedName",
														"src": "4501:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4507:8:8",
														"nodeType": "YulTypedName",
														"src": "4507:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4520:5:8",
														"nodeType": "YulTypedName",
														"src": "4520:5:8",
														"type": ""
													}
												],
												"src": "4462:140:8"
											},
											{
												"body": {
													"nativeSrc": "4659:116:8",
													"nodeType": "YulBlock",
													"src": "4659:116:8",
													"statements": [
														{
															"nativeSrc": "4669:20:8",
															"nodeType": "YulAssignment",
															"src": "4669:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4684:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4684:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4687:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4687:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4680:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4680:3:8"
																},
																"nativeSrc": "4680:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4680:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4669:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4669:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4747:22:8",
																"nodeType": "YulBlock",
																"src": "4747:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4749:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4749:16:8"
																			},
																			"nativeSrc": "4749:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4749:18:8"
																		},
																		"nativeSrc": "4749:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4749:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4718:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "4718:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4711:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4711:6:8"
																				},
																				"nativeSrc": "4711:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4711:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4725:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "4725:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4732:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "4732:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4741:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "4741:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4728:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4728:3:8"
																						},
																						"nativeSrc": "4728:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4728:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4722:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4722:2:8"
																				},
																				"nativeSrc": "4722:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4722:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4708:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4708:2:8"
																		},
																		"nativeSrc": "4708:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4708:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4701:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4701:6:8"
																},
																"nativeSrc": "4701:45:8",
																"nodeType": "YulFunctionCall",
																"src": "4701:45:8"
															},
															"nativeSrc": "4698:71:8",
															"nodeType": "YulIf",
															"src": "4698:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4607:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4638:1:8",
														"nodeType": "YulTypedName",
														"src": "4638:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4641:1:8",
														"nodeType": "YulTypedName",
														"src": "4641:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4647:7:8",
														"nodeType": "YulTypedName",
														"src": "4647:7:8",
														"type": ""
													}
												],
												"src": "4607:168:8"
											},
											{
												"body": {
													"nativeSrc": "4828:77:8",
													"nodeType": "YulBlock",
													"src": "4828:77:8",
													"statements": [
														{
															"nativeSrc": "4838:16:8",
															"nodeType": "YulAssignment",
															"src": "4838:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4849:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4849:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4852:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4852:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4845:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4845:3:8"
																},
																"nativeSrc": "4845:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4845:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4838:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4838:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4877:22:8",
																"nodeType": "YulBlock",
																"src": "4877:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4879:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4879:16:8"
																			},
																			"nativeSrc": "4879:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4879:18:8"
																		},
																		"nativeSrc": "4879:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4879:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4869:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4869:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4872:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4872:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4866:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4866:2:8"
																},
																"nativeSrc": "4866:10:8",
																"nodeType": "YulFunctionCall",
																"src": "4866:10:8"
															},
															"nativeSrc": "4863:36:8",
															"nodeType": "YulIf",
															"src": "4863:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4780:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4811:1:8",
														"nodeType": "YulTypedName",
														"src": "4811:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4814:1:8",
														"nodeType": "YulTypedName",
														"src": "4814:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4820:3:8",
														"nodeType": "YulTypedName",
														"src": "4820:3:8",
														"type": ""
													}
												],
												"src": "4780:125:8"
											},
											{
												"body": {
													"nativeSrc": "5067:188:8",
													"nodeType": "YulBlock",
													"src": "5067:188:8",
													"statements": [
														{
															"nativeSrc": "5077:26:8",
															"nodeType": "YulAssignment",
															"src": "5077:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5089:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5089:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5100:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5100:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5085:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5085:3:8"
																},
																"nativeSrc": "5085:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5085:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5077:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5077:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5119:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5119:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5134:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5134:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5150:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5150:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5155:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5155:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5146:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5146:3:8"
																						},
																						"nativeSrc": "5146:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5146:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5159:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5159:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5142:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5142:3:8"
																				},
																				"nativeSrc": "5142:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5142:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5130:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5130:3:8"
																		},
																		"nativeSrc": "5130:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5130:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5112:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:8"
																},
																"nativeSrc": "5112:51:8",
																"nodeType": "YulFunctionCall",
																"src": "5112:51:8"
															},
															"nativeSrc": "5112:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "5112:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5183:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5183:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5194:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5194:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5179:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5179:3:8"
																		},
																		"nativeSrc": "5179:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5179:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5199:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5199:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5172:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:8"
																},
																"nativeSrc": "5172:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5172:34:8"
															},
															"nativeSrc": "5172:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5172:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5226:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5226:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5237:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5237:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5222:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5222:3:8"
																		},
																		"nativeSrc": "5222:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5242:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5242:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5215:6:8"
																},
																"nativeSrc": "5215:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5215:34:8"
															},
															"nativeSrc": "5215:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5215:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4910:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5020:9:8",
														"nodeType": "YulTypedName",
														"src": "5020:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5031:6:8",
														"nodeType": "YulTypedName",
														"src": "5031:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5039:6:8",
														"nodeType": "YulTypedName",
														"src": "5039:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5047:6:8",
														"nodeType": "YulTypedName",
														"src": "5047:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5058:4:8",
														"nodeType": "YulTypedName",
														"src": "5058:4:8",
														"type": ""
													}
												],
												"src": "4910:345:8"
											},
											{
												"body": {
													"nativeSrc": "5361:76:8",
													"nodeType": "YulBlock",
													"src": "5361:76:8",
													"statements": [
														{
															"nativeSrc": "5371:26:8",
															"nodeType": "YulAssignment",
															"src": "5371:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5383:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5383:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5394:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5394:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5379:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5379:3:8"
																},
																"nativeSrc": "5379:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5379:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5371:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5371:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5413:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5413:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5424:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5424:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5406:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5406:6:8"
																},
																"nativeSrc": "5406:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5406:25:8"
															},
															"nativeSrc": "5406:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "5406:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5260:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5330:9:8",
														"nodeType": "YulTypedName",
														"src": "5330:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5341:6:8",
														"nodeType": "YulTypedName",
														"src": "5341:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5352:4:8",
														"nodeType": "YulTypedName",
														"src": "5352:4:8",
														"type": ""
													}
												],
												"src": "5260:177:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001100380380620011008339810160408190526200003391620002bb565b336040518060400160405280600a81526020016929ba3ab23caa37b5b2b760b11b81525060405180604001604052806005815260200164535455445960d81b815250816003908162000086919062000371565b50600462000095828262000371565b5050506001600160a01b038116620000c757604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b620000d281620000ff565b50620000f833620000e66012600a6200054c565b620000f2908462000563565b62000150565b5062000593565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166200017b5760405163ec442f0560e01b81525f6004820152602401620000be565b620001885f83836200018c565b5050565b6001600160a01b038316620001ba578060025f828254620001ae91906200057d565b909155506200022c9050565b6001600160a01b0383165f90815260208190526040902054818110156200020e5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000be565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166200024a5760028054829003905562000268565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002ae91815260200190565b60405180910390a3505050565b5f60208284031215620002cc575f80fd5b5051919050565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620002fc57607f821691505b6020821081036200031b57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200036c57805f5260205f20601f840160051c81016020851015620003485750805b601f840160051c820191505b8181101562000369575f815560010162000354565b50505b505050565b81516001600160401b038111156200038d576200038d620002d3565b620003a5816200039e8454620002e7565b8462000321565b602080601f831160018114620003db575f8415620003c35750858301515b5f19600386901b1c1916600185901b17855562000435565b5f85815260208120601f198616915b828110156200040b57888601518255948401946001909101908401620003ea565b50858210156200042957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156200049157815f19048211156200047557620004756200043d565b808516156200048357918102915b93841c939080029062000456565b509250929050565b5f82620004a95750600162000546565b81620004b757505f62000546565b8160018114620004d05760028114620004db57620004fb565b600191505062000546565b60ff841115620004ef57620004ef6200043d565b50506001821b62000546565b5060208310610133831016604e8410600b841016171562000520575081810a62000546565b6200052c838362000451565b805f19048211156200054257620005426200043d565b0290505b92915050565b5f6200055c60ff84168362000499565b9392505050565b80820281158282048414176200054657620005466200043d565b808201808211156200054657620005466200043d565b610b5f80620005a15f395ff3fe608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80638da5cb5b11610093578063a9059cbb11610063578063a9059cbb14610202578063dd62ed3e14610215578063f2fde38b1461024d578063f46eccc414610260575f80fd5b80638da5cb5b146101b957806395d89b41146101d4578063983b2d56146101dc5780639a49090e146101ef575f80fd5b80633092afd5116100ce5780633092afd514610165578063313ce5671461017a57806370a0823114610189578063715018a6146101b1575f80fd5b806306fdde03146100ff578063095ea7b31461011d57806318160ddd1461014057806323b872dd14610152575b5f80fd5b610107610282565b60405161011491906109b9565b60405180910390f35b61013061012b366004610a20565b610312565b6040519015158152602001610114565b6002545b604051908152602001610114565b610130610160366004610a48565b61032b565b610178610173366004610a81565b61034e565b005b60405160128152602001610114565b610144610197366004610a81565b6001600160a01b03165f9081526020819052604090205490565b6101786103f9565b6005546040516001600160a01b039091168152602001610114565b61010761040c565b6101786101ea366004610a81565b61041b565b6101786101fd366004610a20565b610518565b610130610210366004610a20565b6105da565b610144610223366004610aa1565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61017861025b366004610a81565b6105e7565b61013061026e366004610a81565b60066020525f908152604090205460ff1681565b60606003805461029190610ad2565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd90610ad2565b80156103085780601f106102df57610100808354040283529160200191610308565b820191905f5260205f20905b8154815290600101906020018083116102eb57829003601f168201915b5050505050905090565b5f3361031f818585610624565b60019150505b92915050565b5f33610338858285610636565b6103438585856106b2565b506001949350505050565b61035661070f565b6001600160a01b0381165f9081526006602052604090205460ff166103b15760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b4b73a32b960a11b60448201526064015b60405180910390fd5b6001600160a01b0381165f81815260066020526040808220805460ff19169055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a250565b61040161070f565b61040a5f61073c565b565b60606004805461029190610ad2565b61042361070f565b6001600160a01b0381166104725760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d696e746572206164647265737360501b60448201526064016103a8565b6001600160a01b0381165f9081526006602052604090205460ff16156104cd5760405162461bcd60e51b815260206004820152601060248201526f20b63932b0b23c90309036b4b73a32b960811b60448201526064016103a8565b6001600160a01b0381165f81815260066020526040808220805460ff19166001179055517f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f69190a250565b335f9081526006602052604090205460ff166105765760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206d696e746572732063616e206d696e74207265776172647300000060448201526064016103a8565b6001600160a01b0382166105cc5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f2061646472657373000000000060448201526064016103a8565b6105d6828261078d565b5050565b5f3361031f8185856106b2565b6105ef61070f565b6001600160a01b03811661061857604051631e4fbdf760e01b81525f60048201526024016103a8565b6106218161073c565b50565b61063183838360016107c1565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156106ac578181101561069e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103a8565b6106ac84848484035f6107c1565b50505050565b6001600160a01b0383166106db57604051634b637e8f60e11b81525f60048201526024016103a8565b6001600160a01b0382166107045760405163ec442f0560e01b81525f60048201526024016103a8565b610631838383610893565b6005546001600160a01b0316331461040a5760405163118cdaa760e01b81523360048201526024016103a8565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166107b65760405163ec442f0560e01b81525f60048201526024016103a8565b6105d65f8383610893565b6001600160a01b0384166107ea5760405163e602df0560e01b81525f60048201526024016103a8565b6001600160a01b03831661081357604051634a1406b160e11b81525f60048201526024016103a8565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106ac57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161088591815260200190565b60405180910390a350505050565b6001600160a01b0383166108bd578060025f8282546108b29190610b0a565b9091555061092d9050565b6001600160a01b0383165f908152602081905260409020548181101561090f5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a8565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661094957600280548290039055610967565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109ac91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156109e5578581018301518582016040015282016109c9565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a1b575f80fd5b919050565b5f8060408385031215610a31575f80fd5b610a3a83610a05565b946020939093013593505050565b5f805f60608486031215610a5a575f80fd5b610a6384610a05565b9250610a7160208501610a05565b9150604084013590509250925092565b5f60208284031215610a91575f80fd5b610a9a82610a05565b9392505050565b5f8060408385031215610ab2575f80fd5b610abb83610a05565b9150610ac960208401610a05565b90509250929050565b600181811c90821680610ae657607f821691505b602082108103610b0457634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561032557634e487b7160e01b5f52601160045260245ffdfea26469706673582212207103a6c20b4044d427fa569635fd9bf43dd99a0799dc358a49ef48cfe248503464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1100 CODESIZE SUB DUP1 PUSH3 0x1100 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x2BB JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x29BA3AB23CAA37B5B2B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x5354554459 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x86 SWAP2 SWAP1 PUSH3 0x371 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x95 DUP3 DUP3 PUSH3 0x371 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD2 DUP2 PUSH3 0xFF JUMP JUMPDEST POP PUSH3 0xF8 CALLER PUSH3 0xE6 PUSH1 0x12 PUSH1 0xA PUSH3 0x54C JUMP JUMPDEST PUSH3 0xF2 SWAP1 DUP5 PUSH3 0x563 JUMP JUMPDEST PUSH3 0x150 JUMP JUMPDEST POP PUSH3 0x593 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x17B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xBE JUMP JUMPDEST PUSH3 0x188 PUSH0 DUP4 DUP4 PUSH3 0x18C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x1BA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x1AE SWAP2 SWAP1 PUSH3 0x57D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x22C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x20E JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x24A JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x2AE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x31B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x36C JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x348 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x369 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x354 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x38D JUMPI PUSH3 0x38D PUSH3 0x2D3 JUMP JUMPDEST PUSH3 0x3A5 DUP2 PUSH3 0x39E DUP5 SLOAD PUSH3 0x2E7 JUMP JUMPDEST DUP5 PUSH3 0x321 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3DB JUMPI PUSH0 DUP5 ISZERO PUSH3 0x3C3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x435 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x40B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3EA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x429 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x491 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x475 JUMPI PUSH3 0x475 PUSH3 0x43D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x483 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x456 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x4A9 JUMPI POP PUSH1 0x1 PUSH3 0x546 JUMP JUMPDEST DUP2 PUSH3 0x4B7 JUMPI POP PUSH0 PUSH3 0x546 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x4D0 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x4DB JUMPI PUSH3 0x4FB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x546 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x4EF JUMPI PUSH3 0x4EF PUSH3 0x43D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x546 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x520 JUMPI POP DUP2 DUP2 EXP PUSH3 0x546 JUMP JUMPDEST PUSH3 0x52C DUP4 DUP4 PUSH3 0x451 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x542 JUMPI PUSH3 0x542 PUSH3 0x43D JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x55C PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x499 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x546 JUMPI PUSH3 0x546 PUSH3 0x43D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x546 JUMPI PUSH3 0x546 PUSH3 0x43D JUMP JUMPDEST PUSH2 0xB5F DUP1 PUSH3 0x5A1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x9A49090E EQ PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3092AFD5 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x152 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x144 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD SWAP1 PUSH2 0xAD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x31F DUP2 DUP6 DUP6 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x338 DUP6 DUP3 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x343 DUP6 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x356 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B4B73A32B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x401 PUSH2 0x70F JUMP JUMPDEST PUSH2 0x40A PUSH0 PUSH2 0x73C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x423 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206D696E7465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x20B63932B0B23C90309036B4B73A32B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D696E746572732063616E206D696E742072657761726473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x5D6 DUP3 DUP3 PUSH2 0x78D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x31F DUP2 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x5EF PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x621 DUP2 PUSH2 0x73C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x7C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x6AC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x6AC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x7C1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x5D6 PUSH0 DUP4 DUP4 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6AC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x885 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8BD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x92D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x949 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9AC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9E5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9C9 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA1B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA31 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA3A DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP5 PUSH2 0xA05 JUMP JUMPDEST SWAP3 POP PUSH2 0xA71 PUSH1 0x20 DUP6 ADD PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA9A DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xABB DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC9 PUSH1 0x20 DUP5 ADD PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAE6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x325 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x3A6C20B4044D427FA569635FD9BF43DD99A SMOD SWAP10 0xDC CALLDATALOAD DUP11 BLOBHASH 0xEF BASEFEE 0xCF 0xE2 BASEFEE POP CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "243:1801:6:-:0;;;717:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;789:10;1582:113:2;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:2;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3036:51:8;3009:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;858:49:6::2;864:10;892:14;2761:2:2::0;892::6::2;:14;:::i;:::-;876:30;::::0;:13;:30:::2;:::i;:::-;858:5;:49::i;:::-;717:197:::0;243:1801;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:2:-;-1:-1:-1;;;;;7509:21:2;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:2;;7582:1;7553:32;;;3036:51:8;3009:18;;7553:32:2;2890:203:8;7505:91:2;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;5130:32:8;;6367:50:2;;;5112:51:8;5179:18;;;5172:34;;;5222:18;;;5215:34;;;5085:18;;6367:50:2;4910:345:8;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;5406::8;;5394:2;5379:18;;5260:177;7064:25:2;;;;;;;;5989:1107;;;:::o;14:184:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:8;;14:184;-1:-1:-1;14:184:8:o;203:127::-;264:10;259:3;255:20;252:1;245:31;295:4;292:1;285:15;319:4;316:1;309:15;335:380;414:1;410:12;;;;457;;;478:61;;532:4;524:6;520:17;510:27;;478:61;585:2;577:6;574:14;554:18;551:38;548:161;;631:10;626:3;622:20;619:1;612:31;666:4;663:1;656:15;694:4;691:1;684:15;548:161;;335:380;;;:::o;846:518::-;948:2;943:3;940:11;937:421;;;984:5;981:1;974:16;1028:4;1025:1;1015:18;1098:2;1086:10;1082:19;1079:1;1075:27;1069:4;1065:38;1134:4;1122:10;1119:20;1116:47;;;-1:-1:-1;1157:4:8;1116:47;1212:2;1207:3;1203:12;1200:1;1196:20;1190:4;1186:31;1176:41;;1267:81;1285:2;1278:5;1275:13;1267:81;;;1344:1;1330:16;;1311:1;1300:13;1267:81;;;1271:3;;937:421;846:518;;;:::o;1540:1345::-;1660:10;;-1:-1:-1;;;;;1682:30:8;;1679:56;;;1715:18;;:::i;:::-;1744:97;1834:6;1794:38;1826:4;1820:11;1794:38;:::i;:::-;1788:4;1744:97;:::i;:::-;1896:4;;1953:2;1942:14;;1970:1;1965:663;;;;2672:1;2689:6;2686:89;;;-1:-1:-1;2741:19:8;;;2735:26;2686:89;-1:-1:-1;;1497:1:8;1493:11;;;1489:24;1485:29;1475:40;1521:1;1517:11;;;1472:57;2788:81;;1935:944;;1965:663;793:1;786:14;;;830:4;817:18;;-1:-1:-1;;2001:20:8;;;2119:236;2133:7;2130:1;2127:14;2119:236;;;2222:19;;;2216:26;2201:42;;2314:27;;;;2282:1;2270:14;;;;2149:19;;2119:236;;;2123:3;2383:6;2374:7;2371:19;2368:201;;;2444:19;;;2438:26;-1:-1:-1;;2527:1:8;2523:14;;;2539:3;2519:24;2515:37;2511:42;2496:58;2481:74;;2368:201;;;2615:1;2606:6;2603:1;2599:14;2595:22;2589:4;2582:36;1935:944;;;;;1540:1345;;:::o;3098:127::-;3159:10;3154:3;3150:20;3147:1;3140:31;3190:4;3187:1;3180:15;3214:4;3211:1;3204:15;3230:416;3319:1;3356:5;3319:1;3370:270;3391:7;3381:8;3378:21;3370:270;;;3450:4;3446:1;3442:6;3438:17;3432:4;3429:27;3426:53;;;3459:18;;:::i;:::-;3509:7;3499:8;3495:22;3492:55;;;3529:16;;;;3492:55;3608:22;;;;3568:15;;;;3370:270;;;3374:3;3230:416;;;;;:::o;3651:806::-;3700:5;3730:8;3720:80;;-1:-1:-1;3771:1:8;3785:5;;3720:80;3819:4;3809:76;;-1:-1:-1;3856:1:8;3870:5;;3809:76;3901:4;3919:1;3914:59;;;;3987:1;3982:130;;;;3894:218;;3914:59;3944:1;3935:10;;3958:5;;;3982:130;4019:3;4009:8;4006:17;4003:43;;;4026:18;;:::i;:::-;-1:-1:-1;;4082:1:8;4068:16;;4097:5;;3894:218;;4196:2;4186:8;4183:16;4177:3;4171:4;4168:13;4164:36;4158:2;4148:8;4145:16;4140:2;4134:4;4131:12;4127:35;4124:77;4121:159;;;-1:-1:-1;4233:19:8;;;4265:5;;4121:159;4312:34;4337:8;4331:4;4312:34;:::i;:::-;4382:6;4378:1;4374:6;4370:19;4361:7;4358:32;4355:58;;;4393:18;;:::i;:::-;4431:20;;-1:-1:-1;3651:806:8;;;;;:::o;4462:140::-;4520:5;4549:47;4590:4;4580:8;4576:19;4570:4;4549:47;:::i;:::-;4540:56;4462:140;-1:-1:-1;;;4462:140:8:o;4607:168::-;4680:9;;;4711;;4728:15;;;4722:22;;4708:37;4698:71;;4749:18;;:::i;4780:125::-;4845:9;;;4866:10;;;4863:36;;;4879:18;;:::i;5260:177::-;243:1801:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1572,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1985,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1807,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1933,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1590,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1852,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1714,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2195,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addMinter_1017": {
									"entryPoint": 1051,
									"id": 1017,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 786,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mintReward_1075": {
									"entryPoint": 1304,
									"id": 1075,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@minters_946": {
									"entryPoint": null,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 642,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeMinter_1043": {
									"entryPoint": 846,
									"id": 1043,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1017,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1036,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 811,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1511,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1498,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_298f04a054c82359551dd013e3db0e6554562c0d7fb0f499c4b95f59c4e86586__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae746fb6f9947269fe9ae6202c76250e81c322322fe58f0b721edbff56d389ff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8f0daa39c39bac816583bed47118324ef9cb0bd9d20d7485ca08e731f62c009__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5274:8",
										"nodeType": "YulBlock",
										"src": "0:5274:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:8",
													"nodeType": "YulBlock",
													"src": "135:427:8",
													"statements": [
														{
															"nativeSrc": "145:12:8",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:8",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:8",
																"nodeType": "YulLiteral",
																"src": "155:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:8",
																	"nodeType": "YulTypedName",
																	"src": "149:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:8",
																		"nodeType": "YulLiteral",
																		"src": "184:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nativeSrc": "166:21:8",
																"nodeType": "YulFunctionCall",
																"src": "166:21:8"
															},
															"nativeSrc": "166:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:8"
														},
														{
															"nativeSrc": "196:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:8"
																},
																"nativeSrc": "210:13:8",
																"nodeType": "YulFunctionCall",
																"src": "210:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:8",
																	"nodeType": "YulTypedName",
																	"src": "200:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:8",
																				"nodeType": "YulLiteral",
																				"src": "254:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:8"
																		},
																		"nativeSrc": "239:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:8"
																},
																"nativeSrc": "232:34:8",
																"nodeType": "YulFunctionCall",
																"src": "232:34:8"
															},
															"nativeSrc": "232:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:8"
														},
														{
															"nativeSrc": "275:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:8",
																"nodeType": "YulLiteral",
																"src": "284:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:8",
																	"nodeType": "YulTypedName",
																	"src": "279:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:8",
																"nodeType": "YulBlock",
																"src": "344:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:8"
																							},
																							"nativeSrc": "369:17:8",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:8",
																							"nodeType": "YulLiteral",
																							"src": "388:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:8"
																					},
																					"nativeSrc": "365:26:8",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:8"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:8",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:8"
																									},
																									"nativeSrc": "403:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:8"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:8",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:8"
																							},
																							"nativeSrc": "399:23:8",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:8"
																					},
																					"nativeSrc": "393:30:8",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:8"
																			},
																			"nativeSrc": "358:66:8",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:8"
																		},
																		"nativeSrc": "358:66:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:8"
																},
																"nativeSrc": "302:13:8",
																"nodeType": "YulFunctionCall",
																"src": "302:13:8"
															},
															"nativeSrc": "294:140:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:8",
																"nodeType": "YulBlock",
																"src": "316:19:8",
																"statements": [
																	{
																		"nativeSrc": "318:15:8",
																		"nodeType": "YulAssignment",
																		"src": "318:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:8"
																			},
																			"nativeSrc": "323:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:8",
																"nodeType": "YulBlock",
																"src": "298:3:8",
																"statements": []
															},
															"src": "294:140:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:8"
																				},
																				"nativeSrc": "454:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:8",
																				"nodeType": "YulLiteral",
																				"src": "478:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:8"
																		},
																		"nativeSrc": "450:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:8",
																		"nodeType": "YulLiteral",
																		"src": "483:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:8"
																},
																"nativeSrc": "443:42:8",
																"nodeType": "YulFunctionCall",
																"src": "443:42:8"
															},
															"nativeSrc": "443:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:8"
														},
														{
															"nativeSrc": "494:62:8",
															"nodeType": "YulAssignment",
															"src": "494:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:8",
																								"nodeType": "YulLiteral",
																								"src": "537:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:8"
																						},
																						"nativeSrc": "525:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:8",
																								"nodeType": "YulLiteral",
																								"src": "546:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:8"
																						},
																						"nativeSrc": "542:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:8"
																				},
																				"nativeSrc": "521:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:8"
																		},
																		"nativeSrc": "506:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:8",
																		"nodeType": "YulLiteral",
																		"src": "553:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:8"
																},
																"nativeSrc": "502:54:8",
																"nodeType": "YulFunctionCall",
																"src": "502:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:8",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:8",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:8",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:548:8"
											},
											{
												"body": {
													"nativeSrc": "616:124:8",
													"nodeType": "YulBlock",
													"src": "616:124:8",
													"statements": [
														{
															"nativeSrc": "626:29:8",
															"nodeType": "YulAssignment",
															"src": "626:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:8"
																},
																"nativeSrc": "635:20:8",
																"nodeType": "YulFunctionCall",
																"src": "635:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:8",
																"nodeType": "YulBlock",
																"src": "718:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:8",
																					"nodeType": "YulLiteral",
																					"src": "727:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:8",
																					"nodeType": "YulLiteral",
																					"src": "730:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:8"
																			},
																			"nativeSrc": "720:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:8"
																		},
																		"nativeSrc": "720:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:8",
																										"nodeType": "YulLiteral",
																										"src": "703:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:8",
																										"nodeType": "YulLiteral",
																										"src": "708:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:8"
																								},
																								"nativeSrc": "699:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:8",
																								"nodeType": "YulLiteral",
																								"src": "712:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:8"
																						},
																						"nativeSrc": "695:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:8"
																				},
																				"nativeSrc": "684:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:8"
																		},
																		"nativeSrc": "674:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:8"
																},
																"nativeSrc": "667:50:8",
																"nodeType": "YulFunctionCall",
																"src": "667:50:8"
															},
															"nativeSrc": "664:70:8",
															"nodeType": "YulIf",
															"src": "664:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:8",
														"nodeType": "YulTypedName",
														"src": "595:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:8",
														"nodeType": "YulTypedName",
														"src": "606:5:8",
														"type": ""
													}
												],
												"src": "567:173:8"
											},
											{
												"body": {
													"nativeSrc": "832:167:8",
													"nodeType": "YulBlock",
													"src": "832:167:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:8",
																"nodeType": "YulBlock",
																"src": "878:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:8",
																					"nodeType": "YulLiteral",
																					"src": "887:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:8",
																					"nodeType": "YulLiteral",
																					"src": "890:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:8"
																			},
																			"nativeSrc": "880:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:8"
																		},
																		"nativeSrc": "880:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:8"
																		},
																		"nativeSrc": "849:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:8",
																		"nodeType": "YulLiteral",
																		"src": "874:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:8"
																},
																"nativeSrc": "845:32:8",
																"nodeType": "YulFunctionCall",
																"src": "845:32:8"
															},
															"nativeSrc": "842:52:8",
															"nodeType": "YulIf",
															"src": "842:52:8"
														},
														{
															"nativeSrc": "903:39:8",
															"nodeType": "YulAssignment",
															"src": "903:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:8"
																},
																"nativeSrc": "913:29:8",
																"nodeType": "YulFunctionCall",
																"src": "913:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:8"
																}
															]
														},
														{
															"nativeSrc": "951:42:8",
															"nodeType": "YulAssignment",
															"src": "951:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:8",
																				"nodeType": "YulLiteral",
																				"src": "989:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:8"
																		},
																		"nativeSrc": "974:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:8"
																},
																"nativeSrc": "961:32:8",
																"nodeType": "YulFunctionCall",
																"src": "961:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:8",
														"nodeType": "YulTypedName",
														"src": "790:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:8",
														"nodeType": "YulTypedName",
														"src": "801:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:8",
														"nodeType": "YulTypedName",
														"src": "813:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:8",
														"nodeType": "YulTypedName",
														"src": "821:6:8",
														"type": ""
													}
												],
												"src": "745:254:8"
											},
											{
												"body": {
													"nativeSrc": "1099:92:8",
													"nodeType": "YulBlock",
													"src": "1099:92:8",
													"statements": [
														{
															"nativeSrc": "1109:26:8",
															"nodeType": "YulAssignment",
															"src": "1109:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:8"
																},
																"nativeSrc": "1117:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:8"
																				},
																				"nativeSrc": "1169:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:8"
																		},
																		"nativeSrc": "1162:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:8"
																},
																"nativeSrc": "1144:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:8"
															},
															"nativeSrc": "1144:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:8",
														"nodeType": "YulTypedName",
														"src": "1068:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:8",
														"nodeType": "YulTypedName",
														"src": "1079:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:8",
														"nodeType": "YulTypedName",
														"src": "1090:4:8",
														"type": ""
													}
												],
												"src": "1004:187:8"
											},
											{
												"body": {
													"nativeSrc": "1297:76:8",
													"nodeType": "YulBlock",
													"src": "1297:76:8",
													"statements": [
														{
															"nativeSrc": "1307:26:8",
															"nodeType": "YulAssignment",
															"src": "1307:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:8"
																},
																"nativeSrc": "1315:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:8"
																},
																"nativeSrc": "1342:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:8"
															},
															"nativeSrc": "1342:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:8",
														"nodeType": "YulTypedName",
														"src": "1266:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:8",
														"nodeType": "YulTypedName",
														"src": "1277:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:8",
														"nodeType": "YulTypedName",
														"src": "1288:4:8",
														"type": ""
													}
												],
												"src": "1196:177:8"
											},
											{
												"body": {
													"nativeSrc": "1482:224:8",
													"nodeType": "YulBlock",
													"src": "1482:224:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:8",
																"nodeType": "YulBlock",
																"src": "1528:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:8"
																			},
																			"nativeSrc": "1530:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:8"
																		},
																		"nativeSrc": "1530:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:8"
																		},
																		"nativeSrc": "1499:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:8"
																},
																"nativeSrc": "1495:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:8"
															},
															"nativeSrc": "1492:52:8",
															"nodeType": "YulIf",
															"src": "1492:52:8"
														},
														{
															"nativeSrc": "1553:39:8",
															"nodeType": "YulAssignment",
															"src": "1553:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:8"
																},
																"nativeSrc": "1563:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:8"
																}
															]
														},
														{
															"nativeSrc": "1601:48:8",
															"nodeType": "YulAssignment",
															"src": "1601:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:8"
																		},
																		"nativeSrc": "1630:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:8"
																},
																"nativeSrc": "1611:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:8"
																}
															]
														},
														{
															"nativeSrc": "1658:42:8",
															"nodeType": "YulAssignment",
															"src": "1658:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:8"
																		},
																		"nativeSrc": "1681:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:8"
																},
																"nativeSrc": "1668:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:8",
														"nodeType": "YulTypedName",
														"src": "1432:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:8",
														"nodeType": "YulTypedName",
														"src": "1443:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:8",
														"nodeType": "YulTypedName",
														"src": "1455:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:8",
														"nodeType": "YulTypedName",
														"src": "1463:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:8",
														"nodeType": "YulTypedName",
														"src": "1471:6:8",
														"type": ""
													}
												],
												"src": "1378:328:8"
											},
											{
												"body": {
													"nativeSrc": "1781:116:8",
													"nodeType": "YulBlock",
													"src": "1781:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1827:16:8",
																"nodeType": "YulBlock",
																"src": "1827:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1836:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1836:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1839:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1839:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1829:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1829:6:8"
																			},
																			"nativeSrc": "1829:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1829:12:8"
																		},
																		"nativeSrc": "1829:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1829:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1802:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1802:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1811:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1811:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1798:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1798:3:8"
																		},
																		"nativeSrc": "1798:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1798:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1823:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1823:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1794:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1794:3:8"
																},
																"nativeSrc": "1794:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1794:32:8"
															},
															"nativeSrc": "1791:52:8",
															"nodeType": "YulIf",
															"src": "1791:52:8"
														},
														{
															"nativeSrc": "1852:39:8",
															"nodeType": "YulAssignment",
															"src": "1852:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1881:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1881:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1862:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1862:18:8"
																},
																"nativeSrc": "1862:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1862:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1852:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1711:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1747:9:8",
														"nodeType": "YulTypedName",
														"src": "1747:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1758:7:8",
														"nodeType": "YulTypedName",
														"src": "1758:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1770:6:8",
														"nodeType": "YulTypedName",
														"src": "1770:6:8",
														"type": ""
													}
												],
												"src": "1711:186:8"
											},
											{
												"body": {
													"nativeSrc": "1999:87:8",
													"nodeType": "YulBlock",
													"src": "1999:87:8",
													"statements": [
														{
															"nativeSrc": "2009:26:8",
															"nodeType": "YulAssignment",
															"src": "2009:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2021:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2021:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2032:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2032:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2017:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2017:3:8"
																},
																"nativeSrc": "2017:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2017:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2009:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2009:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2051:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2051:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2066:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2066:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2074:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2074:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2062:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2062:3:8"
																		},
																		"nativeSrc": "2062:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2062:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2044:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2044:6:8"
																},
																"nativeSrc": "2044:36:8",
																"nodeType": "YulFunctionCall",
																"src": "2044:36:8"
															},
															"nativeSrc": "2044:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "2044:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1902:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1968:9:8",
														"nodeType": "YulTypedName",
														"src": "1968:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1979:6:8",
														"nodeType": "YulTypedName",
														"src": "1979:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1990:4:8",
														"nodeType": "YulTypedName",
														"src": "1990:4:8",
														"type": ""
													}
												],
												"src": "1902:184:8"
											},
											{
												"body": {
													"nativeSrc": "2192:102:8",
													"nodeType": "YulBlock",
													"src": "2192:102:8",
													"statements": [
														{
															"nativeSrc": "2202:26:8",
															"nodeType": "YulAssignment",
															"src": "2202:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2214:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2225:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2210:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:8"
																},
																"nativeSrc": "2210:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2210:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2202:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2244:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2259:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2275:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2275:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2280:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2280:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2271:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:8"
																						},
																						"nativeSrc": "2271:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2271:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2284:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2284:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2267:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:8"
																				},
																				"nativeSrc": "2267:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2267:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2255:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:8"
																		},
																		"nativeSrc": "2255:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2237:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:8"
																},
																"nativeSrc": "2237:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2237:51:8"
															},
															"nativeSrc": "2237:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2237:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2091:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:8",
														"nodeType": "YulTypedName",
														"src": "2161:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2172:6:8",
														"nodeType": "YulTypedName",
														"src": "2172:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2183:4:8",
														"nodeType": "YulTypedName",
														"src": "2183:4:8",
														"type": ""
													}
												],
												"src": "2091:203:8"
											},
											{
												"body": {
													"nativeSrc": "2386:173:8",
													"nodeType": "YulBlock",
													"src": "2386:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2432:16:8",
																"nodeType": "YulBlock",
																"src": "2432:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2441:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2444:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2434:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:8"
																			},
																			"nativeSrc": "2434:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:8"
																		},
																		"nativeSrc": "2434:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2407:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2416:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2403:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:8"
																		},
																		"nativeSrc": "2403:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2428:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2399:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:8"
																},
																"nativeSrc": "2399:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2399:32:8"
															},
															"nativeSrc": "2396:52:8",
															"nodeType": "YulIf",
															"src": "2396:52:8"
														},
														{
															"nativeSrc": "2457:39:8",
															"nodeType": "YulAssignment",
															"src": "2457:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2486:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2486:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2467:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2467:18:8"
																},
																"nativeSrc": "2467:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2467:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2457:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:8"
																}
															]
														},
														{
															"nativeSrc": "2505:48:8",
															"nodeType": "YulAssignment",
															"src": "2505:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2538:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2549:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2534:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:8"
																		},
																		"nativeSrc": "2534:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2515:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2515:18:8"
																},
																"nativeSrc": "2515:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2515:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2505:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2299:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2344:9:8",
														"nodeType": "YulTypedName",
														"src": "2344:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2355:7:8",
														"nodeType": "YulTypedName",
														"src": "2355:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2367:6:8",
														"nodeType": "YulTypedName",
														"src": "2367:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2375:6:8",
														"nodeType": "YulTypedName",
														"src": "2375:6:8",
														"type": ""
													}
												],
												"src": "2299:260:8"
											},
											{
												"body": {
													"nativeSrc": "2619:325:8",
													"nodeType": "YulBlock",
													"src": "2619:325:8",
													"statements": [
														{
															"nativeSrc": "2629:22:8",
															"nodeType": "YulAssignment",
															"src": "2629:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2643:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2646:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2646:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2639:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:8"
																},
																"nativeSrc": "2639:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2639:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2629:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:8"
																}
															]
														},
														{
															"nativeSrc": "2660:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2660:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2690:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2690:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2696:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2696:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2686:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:8"
																},
																"nativeSrc": "2686:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2686:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2664:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2664:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2737:31:8",
																"nodeType": "YulBlock",
																"src": "2737:31:8",
																"statements": [
																	{
																		"nativeSrc": "2739:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2739:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2753:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2753:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2761:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2761:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2749:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2749:3:8"
																			},
																			"nativeSrc": "2749:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2749:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2739:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2739:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2717:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2717:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2710:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:8"
																},
																"nativeSrc": "2710:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2710:26:8"
															},
															"nativeSrc": "2707:61:8",
															"nodeType": "YulIf",
															"src": "2707:61:8"
														},
														{
															"body": {
																"nativeSrc": "2827:111:8",
																"nodeType": "YulBlock",
																"src": "2827:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2848:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2855:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2855:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2860:10:8",
																							"nodeType": "YulLiteral",
																							"src": "2860:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2851:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2851:3:8"
																					},
																					"nativeSrc": "2851:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2851:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2841:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:8"
																			},
																			"nativeSrc": "2841:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2841:31:8"
																		},
																		"nativeSrc": "2841:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2892:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2892:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2895:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2885:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2885:6:8"
																			},
																			"nativeSrc": "2885:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2885:15:8"
																		},
																		"nativeSrc": "2885:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2885:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2920:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2920:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2923:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2923:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2913:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2913:6:8"
																			},
																			"nativeSrc": "2913:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2913:15:8"
																		},
																		"nativeSrc": "2913:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2913:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2783:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2783:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2806:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2814:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2803:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2803:2:8"
																		},
																		"nativeSrc": "2803:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2803:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2780:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:8"
																},
																"nativeSrc": "2780:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2780:38:8"
															},
															"nativeSrc": "2777:161:8",
															"nodeType": "YulIf",
															"src": "2777:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2564:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2599:4:8",
														"nodeType": "YulTypedName",
														"src": "2599:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2608:6:8",
														"nodeType": "YulTypedName",
														"src": "2608:6:8",
														"type": ""
													}
												],
												"src": "2564:380:8"
											},
											{
												"body": {
													"nativeSrc": "3123:162:8",
													"nodeType": "YulBlock",
													"src": "3123:162:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3140:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3140:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3151:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3151:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3133:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:8"
																},
																"nativeSrc": "3133:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3133:21:8"
															},
															"nativeSrc": "3133:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3133:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3174:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3174:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3185:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3185:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3170:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3170:3:8"
																		},
																		"nativeSrc": "3170:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3170:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3190:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3190:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3163:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3163:6:8"
																},
																"nativeSrc": "3163:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3163:30:8"
															},
															"nativeSrc": "3163:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3163:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3213:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3213:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3224:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3224:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3209:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3209:3:8"
																		},
																		"nativeSrc": "3209:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3209:18:8"
																	},
																	{
																		"hexValue": "4e6f742061206d696e746572",
																		"kind": "string",
																		"nativeSrc": "3229:14:8",
																		"nodeType": "YulLiteral",
																		"src": "3229:14:8",
																		"type": "",
																		"value": "Not a minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3202:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:8"
																},
																"nativeSrc": "3202:42:8",
																"nodeType": "YulFunctionCall",
																"src": "3202:42:8"
															},
															"nativeSrc": "3202:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "3202:42:8"
														},
														{
															"nativeSrc": "3253:26:8",
															"nodeType": "YulAssignment",
															"src": "3253:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3265:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3265:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3276:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:8"
																},
																"nativeSrc": "3261:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3253:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3253:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8f0daa39c39bac816583bed47118324ef9cb0bd9d20d7485ca08e731f62c009__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2949:336:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3100:9:8",
														"nodeType": "YulTypedName",
														"src": "3100:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3114:4:8",
														"nodeType": "YulTypedName",
														"src": "3114:4:8",
														"type": ""
													}
												],
												"src": "2949:336:8"
											},
											{
												"body": {
													"nativeSrc": "3464:172:8",
													"nodeType": "YulBlock",
													"src": "3464:172:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3481:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3481:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3492:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3492:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3474:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:8"
																},
																"nativeSrc": "3474:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3474:21:8"
															},
															"nativeSrc": "3474:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3474:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3515:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3515:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3526:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3526:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3511:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:8"
																		},
																		"nativeSrc": "3511:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3511:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3531:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3531:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3504:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:8"
																},
																"nativeSrc": "3504:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3504:30:8"
															},
															"nativeSrc": "3504:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3504:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3554:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3554:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3565:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3565:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3550:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:8"
																		},
																		"nativeSrc": "3550:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3550:18:8"
																	},
																	{
																		"hexValue": "496e76616c6964206d696e7465722061646472657373",
																		"kind": "string",
																		"nativeSrc": "3570:24:8",
																		"nodeType": "YulLiteral",
																		"src": "3570:24:8",
																		"type": "",
																		"value": "Invalid minter address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3543:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:8"
																},
																"nativeSrc": "3543:52:8",
																"nodeType": "YulFunctionCall",
																"src": "3543:52:8"
															},
															"nativeSrc": "3543:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "3543:52:8"
														},
														{
															"nativeSrc": "3604:26:8",
															"nodeType": "YulAssignment",
															"src": "3604:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3616:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3616:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3627:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3627:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3612:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3612:3:8"
																},
																"nativeSrc": "3612:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3612:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3604:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3604:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3290:346:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3441:9:8",
														"nodeType": "YulTypedName",
														"src": "3441:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3455:4:8",
														"nodeType": "YulTypedName",
														"src": "3455:4:8",
														"type": ""
													}
												],
												"src": "3290:346:8"
											},
											{
												"body": {
													"nativeSrc": "3815:166:8",
													"nodeType": "YulBlock",
													"src": "3815:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3832:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3843:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3825:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:8"
																},
																"nativeSrc": "3825:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3825:21:8"
															},
															"nativeSrc": "3825:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3825:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3866:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3866:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3877:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3877:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3862:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:8"
																		},
																		"nativeSrc": "3862:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3862:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3882:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3882:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3855:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:8"
																},
																"nativeSrc": "3855:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3855:30:8"
															},
															"nativeSrc": "3855:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3855:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3916:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3916:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3901:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:8"
																		},
																		"nativeSrc": "3901:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:18:8"
																	},
																	{
																		"hexValue": "416c72656164792061206d696e746572",
																		"kind": "string",
																		"nativeSrc": "3921:18:8",
																		"nodeType": "YulLiteral",
																		"src": "3921:18:8",
																		"type": "",
																		"value": "Already a minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3894:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:8"
																},
																"nativeSrc": "3894:46:8",
																"nodeType": "YulFunctionCall",
																"src": "3894:46:8"
															},
															"nativeSrc": "3894:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "3894:46:8"
														},
														{
															"nativeSrc": "3949:26:8",
															"nodeType": "YulAssignment",
															"src": "3949:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3961:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3961:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3972:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3972:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3957:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3957:3:8"
																},
																"nativeSrc": "3957:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3957:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3949:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3949:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_298f04a054c82359551dd013e3db0e6554562c0d7fb0f499c4b95f59c4e86586__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3641:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3792:9:8",
														"nodeType": "YulTypedName",
														"src": "3792:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3806:4:8",
														"nodeType": "YulTypedName",
														"src": "3806:4:8",
														"type": ""
													}
												],
												"src": "3641:340:8"
											},
											{
												"body": {
													"nativeSrc": "4160:179:8",
													"nodeType": "YulBlock",
													"src": "4160:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4177:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4177:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4188:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4188:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4170:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:8"
																},
																"nativeSrc": "4170:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4170:21:8"
															},
															"nativeSrc": "4170:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4170:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4211:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4211:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4222:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4222:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4207:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4207:3:8"
																		},
																		"nativeSrc": "4207:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4207:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4227:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4227:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4200:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4200:6:8"
																},
																"nativeSrc": "4200:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4200:30:8"
															},
															"nativeSrc": "4200:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4200:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4250:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4250:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4261:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4261:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4246:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4246:3:8"
																		},
																		"nativeSrc": "4246:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4246:18:8"
																	},
																	{
																		"hexValue": "4f6e6c79206d696e746572732063616e206d696e742072657761726473",
																		"kind": "string",
																		"nativeSrc": "4266:31:8",
																		"nodeType": "YulLiteral",
																		"src": "4266:31:8",
																		"type": "",
																		"value": "Only minters can mint rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4239:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4239:6:8"
																},
																"nativeSrc": "4239:59:8",
																"nodeType": "YulFunctionCall",
																"src": "4239:59:8"
															},
															"nativeSrc": "4239:59:8",
															"nodeType": "YulExpressionStatement",
															"src": "4239:59:8"
														},
														{
															"nativeSrc": "4307:26:8",
															"nodeType": "YulAssignment",
															"src": "4307:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4319:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4319:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4330:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4330:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4315:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4315:3:8"
																},
																"nativeSrc": "4315:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4315:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4307:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4307:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae746fb6f9947269fe9ae6202c76250e81c322322fe58f0b721edbff56d389ff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3986:353:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4137:9:8",
														"nodeType": "YulTypedName",
														"src": "4137:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4151:4:8",
														"nodeType": "YulTypedName",
														"src": "4151:4:8",
														"type": ""
													}
												],
												"src": "3986:353:8"
											},
											{
												"body": {
													"nativeSrc": "4518:177:8",
													"nodeType": "YulBlock",
													"src": "4518:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4535:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4535:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4546:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4546:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4528:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4528:6:8"
																},
																"nativeSrc": "4528:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4528:21:8"
															},
															"nativeSrc": "4528:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4528:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4569:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4569:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4580:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4580:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4565:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:8"
																		},
																		"nativeSrc": "4565:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4585:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4585:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4558:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4558:6:8"
																},
																"nativeSrc": "4558:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4558:30:8"
															},
															"nativeSrc": "4558:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4558:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4608:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4608:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4619:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4619:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4604:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4604:3:8"
																		},
																		"nativeSrc": "4604:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4604:18:8"
																	},
																	{
																		"hexValue": "43616e6e6f74206d696e7420746f207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "4624:29:8",
																		"nodeType": "YulLiteral",
																		"src": "4624:29:8",
																		"type": "",
																		"value": "Cannot mint to zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4597:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4597:6:8"
																},
																"nativeSrc": "4597:57:8",
																"nodeType": "YulFunctionCall",
																"src": "4597:57:8"
															},
															"nativeSrc": "4597:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "4597:57:8"
														},
														{
															"nativeSrc": "4663:26:8",
															"nodeType": "YulAssignment",
															"src": "4663:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4675:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4671:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:8"
																},
																"nativeSrc": "4671:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4671:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4663:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4663:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4344:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4495:9:8",
														"nodeType": "YulTypedName",
														"src": "4495:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4509:4:8",
														"nodeType": "YulTypedName",
														"src": "4509:4:8",
														"type": ""
													}
												],
												"src": "4344:351:8"
											},
											{
												"body": {
													"nativeSrc": "4857:188:8",
													"nodeType": "YulBlock",
													"src": "4857:188:8",
													"statements": [
														{
															"nativeSrc": "4867:26:8",
															"nodeType": "YulAssignment",
															"src": "4867:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4879:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4879:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4890:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4890:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4875:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4875:3:8"
																},
																"nativeSrc": "4875:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4875:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4867:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4867:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4909:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4909:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4924:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4924:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4940:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4940:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4945:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4945:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4936:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4936:3:8"
																						},
																						"nativeSrc": "4936:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4936:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4949:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4949:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4932:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4932:3:8"
																				},
																				"nativeSrc": "4932:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4932:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4920:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4920:3:8"
																		},
																		"nativeSrc": "4920:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4920:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4902:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:8"
																},
																"nativeSrc": "4902:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4902:51:8"
															},
															"nativeSrc": "4902:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4902:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4973:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4973:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4984:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4984:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4969:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4969:3:8"
																		},
																		"nativeSrc": "4969:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4969:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4989:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4989:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4962:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4962:6:8"
																},
																"nativeSrc": "4962:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4962:34:8"
															},
															"nativeSrc": "4962:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "4962:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5016:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5016:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5027:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5027:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5012:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5012:3:8"
																		},
																		"nativeSrc": "5012:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5012:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5032:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5032:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5005:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:8"
																},
																"nativeSrc": "5005:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5005:34:8"
															},
															"nativeSrc": "5005:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5005:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4700:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4810:9:8",
														"nodeType": "YulTypedName",
														"src": "4810:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4821:6:8",
														"nodeType": "YulTypedName",
														"src": "4821:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4829:6:8",
														"nodeType": "YulTypedName",
														"src": "4829:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4837:6:8",
														"nodeType": "YulTypedName",
														"src": "4837:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4848:4:8",
														"nodeType": "YulTypedName",
														"src": "4848:4:8",
														"type": ""
													}
												],
												"src": "4700:345:8"
											},
											{
												"body": {
													"nativeSrc": "5098:174:8",
													"nodeType": "YulBlock",
													"src": "5098:174:8",
													"statements": [
														{
															"nativeSrc": "5108:16:8",
															"nodeType": "YulAssignment",
															"src": "5108:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5119:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5119:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5122:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5122:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5115:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5115:3:8"
																},
																"nativeSrc": "5115:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5115:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5108:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5108:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5155:111:8",
																"nodeType": "YulBlock",
																"src": "5155:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5176:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5176:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5183:3:8",
																							"nodeType": "YulLiteral",
																							"src": "5183:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5188:10:8",
																							"nodeType": "YulLiteral",
																							"src": "5188:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5179:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5179:3:8"
																					},
																					"nativeSrc": "5179:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5179:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5169:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:8"
																			},
																			"nativeSrc": "5169:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5169:31:8"
																		},
																		"nativeSrc": "5169:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5169:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5220:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5220:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5223:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5223:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5213:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5213:6:8"
																			},
																			"nativeSrc": "5213:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5213:15:8"
																		},
																		"nativeSrc": "5213:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5213:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5248:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5248:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5251:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5251:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5241:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5241:6:8"
																			},
																			"nativeSrc": "5241:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5241:15:8"
																		},
																		"nativeSrc": "5241:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5241:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5139:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5139:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5142:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5142:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5136:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5136:2:8"
																},
																"nativeSrc": "5136:10:8",
																"nodeType": "YulFunctionCall",
																"src": "5136:10:8"
															},
															"nativeSrc": "5133:133:8",
															"nodeType": "YulIf",
															"src": "5133:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5050:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5081:1:8",
														"nodeType": "YulTypedName",
														"src": "5081:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5084:1:8",
														"nodeType": "YulTypedName",
														"src": "5084:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5090:3:8",
														"nodeType": "YulTypedName",
														"src": "5090:3:8",
														"type": ""
													}
												],
												"src": "5050:222:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c8f0daa39c39bac816583bed47118324ef9cb0bd9d20d7485ca08e731f62c009__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not a minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid minter address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_298f04a054c82359551dd013e3db0e6554562c0d7fb0f499c4b95f59c4e86586__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Already a minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ae746fb6f9947269fe9ae6202c76250e81c322322fe58f0b721edbff56d389ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only minters can mint rewards\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cannot mint to zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80638da5cb5b11610093578063a9059cbb11610063578063a9059cbb14610202578063dd62ed3e14610215578063f2fde38b1461024d578063f46eccc414610260575f80fd5b80638da5cb5b146101b957806395d89b41146101d4578063983b2d56146101dc5780639a49090e146101ef575f80fd5b80633092afd5116100ce5780633092afd514610165578063313ce5671461017a57806370a0823114610189578063715018a6146101b1575f80fd5b806306fdde03146100ff578063095ea7b31461011d57806318160ddd1461014057806323b872dd14610152575b5f80fd5b610107610282565b60405161011491906109b9565b60405180910390f35b61013061012b366004610a20565b610312565b6040519015158152602001610114565b6002545b604051908152602001610114565b610130610160366004610a48565b61032b565b610178610173366004610a81565b61034e565b005b60405160128152602001610114565b610144610197366004610a81565b6001600160a01b03165f9081526020819052604090205490565b6101786103f9565b6005546040516001600160a01b039091168152602001610114565b61010761040c565b6101786101ea366004610a81565b61041b565b6101786101fd366004610a20565b610518565b610130610210366004610a20565b6105da565b610144610223366004610aa1565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61017861025b366004610a81565b6105e7565b61013061026e366004610a81565b60066020525f908152604090205460ff1681565b60606003805461029190610ad2565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd90610ad2565b80156103085780601f106102df57610100808354040283529160200191610308565b820191905f5260205f20905b8154815290600101906020018083116102eb57829003601f168201915b5050505050905090565b5f3361031f818585610624565b60019150505b92915050565b5f33610338858285610636565b6103438585856106b2565b506001949350505050565b61035661070f565b6001600160a01b0381165f9081526006602052604090205460ff166103b15760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b4b73a32b960a11b60448201526064015b60405180910390fd5b6001600160a01b0381165f81815260066020526040808220805460ff19169055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a250565b61040161070f565b61040a5f61073c565b565b60606004805461029190610ad2565b61042361070f565b6001600160a01b0381166104725760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d696e746572206164647265737360501b60448201526064016103a8565b6001600160a01b0381165f9081526006602052604090205460ff16156104cd5760405162461bcd60e51b815260206004820152601060248201526f20b63932b0b23c90309036b4b73a32b960811b60448201526064016103a8565b6001600160a01b0381165f81815260066020526040808220805460ff19166001179055517f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f69190a250565b335f9081526006602052604090205460ff166105765760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206d696e746572732063616e206d696e74207265776172647300000060448201526064016103a8565b6001600160a01b0382166105cc5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f2061646472657373000000000060448201526064016103a8565b6105d6828261078d565b5050565b5f3361031f8185856106b2565b6105ef61070f565b6001600160a01b03811661061857604051631e4fbdf760e01b81525f60048201526024016103a8565b6106218161073c565b50565b61063183838360016107c1565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156106ac578181101561069e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103a8565b6106ac84848484035f6107c1565b50505050565b6001600160a01b0383166106db57604051634b637e8f60e11b81525f60048201526024016103a8565b6001600160a01b0382166107045760405163ec442f0560e01b81525f60048201526024016103a8565b610631838383610893565b6005546001600160a01b0316331461040a5760405163118cdaa760e01b81523360048201526024016103a8565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166107b65760405163ec442f0560e01b81525f60048201526024016103a8565b6105d65f8383610893565b6001600160a01b0384166107ea5760405163e602df0560e01b81525f60048201526024016103a8565b6001600160a01b03831661081357604051634a1406b160e11b81525f60048201526024016103a8565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106ac57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161088591815260200190565b60405180910390a350505050565b6001600160a01b0383166108bd578060025f8282546108b29190610b0a565b9091555061092d9050565b6001600160a01b0383165f908152602081905260409020548181101561090f5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a8565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661094957600280548290039055610967565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109ac91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156109e5578581018301518582016040015282016109c9565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a1b575f80fd5b919050565b5f8060408385031215610a31575f80fd5b610a3a83610a05565b946020939093013593505050565b5f805f60608486031215610a5a575f80fd5b610a6384610a05565b9250610a7160208501610a05565b9150604084013590509250925092565b5f60208284031215610a91575f80fd5b610a9a82610a05565b9392505050565b5f8060408385031215610ab2575f80fd5b610abb83610a05565b9150610ac960208401610a05565b90509250929050565b600181811c90821680610ae657607f821691505b602082108103610b0457634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561032557634e487b7160e01b5f52601160045260245ffdfea26469706673582212207103a6c20b4044d427fa569635fd9bf43dd99a0799dc358a49ef48cfe248503464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x9A49090E EQ PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3092AFD5 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x152 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x144 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD SWAP1 PUSH2 0xAD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x31F DUP2 DUP6 DUP6 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x338 DUP6 DUP3 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x343 DUP6 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x356 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309036B4B73A32B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x401 PUSH2 0x70F JUMP JUMPDEST PUSH2 0x40A PUSH0 PUSH2 0x73C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x423 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206D696E7465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x20B63932B0B23C90309036B4B73A32B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D696E746572732063616E206D696E742072657761726473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x5D6 DUP3 DUP3 PUSH2 0x78D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x31F DUP2 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x5EF PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x621 DUP2 PUSH2 0x73C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x7C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x6AC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x6AC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x7C1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x5D6 PUSH0 DUP4 DUP4 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6AC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x885 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8BD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x92D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x949 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9AC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9E5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9C9 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA1B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA31 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA3A DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP5 PUSH2 0xA05 JUMP JUMPDEST SWAP3 POP PUSH2 0xA71 PUSH1 0x20 DUP6 ADD PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA9A DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xABB DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC9 PUSH1 0x20 DUP5 ADD PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAE6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x325 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x3A6C20B4044D427FA569635FD9BF43DD99A SMOD SWAP10 0xDC CALLDATALOAD DUP11 BLOBHASH 0xEF BASEFEE 0xCF 0xE2 BASEFEE POP CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "243:1801:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:8;;1162:22;1144:41;;1132:2;1117:18;3979:186:2;1004:187:8;2830:97:2;2908:12;;2830:97;;;1342:25:8;;;1330:2;1315:18;2830:97:2;1196:177:8;4757:244:2;;;;;;:::i;:::-;;:::i;1402:192:6:-;;;;;;:::i;:::-;;:::i;:::-;;2688:82:2;;;2761:2;2044:36:8;;2032:2;2017:18;2688:82:2;1902:184:8;2985:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:2;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;:::i;1638:85::-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2237:51:8;;2225:2;2210:18;1638:85:0;2091:203:8;1962:93:2;;;:::i;1029:256:6:-;;;;;;:::i;:::-;;:::i;1805:237::-;;;;;;:::i;:::-;;:::i;3296:178:2:-;;;;;;:::i;:::-;;:::i;3532:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:2;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2543:215:0;;;;;;:::i;:::-;;:::i;378:39:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:5;4106:31:2;735:10:5;4122:7:2;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:5;4900:37:2;4916:4;735:10:5;4931:5:2;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:2;;4757:244;-1:-1:-1;;;;4757:244:2:o;1402:192:6:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1477:15:6;::::1;;::::0;;;:7:::1;:15;::::0;;;;;::::1;;1469:40;;;::::0;-1:-1:-1;;;1469:40:6;;3151:2:8;1469:40:6::1;::::0;::::1;3133:21:8::0;3190:2;3170:18;;;3163:30;-1:-1:-1;;;3209:18:8;;;3202:42;3261:18;;1469:40:6::1;;;;;;;;;-1:-1:-1::0;;;;;1528:15:6;::::1;1546:5;1528:15:::0;;;:7:::1;:15;::::0;;;;;:23;;-1:-1:-1;;1528:23:6::1;::::0;;1566:21;::::1;::::0;1546:5;1566:21:::1;1402:192:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;1029:256:6:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1101:20:6;::::1;1093:55;;;::::0;-1:-1:-1;;;1093:55:6;;3492:2:8;1093:55:6::1;::::0;::::1;3474:21:8::0;3531:2;3511:18;;;3504:30;-1:-1:-1;;;3550:18:8;;;3543:52;3612:18;;1093:55:6::1;3290:346:8::0;1093:55:6::1;-1:-1:-1::0;;;;;1167:15:6;::::1;;::::0;;;:7:::1;:15;::::0;;;;;::::1;;1166:16;1158:45;;;::::0;-1:-1:-1;;;1158:45:6;;3843:2:8;1158:45:6::1;::::0;::::1;3825:21:8::0;3882:2;3862:18;;;3855:30;-1:-1:-1;;;3901:18:8;;;3894:46;3957:18;;1158:45:6::1;3641:340:8::0;1158:45:6::1;-1:-1:-1::0;;;;;1222:15:6;::::1;;::::0;;;:7:::1;:15;::::0;;;;;:22;;-1:-1:-1;;1222:22:6::1;1240:4;1222:22;::::0;;1259:19;::::1;::::0;1222:15;1259:19:::1;1029:256:::0;:::o;1805:237::-;1888:10;1880:19;;;;:7;:19;;;;;;;;1872:61;;;;-1:-1:-1;;;1872:61:6;;4188:2:8;1872:61:6;;;4170:21:8;4227:2;4207:18;;;4200:30;4266:31;4246:18;;;4239:59;4315:18;;1872:61:6;3986:353:8;1872:61:6;-1:-1:-1;;;;;1951:16:6;;1943:56;;;;-1:-1:-1;;;1943:56:6;;4546:2:8;1943:56:6;;;4528:21:8;4585:2;4565:18;;;4558:30;4624:29;4604:18;;;4597:57;4671:18;;1943:56:6;4344:351:8;1943:56:6;2018:17;2024:2;2028:6;2018:5;:17::i;:::-;1805:237;;:::o;3296:178:2:-;3365:4;735:10:5;3419:27:2;735:10:5;3436:2:2;3440:5;3419:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2237:51:8::0;2210:18;;2672:31:0::1;2091:203:8::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:2;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:2;;-1:-1:-1;;;;;4920:32:8;;10668:60:2;;;4902:51:8;4969:18;;;4962:34;;;5012:18;;;5005:34;;;4875:18;;10668:60:2;4700:345:8;10613:130:2;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:2;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:2;;5525:1;5498:30;;;2237:51:8;2210:18;;5498:30:2;2091:203:8;5453:86:2;-1:-1:-1;;;;;5552:16:2;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:2;;5620:1;5591:32;;;2237:51:8;2210:18;;5591:32:2;2091:203:8;5548:86:2;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2237:51:8;2210:18;;1901:40:0;2091:203:8;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:2:-;-1:-1:-1;;;;;7509:21:2;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:2;;7582:1;7553:32;;;2237:51:8;2210:18;;7553:32:2;2091:203:8;7505:91:2;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;9682:432::-;-1:-1:-1;;;;;9794:19:2;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:2;;9865:1;9836:32;;;2237:51:8;2210:18;;9836:32:2;2091:203:8;9790:89:2;-1:-1:-1;;;;;9892:21:2;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:2;;9964:1;9936:31;;;2237:51:8;2210:18;;9936:31:2;2091:203:8;9888:90:2;-1:-1:-1;;;;;9987:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:2;10075:5;-1:-1:-1;;;;;10066:31:2;;10091:5;10066:31;;;;1342:25:8;;1330:2;1315:18;;1196:177;10066:31:2;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;4920:32:8;;6367:50:2;;;4902:51:8;4969:18;;;4962:34;;;5012:18;;;5005:34;;;4875:18;;6367:50:2;4700:345:8;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;1342::8;;1330:2;1315:18;;1196:177;7064:25:2;;;;;;;;5989:1107;;;:::o;14:548:8:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:8;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:8:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1711:186::-;1770:6;1823:2;1811:9;1802:7;1798:23;1794:32;1791:52;;;1839:1;1836;1829:12;1791:52;1862:29;1881:9;1862:29;:::i;:::-;1852:39;1711:186;-1:-1:-1;;;1711:186:8:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;5050:222::-;5115:9;;;5136:10;;;5133:133;;;5188:10;5183:3;5179:20;5176:1;5169:31;5223:4;5220:1;5213:15;5251:4;5248:1;5241:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "582200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addMinter(address)": "30230",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2604",
								"decimals()": "221",
								"mintReward(address,uint256)": "infinite",
								"minters(address)": "2616",
								"name()": "infinite",
								"owner()": "2323",
								"removeMinter(address)": "30142",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51238",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28399"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 2044,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 914,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 914,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 914,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 717,
									"end": 914,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 717,
									"end": 914,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 717,
									"end": 914,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 717,
									"end": 914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 717,
									"end": 914,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 789,
									"end": 799,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29BA3AB23CAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5354554459"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3036,
									"end": 3087,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3009,
									"end": 3027,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3009,
									"end": 3027,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 858,
									"end": 907,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 864,
									"end": 874,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 892,
									"end": 906,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 892,
									"end": 894,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 892,
									"end": 906,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 892,
									"end": 906,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 906,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 892,
									"end": 906,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 876,
									"end": 906,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 876,
									"end": 906,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 876,
									"end": 889,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 876,
									"end": 906,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 876,
									"end": 906,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 876,
									"end": 906,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 876,
									"end": 906,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 858,
									"end": 863,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 858,
									"end": 907,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 858,
									"end": 907,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 858,
									"end": 907,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 717,
									"end": 914,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3036,
									"end": 3087,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3009,
									"end": 3027,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3009,
									"end": 3027,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2890,
									"end": 3093,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5130,
									"end": 5162,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5130,
									"end": 5162,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5112,
									"end": 5163,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5179,
									"end": 5197,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5179,
									"end": 5197,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5179,
									"end": 5197,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5206,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5206,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5240,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5222,
									"end": 5240,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5240,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5249,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5249,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5249,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5085,
									"end": 5103,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5085,
									"end": 5103,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 4910,
									"end": 5255,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5406,
									"end": 5431,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5406,
									"end": 5431,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5394,
									"end": 5396,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5379,
									"end": 5397,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5379,
									"end": 5397,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5260,
									"end": 5437,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 203,
									"end": 330,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 203,
									"end": 330,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 264,
									"end": 274,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 259,
									"end": 262,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 255,
									"end": 275,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 252,
									"end": 253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 276,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 295,
									"end": 299,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 293,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 285,
									"end": 300,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 319,
									"end": 323,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 324,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 335,
									"end": 715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 414,
									"end": 415,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 410,
									"end": 422,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 410,
									"end": 422,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 410,
									"end": 422,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 410,
									"end": 422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 457,
									"end": 469,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 457,
									"end": 469,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 457,
									"end": 469,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 478,
									"end": 539,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 478,
									"end": 539,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 532,
									"end": 536,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 524,
									"end": 530,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 520,
									"end": 537,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 510,
									"end": 537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 478,
									"end": 539,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 478,
									"end": 539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 585,
									"end": 587,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 577,
									"end": 583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 574,
									"end": 588,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 554,
									"end": 572,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 551,
									"end": 589,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 548,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 548,
									"end": 709,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 631,
									"end": 641,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 626,
									"end": 629,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 622,
									"end": 642,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 619,
									"end": 620,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 643,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 666,
									"end": 670,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 663,
									"end": 664,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 656,
									"end": 671,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 694,
									"end": 698,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 691,
									"end": 692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 699,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 548,
									"end": 709,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 548,
									"end": 709,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 548,
									"end": 709,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 335,
									"end": 715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 948,
									"end": 950,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 943,
									"end": 946,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 940,
									"end": 951,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 984,
									"end": 989,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 981,
									"end": 982,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 990,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1028,
									"end": 1032,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1025,
									"end": 1026,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1015,
									"end": 1033,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1100,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1079,
									"end": 1080,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1075,
									"end": 1102,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1069,
									"end": 1073,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1065,
									"end": 1103,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1122,
									"end": 1132,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1139,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1116,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1214,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1207,
									"end": 1210,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 1215,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1196,
									"end": 1216,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1190,
									"end": 1194,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1186,
									"end": 1217,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1217,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1217,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1285,
									"end": 1287,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1278,
									"end": 1283,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1275,
									"end": 1288,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 1346,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1330,
									"end": 1346,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1312,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1300,
									"end": 1313,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1267,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1274,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1274,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 937,
									"end": 1358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 846,
									"end": 1364,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 2885,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1540,
									"end": 2885,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1660,
									"end": 1670,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1660,
									"end": 1670,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1682,
									"end": 1712,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1712,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1735,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1679,
									"end": 1735,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1715,
									"end": 1733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1715,
									"end": 1733,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1826,
									"end": 1830,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1820,
									"end": 1831,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1794,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1794,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1792,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1744,
									"end": 1841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 1744,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1896,
									"end": 1900,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 1900,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1953,
									"end": 1955,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1942,
									"end": 1956,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1942,
									"end": 1956,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1970,
									"end": 1971,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1965,
									"end": 2628,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 2628,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 2628,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1965,
									"end": 2628,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2673,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2689,
									"end": 2695,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2686,
									"end": 2775,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2686,
									"end": 2775,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2686,
									"end": 2775,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2741,
									"end": 2760,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2760,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2760,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2761,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2686,
									"end": 2775,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2686,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1497,
									"end": 1498,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1504,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1514,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1475,
									"end": 1515,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1521,
									"end": 1522,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1517,
									"end": 1528,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1528,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1528,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1472,
									"end": 1529,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2869,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2869,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 2879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 1935,
									"end": 2879,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 2628,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1965,
									"end": 2628,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 794,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 786,
									"end": 800,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 786,
									"end": 800,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 786,
									"end": 800,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 817,
									"end": 835,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2001,
									"end": 2021,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2021,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2021,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2355,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2119,
									"end": 2355,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2140,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2130,
									"end": 2131,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2127,
									"end": 2141,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2355,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2355,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 2119,
									"end": 2355,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2222,
									"end": 2241,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2222,
									"end": 2241,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2222,
									"end": 2241,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2216,
									"end": 2242,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2201,
									"end": 2243,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2201,
									"end": 2243,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2341,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2341,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2341,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2341,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2282,
									"end": 2283,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2270,
									"end": 2284,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2270,
									"end": 2284,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2270,
									"end": 2284,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2270,
									"end": 2284,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2149,
									"end": 2168,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2149,
									"end": 2168,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2355,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2119,
									"end": 2355,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2355,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 2119,
									"end": 2355,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2383,
									"end": 2389,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2374,
									"end": 2381,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2371,
									"end": 2390,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2569,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 2368,
									"end": 2569,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2444,
									"end": 2463,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2444,
									"end": 2463,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2444,
									"end": 2463,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2438,
									"end": 2464,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2527,
									"end": 2528,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2523,
									"end": 2537,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2523,
									"end": 2537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2523,
									"end": 2537,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2539,
									"end": 2542,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 2519,
									"end": 2543,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2515,
									"end": 2552,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2511,
									"end": 2553,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2496,
									"end": 2554,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2555,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2555,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2569,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 2368,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2569,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2569,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2615,
									"end": 2616,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2603,
									"end": 2604,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2599,
									"end": 2613,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2595,
									"end": 2617,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2589,
									"end": 2593,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2582,
									"end": 2618,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 2879,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 1935,
									"end": 2879,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 2879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 2879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 2879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 2879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 2885,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 2885,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 2885,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3098,
									"end": 3225,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3098,
									"end": 3225,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3159,
									"end": 3169,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 3154,
									"end": 3157,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 3150,
									"end": 3170,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3147,
									"end": 3148,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3140,
									"end": 3171,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3190,
									"end": 3194,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 3187,
									"end": 3188,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3180,
									"end": 3195,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3214,
									"end": 3218,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3211,
									"end": 3212,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3204,
									"end": 3219,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3230,
									"end": 3646,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3230,
									"end": 3646,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3319,
									"end": 3320,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3356,
									"end": 3361,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3319,
									"end": 3320,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3370,
									"end": 3640,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 3370,
									"end": 3640,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3391,
									"end": 3398,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3381,
									"end": 3389,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3378,
									"end": 3399,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3370,
									"end": 3640,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3370,
									"end": 3640,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3370,
									"end": 3640,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3450,
									"end": 3454,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3447,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3442,
									"end": 3448,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3438,
									"end": 3455,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3429,
									"end": 3456,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3426,
									"end": 3479,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3426,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3426,
									"end": 3479,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3459,
									"end": 3477,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3459,
									"end": 3477,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3459,
									"end": 3477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3459,
									"end": 3477,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3459,
									"end": 3477,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3509,
									"end": 3516,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3507,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3517,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3492,
									"end": 3547,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3492,
									"end": 3547,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 3492,
									"end": 3547,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3545,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3545,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3545,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3529,
									"end": 3545,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3492,
									"end": 3547,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 3492,
									"end": 3547,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3608,
									"end": 3630,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3608,
									"end": 3630,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3608,
									"end": 3630,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3608,
									"end": 3630,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3568,
									"end": 3583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3568,
									"end": 3583,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3568,
									"end": 3583,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3568,
									"end": 3583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3370,
									"end": 3640,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 3370,
									"end": 3640,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3370,
									"end": 3640,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3370,
									"end": 3640,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3374,
									"end": 3377,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3230,
									"end": 3646,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3230,
									"end": 3646,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3230,
									"end": 3646,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3230,
									"end": 3646,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3230,
									"end": 3646,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3230,
									"end": 3646,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 4457,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3651,
									"end": 4457,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3700,
									"end": 3705,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3730,
									"end": 3738,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3720,
									"end": 3800,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3720,
									"end": 3800,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3771,
									"end": 3772,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3785,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3785,
									"end": 3790,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3720,
									"end": 3800,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3720,
									"end": 3800,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3819,
									"end": 3823,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3809,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 3809,
									"end": 3885,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3856,
									"end": 3857,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3870,
									"end": 3875,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3870,
									"end": 3875,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3809,
									"end": 3885,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 3809,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3905,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3919,
									"end": 3920,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3914,
									"end": 3973,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3914,
									"end": 3973,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3914,
									"end": 3973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3914,
									"end": 3973,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 3988,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3982,
									"end": 4112,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3982,
									"end": 4112,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3982,
									"end": 4112,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 3982,
									"end": 4112,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 4112,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3894,
									"end": 4112,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3914,
									"end": 3973,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3914,
									"end": 3973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3944,
									"end": 3945,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3935,
									"end": 3945,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3935,
									"end": 3945,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3958,
									"end": 3963,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3958,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3958,
									"end": 3963,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3982,
									"end": 4112,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 3982,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4019,
									"end": 4022,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 4009,
									"end": 4017,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4006,
									"end": 4023,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4003,
									"end": 4046,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4003,
									"end": 4046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4003,
									"end": 4046,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4026,
									"end": 4044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4026,
									"end": 4044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 4026,
									"end": 4044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4026,
									"end": 4044,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4026,
									"end": 4044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4082,
									"end": 4083,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4068,
									"end": 4084,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4068,
									"end": 4084,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4097,
									"end": 4102,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4097,
									"end": 4102,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 4112,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3894,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 4112,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4196,
									"end": 4198,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4186,
									"end": 4194,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4199,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4177,
									"end": 4180,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4171,
									"end": 4175,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4168,
									"end": 4181,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4164,
									"end": 4200,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4158,
									"end": 4160,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 4148,
									"end": 4156,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 4161,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4140,
									"end": 4142,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 4134,
									"end": 4138,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4131,
									"end": 4143,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4127,
									"end": 4162,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4124,
									"end": 4201,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4121,
									"end": 4280,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4121,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4121,
									"end": 4280,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4233,
									"end": 4252,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4233,
									"end": 4252,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4233,
									"end": 4252,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4121,
									"end": 4280,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4121,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4312,
									"end": 4346,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4337,
									"end": 4345,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4331,
									"end": 4335,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4312,
									"end": 4346,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 4312,
									"end": 4346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4312,
									"end": 4346,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4312,
									"end": 4346,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4382,
									"end": 4388,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4378,
									"end": 4379,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4374,
									"end": 4380,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4389,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4361,
									"end": 4368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4358,
									"end": 4390,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4355,
									"end": 4413,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4355,
									"end": 4413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4355,
									"end": 4413,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4393,
									"end": 4411,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4393,
									"end": 4411,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 4393,
									"end": 4411,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4393,
									"end": 4411,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4393,
									"end": 4411,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4451,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4451,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3651,
									"end": 4457,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3651,
									"end": 4457,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 4457,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 4457,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 4457,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 4457,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 4457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4462,
									"end": 4602,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 4462,
									"end": 4602,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4520,
									"end": 4525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4549,
									"end": 4596,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4590,
									"end": 4594,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 4580,
									"end": 4588,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 4595,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4596,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 4549,
									"end": 4596,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4596,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4549,
									"end": 4596,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4540,
									"end": 4596,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4462,
									"end": 4602,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4462,
									"end": 4602,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4607,
									"end": 4775,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4607,
									"end": 4775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4680,
									"end": 4689,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4680,
									"end": 4689,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4680,
									"end": 4689,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4711,
									"end": 4720,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4711,
									"end": 4720,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 4743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 4743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 4743,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4722,
									"end": 4744,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4722,
									"end": 4744,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4698,
									"end": 4769,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4698,
									"end": 4769,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4749,
									"end": 4767,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4749,
									"end": 4767,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 4749,
									"end": 4767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4780,
									"end": 4905,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4780,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4854,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4854,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4854,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4866,
									"end": 4876,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4866,
									"end": 4876,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4866,
									"end": 4876,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4863,
									"end": 4899,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4863,
									"end": 4899,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4863,
									"end": 4899,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4897,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4879,
									"end": 4897,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 4879,
									"end": 4897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5260,
									"end": 5437,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 5260,
									"end": 5437,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2044,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207103a6c20b4044d427fa569635fd9bf43dd99a0799dc358a49ef48cfe248503464736f6c63430008180033",
									".code": [
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "F46ECCC4"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "983B2D56"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "9A49090E"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "3092AFD5"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "3092AFD5"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 2044,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1402,
											"end": 1594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1402,
											"end": 1594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2044,
											"end": 2080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2044,
											"end": 2080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1902,
											"end": 2086,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1029,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1029,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1805,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1805,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 417,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 378,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 378,
											"end": 417,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 378,
											"end": 417,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1477,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1492,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1477,
											"end": 1492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1509,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1509,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1509,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3192,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA10309036B4B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3202,
											"end": 3244,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1469,
											"end": 1509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1528,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1551,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1551,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692"
										},
										{
											"begin": 1566,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1587,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1101,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1093,
											"end": 1148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1093,
											"end": 1148,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1093,
											"end": 1148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1148,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1093,
											"end": 1148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1093,
											"end": 1148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1093,
											"end": 1148,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1093,
											"end": 1148,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3474,
											"end": 3495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3531,
											"end": 3533,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3511,
											"end": 3529,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3511,
											"end": 3529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3534,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206D696E7465722061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3290,
											"end": 3636,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1148,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1093,
											"end": 1148,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1167,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1182,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1167,
											"end": 1182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1182,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1158,
											"end": 1203,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1203,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1203,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1158,
											"end": 1203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1203,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B63932B0B23C90309036B4B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3641,
											"end": 3981,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1158,
											"end": 1203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1237,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1222,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1244,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1222,
											"end": 1244,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1278,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1898,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1887,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4190,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 4207,
											"end": 4225,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4207,
											"end": 4225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4225,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4230,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4266,
											"end": 4297,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E6C79206D696E746572732063616E206D696E742072657761726473000000"
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4239,
											"end": 4298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3986,
											"end": 4339,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1872,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4528,
											"end": 4549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4585,
											"end": 4587,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4588,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4653,
											"name": "PUSH",
											"source": 8,
											"value": "43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000"
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4597,
											"end": 4654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4344,
											"end": 4695,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1943,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2018,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2035,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2018,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 2042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 2042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4893,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4875,
											"end": 4893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4700,
											"end": 5045,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4893,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4875,
											"end": 4893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4700,
											"end": 5045,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1711,
											"end": 1897,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1711,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1821,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1826,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1843,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1791,
											"end": 1843,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1843,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1791,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1881,
											"end": 1890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1862,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 1891,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1862,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1891,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1711,
											"end": 1897,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1711,
											"end": 1897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2467,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2515,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2765,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2817,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2818,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2872,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5272,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5050,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5124,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5136,
											"end": 5146,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5136,
											"end": 5146,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5136,
											"end": 5146,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5133,
											"end": 5266,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5133,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 5133,
											"end": 5266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5198,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5183,
											"end": 5186,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5200,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5227,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5220,
											"end": 5221,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5213,
											"end": 5228,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5251,
											"end": 5255,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5256,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/StudyToken.sol",
								"contracts/StudyTokenAuthority.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addMinter(address)": "983b2d56",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mintReward(address,uint256)": "9a49090e",
							"minters(address)": "f46eccc4",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeMinter(address)": "3092afd5",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token for the StudyDAO platform\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addMinter(address)\":{\"details\":\"Add a new minter address\",\"params\":{\"minter\":\"The address to add as a minter\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor that initializes the token with name and symbol\",\"params\":{\"initialSupply\":\"The initial token supply to mint to the contract deployer\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mintReward(address,uint256)\":{\"details\":\"Mint new tokens to a recipient (only callable by minters)\",\"params\":{\"amount\":\"The amount of tokens to mint\",\"to\":\"The address that will receive the minted tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeMinter(address)\":{\"details\":\"Remove a minter address\",\"params\":{\"minter\":\"The address to remove as a minter\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"StudyToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StudyToken.sol\":\"StudyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/StudyToken.sol\":{\"keccak256\":\"0x219a3d7da16fd6da0842383352c6c0ccceb5507b4f5e349214554ea0a7a4566c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a02992842f5b96f294ccdf6cf50cb9e88e85200a4ae2f05427abf43e2d224fb5\",\"dweb:/ipfs/QmRzAF8EvTq177hsD6PP8tUxxLCNiyE3mcWB5PYXpasw7S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/StudyToken.sol:StudyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/StudyToken.sol:StudyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/StudyToken.sol:StudyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/StudyToken.sol:StudyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/StudyToken.sol:StudyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/StudyToken.sol:StudyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 946,
								"contract": "contracts/StudyToken.sol:StudyToken",
								"label": "minters",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StudyTokenAuthority.sol": {
				"StudyTokenAuthority": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_studyTokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_defaultDailyLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "ContractAuthorized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "ContractDeauthorized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "operation",
									"type": "string"
								}
							],
							"name": "TokenOperationApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "operation",
									"type": "string"
								}
							],
							"name": "TokenOperationDenied",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "UserLimitSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "authorizeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "authorizeMint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "studyGroupAddress",
									"type": "address"
								}
							],
							"name": "authorizeStudyGroupAsMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "authorizeTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedContracts",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "deauthorizeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultDailyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRemainingDailyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserDailyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestMinterRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "setDefaultDailyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_studyTokenAddress",
									"type": "address"
								}
							],
							"name": "setStudyToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "setUserDailyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "studyToken",
							"outputs": [
								{
									"internalType": "contract StudyToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userDailyLimits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userDailyUsage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract for managing token authority operations for StudyDAO",
						"kind": "dev",
						"methods": {
							"authorizeContract(address)": {
								"details": "Authorize a contract to interact with the token authority",
								"params": {
									"contractAddress": "Address of the contract to authorize"
								}
							},
							"authorizeMint(address,uint256)": {
								"details": "Authorize a token mint operation",
								"params": {
									"amount": "Amount of tokens to mint",
									"to": "Recipient of the tokens"
								},
								"returns": {
									"_0": "Whether the operation is authorized"
								}
							},
							"authorizeStudyGroupAsMinter(address)": {
								"details": "Add a new StudyGroup contract as an authorized minter on the token",
								"params": {
									"studyGroupAddress": "Address of the StudyGroup contract"
								},
								"returns": {
									"_0": "Whether the operation was successful"
								}
							},
							"authorizeTransfer(address,address,uint256)": {
								"details": "Authorize a token transfer operation",
								"params": {
									"amount": "Amount of tokens to transfer",
									"from": "Sender of the tokens",
									"to": "Recipient of the tokens"
								},
								"returns": {
									"_0": "Whether the operation is authorized"
								}
							},
							"constructor": {
								"details": "Constructor to initialize the token authority",
								"params": {
									"_defaultDailyLimit": "Default daily limit for users",
									"_studyTokenAddress": "Address of the StudyToken contract"
								}
							},
							"deauthorizeContract(address)": {
								"details": "Deauthorize a contract",
								"params": {
									"contractAddress": "Address of the contract to deauthorize"
								}
							},
							"getCurrentDay()": {
								"details": "Get the current day number (for daily limit tracking)",
								"returns": {
									"_0": "The current day number"
								}
							},
							"getRemainingDailyLimit(address)": {
								"details": "Get a user's remaining daily limit",
								"params": {
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The user's remaining daily limit"
								}
							},
							"getUserDailyLimit(address)": {
								"details": "Get a user's effective daily limit",
								"params": {
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The user's daily limit"
								}
							},
							"mintTokens(address,uint256)": {
								"details": "Mint tokens through the authority (if it's a minter)",
								"params": {
									"amount": "Amount of tokens to mint",
									"to": "Recipient of the tokens"
								},
								"returns": {
									"_0": "Whether the operation was successful"
								}
							},
							"requestMinterRole()": {
								"details": "Request the token contract to add this authority as a minter",
								"returns": {
									"_0": "Whether the operation was successful"
								}
							},
							"setDefaultDailyLimit(uint256)": {
								"details": "Set default daily limit for all users",
								"params": {
									"limit": "Default daily limit amount"
								}
							},
							"setStudyToken(address)": {
								"details": "Connect to an existing StudyToken contract",
								"params": {
									"_studyTokenAddress": "Address of the StudyToken contract"
								}
							},
							"setUserDailyLimit(address,uint256)": {
								"details": "Set daily token limit for a specific user",
								"params": {
									"limit": "Daily limit amount",
									"user": "Address of the user"
								}
							}
						},
						"title": "StudyTokenAuthority",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StudyTokenAuthority.sol\":194:7922  contract StudyTokenAuthority {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StudyTokenAuthority.sol\":1651:2081  constructor(address _studyTokenAddress, uint256 _defaultDailyLimit) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/StudyTokenAuthority.sol\":1737:1769  _studyTokenAddress != address(0) */\n  dup3\n  and\n    /* \"contracts/StudyTokenAuthority.sol\":1729:1795  require(_studyTokenAddress != address(0), \"Invalid token address\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":572:574   */\n  0x20\n    /* \"contracts/StudyTokenAuthority.sol\":1729:1795  require(_studyTokenAddress != address(0), \"Invalid token address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":554:575   */\n  mstore\n    /* \"#utility.yul\":611:613   */\n  0x15\n    /* \"#utility.yul\":591:609   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":584:614   */\n  mstore\n    /* \"#utility.yul\":650:673   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":630:648   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":623:674   */\n  mstore\n    /* \"#utility.yul\":691:709   */\n  0x64\n  add\n    /* \"contracts/StudyTokenAuthority.sol\":1729:1795  require(_studyTokenAddress != address(0), \"Invalid token address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/StudyTokenAuthority.sol\":1805:1810  owner */\n  0x01\n    /* \"contracts/StudyTokenAuthority.sol\":1805:1823  owner = msg.sender */\n  dup1\n  sload\n    /* \"contracts/StudyTokenAuthority.sol\":1813:1823  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/StudyTokenAuthority.sol\":1805:1823  owner = msg.sender */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n  0x00\n    /* \"contracts/StudyTokenAuthority.sol\":1833:1876  studyToken = StudyToken(_studyTokenAddress) */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup7\n  and\n  or\n  dup3\n  sstore\n    /* \"contracts/StudyTokenAuthority.sol\":1886:1903  defaultDailyLimit */\n  0x04\n    /* \"contracts/StudyTokenAuthority.sol\":1886:1924  defaultDailyLimit = _defaultDailyLimit */\n  dup5\n  swap1\n  sstore\n    /* \"contracts/StudyTokenAuthority.sol\":1991:2022  authorizedContracts[msg.sender] */\n  dup1\n  dup3\n  mstore\n    /* \"contracts/StudyTokenAuthority.sol\":1991:2010  authorizedContracts */\n  0x02\n    /* \"contracts/StudyTokenAuthority.sol\":1991:2022  authorizedContracts[msg.sender] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/StudyTokenAuthority.sol\":1991:2029  authorizedContracts[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/StudyTokenAuthority.sol\":2044:2074  ContractAuthorized(msg.sender) */\n  swap2\n  mload\n  0x8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff651\n  swap2\n  swap1\n  log2\n    /* \"contracts/StudyTokenAuthority.sol\":1651:2081  constructor(address _studyTokenAddress, uint256 _defaultDailyLimit) {... */\n  pop\n  pop\n    /* \"contracts/StudyTokenAuthority.sol\":194:7922  contract StudyTokenAuthority {... */\n  jump(tag_10)\n    /* \"#utility.yul\":14:365   */\ntag_3:\n    /* \"#utility.yul\":93:99   */\n  0x00\n    /* \"#utility.yul\":101:107   */\n  dup1\n    /* \"#utility.yul\":154:156   */\n  0x40\n    /* \"#utility.yul\":142:151   */\n  dup4\n    /* \"#utility.yul\":133:140   */\n  dup6\n    /* \"#utility.yul\":129:152   */\n  sub\n    /* \"#utility.yul\":125:157   */\n  slt\n    /* \"#utility.yul\":122:174   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":170:171   */\n  0x00\n    /* \"#utility.yul\":167:168   */\n  dup1\n    /* \"#utility.yul\":160:172   */\n  revert\n    /* \"#utility.yul\":122:174   */\ntag_12:\n    /* \"#utility.yul\":196:212   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":241:272   */\n  dup2\n  and\n    /* \"#utility.yul\":231:273   */\n  dup2\n  eq\n    /* \"#utility.yul\":221:291   */\n  tag_13\n  jumpi\n    /* \"#utility.yul\":287:288   */\n  0x00\n    /* \"#utility.yul\":284:285   */\n  dup1\n    /* \"#utility.yul\":277:289   */\n  revert\n    /* \"#utility.yul\":221:291   */\ntag_13:\n    /* \"#utility.yul\":355:357   */\n  0x20\n    /* \"#utility.yul\":340:358   */\n  swap4\n  swap1\n  swap4\n  add\n    /* \"#utility.yul\":334:359   */\n  mload\n    /* \"#utility.yul\":310:315   */\n  swap3\n  swap5\n    /* \"#utility.yul\":334:359   */\n  swap3\n  swap4\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":14:365   */\n  jump\t// out\n    /* \"#utility.yul\":370:715   */\ntag_10:\n    /* \"contracts/StudyTokenAuthority.sol\":194:7922  contract StudyTokenAuthority {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StudyTokenAuthority.sol\":194:7922  contract StudyTokenAuthority {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xbebbcfe6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xbebbcfe6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc76b0888\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd5b9221b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xec37d259\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf0dda65c\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9b32ea6d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa7481b5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb09a8a04\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb6fa284d\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x360cf54a\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x360cf54a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3e6968b6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x67561d93\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6e861c0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x77865f91\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x0a0d6de1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x113018c5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x177c49a7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x32a34ad0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StudyTokenAuthority.sol\":7536:7920  function authorizeStudyGroupAsMinter(address studyGroupAddress) external onlyOwner returns (bool) {... */\n    tag_3:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":548:562   */\n      swap1\n      iszero\n        /* \"#utility.yul\":541:563   */\n      iszero\n        /* \"#utility.yul\":523:564   */\n      dup2\n      mstore\n        /* \"#utility.yul\":511:513   */\n      0x20\n        /* \"#utility.yul\":496:514   */\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":7536:7920  function authorizeStudyGroupAsMinter(address studyGroupAddress) external onlyOwner returns (bool) {... */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StudyTokenAuthority.sol\":6529:6728  function requestMinterRole() external onlyOwner returns (bool) {... */\n    tag_4:\n      tag_25\n      tag_32\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":3162:3393  function setUserDailyLimit(address user, uint256 limit) external onlyOwner {... */\n    tag_5:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/StudyTokenAuthority.sol\":5698:6023  function authorizeTransfer(address from, address to, uint256 amount) external onlyAuthorized returns (bool) {... */\n    tag_6:\n      tag_25\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":522:572  mapping(address => uint256) public userDailyLimits */\n    tag_7:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_44:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":1313:1338   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1286:1304   */\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":522:572  mapping(address => uint256) public userDailyLimits */\n      tag_29\n        /* \"#utility.yul\":1167:1344   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":3752:3855  function getCurrentDay() public view returns (uint256) {... */\n    tag_8:\n      tag_43\n      tag_49\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":2244:2597  function authorizeContract(address contractAddress) external onlyOwner {... */\n    tag_9:\n      tag_34\n      tag_52\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":2727:3004  function deauthorizeContract(address contractAddress) external onlyOwner {... */\n    tag_10:\n      tag_34\n      tag_55\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":4005:4196  function getUserDailyLimit(address user) public view returns (uint256) {... */\n    tag_11:\n      tag_43\n      tag_58\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":342:362  address public owner */\n    tag_12:\n      sload(0x01)\n      tag_61\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_61:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1513:1545   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1495:1546   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1483:1485   */\n      0x20\n        /* \"#utility.yul\":1468:1486   */\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":342:362  address public owner */\n      tag_29\n        /* \"#utility.yul\":1349:1552   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":4871:5441  function authorizeMint(address to, uint256 amount) external onlyAuthorized returns (bool) {... */\n    tag_13:\n      tag_25\n      tag_66\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":266:294  StudyToken public studyToken */\n    tag_14:\n      sload(0x00)\n      tag_61\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":6172:6378  function setStudyToken(address _studyTokenAddress) external onlyOwner {... */\n    tag_15:\n      tag_34\n      tag_74\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":694:763  mapping(address => mapping(uint256 => uint256)) public userDailyUsage */\n    tag_16:\n      tag_43\n      tag_77\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_77:\n      0x05\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":3516:3622  function setDefaultDailyLimit(uint256 limit) external onlyOwner {... */\n    tag_17:\n      tag_34\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":610:642  uint256 public defaultDailyLimit */\n    tag_18:\n      tag_43\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":418:469  mapping(address => bool) public authorizedContracts */\n    tag_19:\n      tag_25\n      tag_88\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_88:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":4356:4662  function getRemainingDailyLimit(address user) public view returns (uint256) {... */\n    tag_20:\n      tag_43\n      tag_92\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":6958:7312  function mintTokens(address to, uint256 amount) external onlyOwner returns (bool) {... */\n    tag_21:\n      tag_25\n      tag_96\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":7536:7920  function authorizeStudyGroupAsMinter(address studyGroupAddress) external onlyOwner returns (bool) {... */\n    tag_28:\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      sload(0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":7628:7632  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1226  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1235  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1208:1273  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":7652:7683  studyGroupAddress != address(0) */\n      dup3\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":7644:7715  require(studyGroupAddress != address(0), \"Invalid study group address\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2573:2575   */\n      0x20\n        /* \"contracts/StudyTokenAuthority.sol\":7644:7715  require(studyGroupAddress != address(0), \"Invalid study group address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2555:2576   */\n      mstore\n        /* \"#utility.yul\":2612:2614   */\n      0x1b\n        /* \"#utility.yul\":2592:2610   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2585:2615   */\n      mstore\n        /* \"#utility.yul\":2651:2680   */\n      0x496e76616c69642073747564792067726f757020616464726573730000000000\n        /* \"#utility.yul\":2631:2649   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2624:2681   */\n      mstore\n        /* \"#utility.yul\":2698:2716   */\n      0x64\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":7644:7715  require(studyGroupAddress != address(0), \"Invalid study group address\") */\n      tag_101\n        /* \"#utility.yul\":2371:2722   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":7644:7715  require(studyGroupAddress != address(0), \"Invalid study group address\") */\n    tag_104:\n        /* \"contracts/StudyTokenAuthority.sol\":7738:7748  studyToken */\n      sload(0x00)\n        /* \"contracts/StudyTokenAuthority.sol\":7738:7777  studyToken.addMinter(studyGroupAddress) */\n      mload(0x40)\n      shl(0xe1, 0x4c1d96ab)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1513:1545   */\n      dup5\n      dup2\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":7738:7777  studyToken.addMinter(studyGroupAddress) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1495:1546   */\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":7738:7748  studyToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":7738:7758  studyToken.addMinter */\n      0x983b2d56\n      swap1\n        /* \"#utility.yul\":1468:1486   */\n      0x24\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":7738:7777  studyToken.addMinter(studyGroupAddress) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_109\n      jumpi\n      pop\n      0x01\n    tag_109:\n        /* \"contracts/StudyTokenAuthority.sol\":7734:7914  try studyToken.addMinter(studyGroupAddress) {... */\n      tag_110\n      jumpi\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":7898:7903  false */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":7536:7920  function authorizeStudyGroupAsMinter(address studyGroupAddress) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":7734:7914  try studyToken.addMinter(studyGroupAddress) {... */\n    tag_110:\n        /* \"contracts/StudyTokenAuthority.sol\":7797:7834  ContractAuthorized(studyGroupAddress) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0x8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff651\n      swap1\n      0x00\n      swap1\n      log2\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":7855:7859  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":7734:7914  try studyToken.addMinter(studyGroupAddress) {... */\n    tag_114:\n        /* \"contracts/StudyTokenAuthority.sol\":7536:7920  function authorizeStudyGroupAsMinter(address studyGroupAddress) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":6529:6728  function requestMinterRole() external onlyOwner returns (bool) {... */\n    tag_32:\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      sload(0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":6586:6590  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1226  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1235  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1208:1273  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_116:\n        /* \"contracts/StudyTokenAuthority.sol\":6606:6616  studyToken */\n      sload(0x00)\n        /* \"contracts/StudyTokenAuthority.sol\":6606:6641  studyToken.addMinter(address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x4c1d96ab)\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":6635:6639  this */\n      address\n        /* \"contracts/StudyTokenAuthority.sol\":6606:6641  studyToken.addMinter(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1495:1546   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":6606:6616  studyToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":6606:6626  studyToken.addMinter */\n      0x983b2d56\n      swap1\n        /* \"#utility.yul\":1468:1486   */\n      0x24\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":6606:6641  studyToken.addMinter(address(this)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n      0x01\n    tag_121:\n        /* \"contracts/StudyTokenAuthority.sol\":6602:6722  try studyToken.addMinter(address(this)) {... */\n      tag_122\n      jumpi\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":6706:6711  false */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":6529:6728  function requestMinterRole() external onlyOwner returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":6602:6722  try studyToken.addMinter(address(this)) {... */\n    tag_122:\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":6663:6667  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":6529:6728  function requestMinterRole() external onlyOwner returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":3162:3393  function setUserDailyLimit(address user, uint256 limit) external onlyOwner {... */\n    tag_37:\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1226  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1235  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1208:1273  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":3255:3273  user != address(0) */\n      dup3\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":3247:3298  require(user != address(0), \"Invalid user address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2929:2931   */\n      0x20\n        /* \"contracts/StudyTokenAuthority.sol\":3247:3298  require(user != address(0), \"Invalid user address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2911:2932   */\n      mstore\n        /* \"#utility.yul\":2968:2970   */\n      0x14\n        /* \"#utility.yul\":2948:2966   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2941:2971   */\n      mstore\n      shl(0x60, 0x496e76616c696420757365722061646472657373)\n        /* \"#utility.yul\":2987:3005   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2980:3030   */\n      mstore\n        /* \"#utility.yul\":3047:3065   */\n      0x64\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":3247:3298  require(user != address(0), \"Invalid user address\") */\n      tag_101\n        /* \"#utility.yul\":2727:3071   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":3247:3298  require(user != address(0), \"Invalid user address\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":3317:3338  userDailyLimits[user] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":3317:3332  userDailyLimits */\n      0x03\n        /* \"contracts/StudyTokenAuthority.sol\":3317:3338  userDailyLimits[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":3317:3346  userDailyLimits[user] = limit */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/StudyTokenAuthority.sol\":3361:3386  UserLimitSet(user, limit) */\n      mload\n      0xc1395320bc4a9778acf4621c40f54fdde0fafa6177d8012972fca4ec8f7cfa36\n      swap1\n      tag_134\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":3341:3346  limit */\n      dup5\n        /* \"#utility.yul\":1313:1338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1286:1304   */\n      add\n      swap1\n        /* \"#utility.yul\":1167:1344   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":3361:3386  UserLimitSet(user, limit) */\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":3162:3393  function setUserDailyLimit(address user, uint256 limit) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":5698:6023  function authorizeTransfer(address from, address to, uint256 amount) external onlyAuthorized returns (bool) {... */\n    tag_41:\n        /* \"contracts/StudyTokenAuthority.sol\":1365:1375  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":5800:5804  bool */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1376  authorizedContracts[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1364  authorizedContracts */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1376  authorizedContracts[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1399  authorizedContracts[msg.sender] || msg.sender == owner */\n      tag_136\n      jumpi\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":1394:1399  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/StudyTokenAuthority.sol\":1380:1390  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1380:1399  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1399  authorizedContracts[msg.sender] || msg.sender == owner */\n    tag_136:\n        /* \"contracts/StudyTokenAuthority.sol\":1337:1418  require(authorizedContracts[msg.sender] || msg.sender == owner, \"Not authorized\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"contracts/StudyTokenAuthority.sol\":1337:1418  require(authorizedContracts[msg.sender] || msg.sender == owner, \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3260:3281   */\n      mstore\n        /* \"#utility.yul\":3317:3319   */\n      0x0e\n        /* \"#utility.yul\":3297:3315   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3290:3320   */\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":3336:3354   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3329:3373   */\n      mstore\n        /* \"#utility.yul\":3390:3408   */\n      0x64\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":1337:1418  require(authorizedContracts[msg.sender] || msg.sender == owner, \"Not authorized\") */\n      tag_101\n        /* \"#utility.yul\":3076:3414   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":1337:1418  require(authorizedContracts[msg.sender] || msg.sender == owner, \"Not authorized\") */\n    tag_137:\n        /* \"contracts/StudyTokenAuthority.sol\":5970:5974  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":5947:5995  TokenOperationApproved(from, amount, \"transfer\") */\n      and\n      0x09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b3\n        /* \"contracts/StudyTokenAuthority.sol\":5976:5982  amount */\n      dup4\n        /* \"contracts/StudyTokenAuthority.sol\":5947:5995  TokenOperationApproved(from, amount, \"transfer\") */\n      mload(0x40)\n      tag_141\n      swap2\n        /* \"#utility.yul\":3631:3656   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3692:3694   */\n      0x40\n        /* \"#utility.yul\":3687:3689   */\n      0x20\n        /* \"#utility.yul\":3672:3690   */\n      dup3\n      add\n        /* \"#utility.yul\":3665:3695   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3731:3732   */\n      0x08\n        /* \"#utility.yul\":3711:3729   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3704:3733   */\n      mstore\n      shl(0xc1, 0x3a3930b739b332b9)\n        /* \"#utility.yul\":3764:3766   */\n      0x60\n        /* \"#utility.yul\":3749:3767   */\n      dup3\n      add\n        /* \"#utility.yul\":3742:3780   */\n      mstore\n        /* \"#utility.yul\":3812:3815   */\n      0x80\n        /* \"#utility.yul\":3797:3816   */\n      add\n      swap1\n        /* \"#utility.yul\":3419:3822   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":5947:5995  TokenOperationApproved(from, amount, \"transfer\") */\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":6012:6016  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":5698:6023  function authorizeTransfer(address from, address to, uint256 amount) external onlyAuthorized returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":3752:3855  function getCurrentDay() public view returns (uint256) {... */\n    tag_49:\n        /* \"contracts/StudyTokenAuthority.sol\":3798:3805  uint256 */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":3824:3848  block.timestamp / 1 days */\n      tag_144\n        /* \"contracts/StudyTokenAuthority.sol\":3842:3848  1 days */\n      0x015180\n        /* \"contracts/StudyTokenAuthority.sol\":3824:3839  block.timestamp */\n      timestamp\n        /* \"contracts/StudyTokenAuthority.sol\":3824:3848  block.timestamp / 1 days */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"contracts/StudyTokenAuthority.sol\":3817:3848  return block.timestamp / 1 days */\n      swap1\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":3752:3855  function getCurrentDay() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":2244:2597  function authorizeContract(address contractAddress) external onlyOwner {... */\n    tag_53:\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1226  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1235  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1208:1273  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":2333:2362  contractAddress != address(0) */\n      dup2\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2325:2391  require(contractAddress != address(0), \"Invalid contract address\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4383:4385   */\n      0x20\n        /* \"contracts/StudyTokenAuthority.sol\":2325:2391  require(contractAddress != address(0), \"Invalid contract address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4365:4386   */\n      mstore\n        /* \"#utility.yul\":4422:4424   */\n      0x18\n        /* \"#utility.yul\":4402:4420   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4395:4425   */\n      mstore\n        /* \"#utility.yul\":4461:4487   */\n      0x496e76616c696420636f6e747261637420616464726573730000000000000000\n        /* \"#utility.yul\":4441:4459   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4434:4488   */\n      mstore\n        /* \"#utility.yul\":4505:4523   */\n      0x64\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":2325:2391  require(contractAddress != address(0), \"Invalid contract address\") */\n      tag_101\n        /* \"#utility.yul\":4181:4529   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":2325:2391  require(contractAddress != address(0), \"Invalid contract address\") */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":2410:2446  authorizedContracts[contractAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":2410:2429  authorizedContracts */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":2410:2446  authorizedContracts[contractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2409:2446  !authorizedContracts[contractAddress] */\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":2401:2478  require(!authorizedContracts[contractAddress], \"Contract already authorized\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4736:4738   */\n      0x20\n        /* \"contracts/StudyTokenAuthority.sol\":2401:2478  require(!authorizedContracts[contractAddress], \"Contract already authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4718:4739   */\n      mstore\n        /* \"#utility.yul\":4775:4777   */\n      0x1b\n        /* \"#utility.yul\":4755:4773   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4748:4778   */\n      mstore\n        /* \"#utility.yul\":4814:4843   */\n      0x436f6e747261637420616c726561647920617574686f72697a65640000000000\n        /* \"#utility.yul\":4794:4812   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4787:4844   */\n      mstore\n        /* \"#utility.yul\":4861:4879   */\n      0x64\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":2401:2478  require(!authorizedContracts[contractAddress], \"Contract already authorized\") */\n      tag_101\n        /* \"#utility.yul\":4534:4885   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":2401:2478  require(!authorizedContracts[contractAddress], \"Contract already authorized\") */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2533  authorizedContracts[contractAddress] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2516  authorizedContracts */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2533  authorizedContracts[contractAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2540  authorizedContracts[contractAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2536:2540  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2540  authorizedContracts[contractAddress] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/StudyTokenAuthority.sol\":2555:2590  ContractAuthorized(contractAddress) */\n      mload\n      0x8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff651\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2533  authorizedContracts[contractAddress] */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":2555:2590  ContractAuthorized(contractAddress) */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":2244:2597  function authorizeContract(address contractAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":2727:3004  function deauthorizeContract(address contractAddress) external onlyOwner {... */\n    tag_56:\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1226  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1235  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1208:1273  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":2818:2854  authorizedContracts[contractAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":2818:2837  authorizedContracts */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":2818:2854  authorizedContracts[contractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2810:2882  require(authorizedContracts[contractAddress], \"Contract not authorized\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5092:5094   */\n      0x20\n        /* \"contracts/StudyTokenAuthority.sol\":2810:2882  require(authorizedContracts[contractAddress], \"Contract not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5074:5095   */\n      mstore\n        /* \"#utility.yul\":5131:5133   */\n      0x17\n        /* \"#utility.yul\":5111:5129   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5104:5134   */\n      mstore\n        /* \"#utility.yul\":5170:5195   */\n      0x436f6e7472616374206e6f7420617574686f72697a6564000000000000000000\n        /* \"#utility.yul\":5150:5168   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5143:5196   */\n      mstore\n        /* \"#utility.yul\":5213:5231   */\n      0x64\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":2810:2882  require(authorizedContracts[contractAddress], \"Contract not authorized\") */\n      tag_101\n        /* \"#utility.yul\":4890:5237   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":2810:2882  require(authorizedContracts[contractAddress], \"Contract not authorized\") */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":2901:2937  authorizedContracts[contractAddress] */\n      dup2\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2940:2945  false */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":2901:2937  authorizedContracts[contractAddress] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":2901:2920  authorizedContracts */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":2901:2937  authorizedContracts[contractAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":2901:2945  authorizedContracts[contractAddress] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/StudyTokenAuthority.sol\":2960:2997  ContractDeauthorized(contractAddress) */\n      mload\n      0x54142b7cb3ceaa9e564243ce4cc2303723c842a1144192de6b3c594f68b16a9a\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":2940:2945  false */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":2960:2997  ContractDeauthorized(contractAddress) */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":2727:3004  function deauthorizeContract(address contractAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":4005:4196  function getUserDailyLimit(address user) public view returns (uint256) {... */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":4106:4127  userDailyLimits[user] */\n      dup2\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":4067:4074  uint256 */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":4106:4127  userDailyLimits[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":4106:4121  userDailyLimits */\n      0x03\n        /* \"contracts/StudyTokenAuthority.sol\":4106:4127  userDailyLimits[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":4144:4157  userLimit > 0 */\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":4144:4189  userLimit > 0 ? userLimit : defaultDailyLimit */\n      tag_164\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":4172:4189  defaultDailyLimit */\n      sload(0x04)\n        /* \"contracts/StudyTokenAuthority.sol\":4144:4189  userLimit > 0 ? userLimit : defaultDailyLimit */\n      jump(tag_165)\n    tag_164:\n        /* \"contracts/StudyTokenAuthority.sol\":4160:4169  userLimit */\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":4144:4189  userLimit > 0 ? userLimit : defaultDailyLimit */\n    tag_165:\n        /* \"contracts/StudyTokenAuthority.sol\":4137:4189  return userLimit > 0 ? userLimit : defaultDailyLimit */\n      swap4\n        /* \"contracts/StudyTokenAuthority.sol\":4005:4196  function getUserDailyLimit(address user) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":4871:5441  function authorizeMint(address to, uint256 amount) external onlyAuthorized returns (bool) {... */\n    tag_67:\n        /* \"contracts/StudyTokenAuthority.sol\":1365:1375  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":4955:4959  bool */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1376  authorizedContracts[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1364  authorizedContracts */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1376  authorizedContracts[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1399  authorizedContracts[msg.sender] || msg.sender == owner */\n      tag_167\n      jumpi\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":1394:1399  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/StudyTokenAuthority.sol\":1380:1390  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1380:1399  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1345:1399  authorizedContracts[msg.sender] || msg.sender == owner */\n    tag_167:\n        /* \"contracts/StudyTokenAuthority.sol\":1337:1418  require(authorizedContracts[msg.sender] || msg.sender == owner, \"Not authorized\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"contracts/StudyTokenAuthority.sol\":1337:1418  require(authorizedContracts[msg.sender] || msg.sender == owner, \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3260:3281   */\n      mstore\n        /* \"#utility.yul\":3317:3319   */\n      0x0e\n        /* \"#utility.yul\":3297:3315   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3290:3320   */\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":3336:3354   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3329:3373   */\n      mstore\n        /* \"#utility.yul\":3390:3408   */\n      0x64\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":1337:1418  require(authorizedContracts[msg.sender] || msg.sender == owner, \"Not authorized\") */\n      tag_101\n        /* \"#utility.yul\":3076:3414   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":1337:1418  require(authorizedContracts[msg.sender] || msg.sender == owner, \"Not authorized\") */\n    tag_168:\n        /* \"contracts/StudyTokenAuthority.sol\":4971:4988  uint256 dayNumber */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":4991:5006  getCurrentDay() */\n      tag_171\n        /* \"contracts/StudyTokenAuthority.sol\":4991:5004  getCurrentDay */\n      tag_49\n        /* \"contracts/StudyTokenAuthority.sol\":4991:5006  getCurrentDay() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/StudyTokenAuthority.sol\":4971:5006  uint256 dayNumber = getCurrentDay() */\n      swap1\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":5016:5033  uint256 userLimit */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":5036:5057  getUserDailyLimit(to) */\n      tag_172\n        /* \"contracts/StudyTokenAuthority.sol\":5054:5056  to */\n      dup6\n        /* \"contracts/StudyTokenAuthority.sol\":5036:5053  getUserDailyLimit */\n      tag_59\n        /* \"contracts/StudyTokenAuthority.sol\":5036:5057  getUserDailyLimit(to) */\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":5087:5105  userDailyUsage[to] */\n      dup7\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":5067:5084  uint256 usedToday */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":5087:5105  userDailyUsage[to] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":5087:5101  userDailyUsage */\n      0x05\n        /* \"contracts/StudyTokenAuthority.sol\":5087:5105  userDailyUsage[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":5087:5116  userDailyUsage[to][dayNumber] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":5016:5057  uint256 userLimit = getUserDailyLimit(to) */\n      swap1\n      swap2\n      pop\n      dup2\n        /* \"contracts/StudyTokenAuthority.sol\":5139:5157  usedToday + amount */\n      tag_173\n        /* \"contracts/StudyTokenAuthority.sol\":5151:5157  amount */\n      dup7\n        /* \"contracts/StudyTokenAuthority.sol\":5087:5116  userDailyUsage[to][dayNumber] */\n      dup4\n        /* \"contracts/StudyTokenAuthority.sol\":5139:5157  usedToday + amount */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"contracts/StudyTokenAuthority.sol\":5139:5170  usedToday + amount <= userLimit */\n      gt\n        /* \"contracts/StudyTokenAuthority.sol\":5135:5435  if (usedToday + amount <= userLimit) {... */\n      tag_175\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":5218:5236  usedToday + amount */\n      tag_176\n        /* \"contracts/StudyTokenAuthority.sol\":5230:5236  amount */\n      dup6\n        /* \"contracts/StudyTokenAuthority.sol\":5218:5227  usedToday */\n      dup3\n        /* \"contracts/StudyTokenAuthority.sol\":5218:5236  usedToday + amount */\n      tag_174\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":5186:5204  userDailyUsage[to] */\n      dup8\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":5186:5200  userDailyUsage */\n      0x05\n        /* \"contracts/StudyTokenAuthority.sol\":5186:5204  userDailyUsage[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":5186:5215  userDailyUsage[to][dayNumber] */\n      dup9\n      dup5\n      mstore\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":5186:5236  userDailyUsage[to][dayNumber] = usedToday + amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/StudyTokenAuthority.sol\":5255:5297  TokenOperationApproved(to, amount, \"mint\") */\n      dup1\n      mload\n        /* \"#utility.yul\":5584:5609   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":5625:5643   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":5618:5648   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5684:5685   */\n      0x04\n        /* \"#utility.yul\":5664:5682   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":5657:5686   */\n      mstore\n      shl(0xe2, 0x1b5a5b9d)\n        /* \"#utility.yul\":5717:5719   */\n      0x60\n        /* \"#utility.yul\":5702:5720   */\n      dup4\n      add\n        /* \"#utility.yul\":5695:5729   */\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":5186:5204  userDailyUsage[to] */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":5255:5297  TokenOperationApproved(to, amount, \"mint\") */\n      0x09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b3\n      swap1\n        /* \"#utility.yul\":5761:5764   */\n      0x80\n        /* \"#utility.yul\":5746:5765   */\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":5255:5297  TokenOperationApproved(to, amount, \"mint\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":5318:5322  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":5311:5322  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_170)\n        /* \"contracts/StudyTokenAuthority.sol\":5135:5435  if (usedToday + amount <= userLimit) {... */\n    tag_175:\n        /* \"contracts/StudyTokenAuthority.sol\":5379:5381  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":5358:5398  TokenOperationDenied(to, amount, \"mint\") */\n      and\n      0x36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf\n        /* \"contracts/StudyTokenAuthority.sol\":5383:5389  amount */\n      dup7\n        /* \"contracts/StudyTokenAuthority.sol\":5358:5398  TokenOperationDenied(to, amount, \"mint\") */\n      mload(0x40)\n      tag_180\n      swap2\n        /* \"#utility.yul\":5584:5609   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5645:5647   */\n      0x40\n        /* \"#utility.yul\":5640:5642   */\n      0x20\n        /* \"#utility.yul\":5625:5643   */\n      dup3\n      add\n        /* \"#utility.yul\":5618:5648   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5684:5685   */\n      0x04\n        /* \"#utility.yul\":5664:5682   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5657:5686   */\n      mstore\n      shl(0xe2, 0x1b5a5b9d)\n        /* \"#utility.yul\":5717:5719   */\n      0x60\n        /* \"#utility.yul\":5702:5720   */\n      dup3\n      add\n        /* \"#utility.yul\":5695:5729   */\n      mstore\n        /* \"#utility.yul\":5761:5764   */\n      0x80\n        /* \"#utility.yul\":5746:5765   */\n      add\n      swap1\n        /* \"#utility.yul\":5372:5771   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":5358:5398  TokenOperationDenied(to, amount, \"mint\") */\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":5419:5424  false */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":5412:5424  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":1428:1429  _ */\n    tag_170:\n        /* \"contracts/StudyTokenAuthority.sol\":4871:5441  function authorizeMint(address to, uint256 amount) external onlyAuthorized returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":6172:6378  function setStudyToken(address _studyTokenAddress) external onlyOwner {... */\n    tag_75:\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1226  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1235  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1208:1273  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":6260:6292  _studyTokenAddress != address(0) */\n      dup2\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":6252:6318  require(_studyTokenAddress != address(0), \"Invalid token address\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5978:5980   */\n      0x20\n        /* \"contracts/StudyTokenAuthority.sol\":6252:6318  require(_studyTokenAddress != address(0), \"Invalid token address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5960:5981   */\n      mstore\n        /* \"#utility.yul\":6017:6019   */\n      0x15\n        /* \"#utility.yul\":5997:6015   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5990:6020   */\n      mstore\n      shl(0x58, 0x496e76616c696420746f6b656e2061646472657373)\n        /* \"#utility.yul\":6036:6054   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6029:6080   */\n      mstore\n        /* \"#utility.yul\":6097:6115   */\n      0x64\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":6252:6318  require(_studyTokenAddress != address(0), \"Invalid token address\") */\n      tag_101\n        /* \"#utility.yul\":5776:6121   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":6252:6318  require(_studyTokenAddress != address(0), \"Invalid token address\") */\n    tag_185:\n        /* \"contracts/StudyTokenAuthority.sol\":6328:6338  studyToken */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":6328:6371  studyToken = StudyToken(_studyTokenAddress) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/StudyTokenAuthority.sol\":6172:6378  function setStudyToken(address _studyTokenAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":3516:3622  function setDefaultDailyLimit(uint256 limit) external onlyOwner {... */\n    tag_83:\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1226  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1235  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1208:1273  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_189:\n        /* \"contracts/StudyTokenAuthority.sol\":3590:3607  defaultDailyLimit */\n      0x04\n        /* \"contracts/StudyTokenAuthority.sol\":3590:3615  defaultDailyLimit = limit */\n      sstore\n        /* \"contracts/StudyTokenAuthority.sol\":3516:3622  function setDefaultDailyLimit(uint256 limit) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":4356:4662  function getRemainingDailyLimit(address user) public view returns (uint256) {... */\n    tag_93:\n        /* \"contracts/StudyTokenAuthority.sol\":4423:4430  uint256 */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":4442:4459  uint256 dayNumber */\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":4462:4477  getCurrentDay() */\n      tag_193\n        /* \"contracts/StudyTokenAuthority.sol\":4462:4475  getCurrentDay */\n      tag_49\n        /* \"contracts/StudyTokenAuthority.sol\":4462:4477  getCurrentDay() */\n      jump\t// in\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":4507:4527  userDailyUsage[user] */\n      dup5\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":4487:4504  uint256 usedToday */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":4507:4527  userDailyUsage[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":4507:4521  userDailyUsage */\n      0x05\n        /* \"contracts/StudyTokenAuthority.sol\":4507:4527  userDailyUsage[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":4507:4538  userDailyUsage[user][dayNumber] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":4442:4477  uint256 dayNumber = getCurrentDay() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":4564:4587  getUserDailyLimit(user) */\n      tag_194\n        /* \"contracts/StudyTokenAuthority.sol\":4522:4526  user */\n      dup6\n        /* \"contracts/StudyTokenAuthority.sol\":4564:4581  getUserDailyLimit */\n      tag_59\n        /* \"contracts/StudyTokenAuthority.sol\":4564:4587  getUserDailyLimit(user) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/StudyTokenAuthority.sol\":4548:4587  uint256 limit = getUserDailyLimit(user) */\n      swap1\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":4626:4631  limit */\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":4613:4622  usedToday */\n      dup3\n        /* \"contracts/StudyTokenAuthority.sol\":4613:4631  usedToday >= limit */\n      lt\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":4613:4655  usedToday >= limit ? 0 : limit - usedToday */\n      tag_195\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":4638:4655  limit - usedToday */\n      tag_196\n        /* \"contracts/StudyTokenAuthority.sol\":4646:4655  usedToday */\n      dup3\n        /* \"contracts/StudyTokenAuthority.sol\":4638:4643  limit */\n      dup3\n        /* \"contracts/StudyTokenAuthority.sol\":4638:4655  limit - usedToday */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/StudyTokenAuthority.sol\":4613:4655  usedToday >= limit ? 0 : limit - usedToday */\n      jump(tag_198)\n    tag_195:\n        /* \"contracts/StudyTokenAuthority.sol\":4634:4635  0 */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":4613:4655  usedToday >= limit ? 0 : limit - usedToday */\n    tag_198:\n        /* \"contracts/StudyTokenAuthority.sol\":4606:4655  return usedToday >= limit ? 0 : limit - usedToday */\n      swap6\n        /* \"contracts/StudyTokenAuthority.sol\":4356:4662  function getRemainingDailyLimit(address user) public view returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":6958:7312  function mintTokens(address to, uint256 amount) external onlyOwner returns (bool) {... */\n    tag_97:\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      sload(0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":7034:7038  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":1230:1235  owner */\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1226  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":1216:1235  msg.sender == owner */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":1208:1273  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_200:\n        /* \"contracts/StudyTokenAuthority.sol\":7054:7064  studyToken */\n      sload(0x00)\n        /* \"contracts/StudyTokenAuthority.sol\":7054:7087  studyToken.mintReward(to, amount) */\n      mload(0x40)\n      shl(0xe1, 0x4d248487)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6451:6483   */\n      dup6\n      dup2\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":7054:7087  studyToken.mintReward(to, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6433:6484   */\n      mstore\n        /* \"#utility.yul\":6500:6518   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6493:6527   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":7054:7064  studyToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":7054:7075  studyToken.mintReward */\n      0x9a49090e\n      swap1\n        /* \"#utility.yul\":6406:6424   */\n      0x44\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":7054:7087  studyToken.mintReward(to, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n      0x01\n    tag_206:\n        /* \"contracts/StudyTokenAuthority.sol\":7050:7306  try studyToken.mintReward(to, amount) {... */\n      tag_207\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":7241:7243  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":7220:7269  TokenOperationDenied(to, amount, \"authorityMint\") */\n      and\n      0x36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf\n        /* \"contracts/StudyTokenAuthority.sol\":7245:7251  amount */\n      dup4\n        /* \"contracts/StudyTokenAuthority.sol\":7220:7269  TokenOperationDenied(to, amount, \"authorityMint\") */\n      mload(0x40)\n      tag_211\n      swap2\n        /* \"#utility.yul\":6750:6775   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6811:6813   */\n      0x40\n        /* \"#utility.yul\":6806:6808   */\n      0x20\n        /* \"#utility.yul\":6791:6809   */\n      dup3\n      add\n        /* \"#utility.yul\":6784:6814   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6850:6852   */\n      0x0d\n        /* \"#utility.yul\":6830:6848   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6823:6853   */\n      mstore\n      shl(0x9a, 0x185d5d1a1bdc9a5d1e535a5b9d)\n        /* \"#utility.yul\":6884:6886   */\n      0x60\n        /* \"#utility.yul\":6869:6887   */\n      dup3\n      add\n        /* \"#utility.yul\":6862:6905   */\n      mstore\n        /* \"#utility.yul\":6937:6940   */\n      0x80\n        /* \"#utility.yul\":6922:6941   */\n      add\n      swap1\n        /* \"#utility.yul\":6538:6947   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":7220:7269  TokenOperationDenied(to, amount, \"authorityMint\") */\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":7290:7295  false */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":7283:7295  return false */\n      jump(tag_170)\n        /* \"contracts/StudyTokenAuthority.sol\":7050:7306  try studyToken.mintReward(to, amount) {... */\n    tag_207:\n        /* \"contracts/StudyTokenAuthority.sol\":7130:7132  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":7107:7158  TokenOperationApproved(to, amount, \"authorityMint\") */\n      and\n      0x09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b3\n        /* \"contracts/StudyTokenAuthority.sol\":7134:7140  amount */\n      dup4\n        /* \"contracts/StudyTokenAuthority.sol\":7107:7158  TokenOperationApproved(to, amount, \"authorityMint\") */\n      mload(0x40)\n      tag_214\n      swap2\n        /* \"#utility.yul\":6750:6775   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6811:6813   */\n      0x40\n        /* \"#utility.yul\":6806:6808   */\n      0x20\n        /* \"#utility.yul\":6791:6809   */\n      dup3\n      add\n        /* \"#utility.yul\":6784:6814   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6850:6852   */\n      0x0d\n        /* \"#utility.yul\":6830:6848   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6823:6853   */\n      mstore\n      shl(0x9a, 0x185d5d1a1bdc9a5d1e535a5b9d)\n        /* \"#utility.yul\":6884:6886   */\n      0x60\n        /* \"#utility.yul\":6869:6887   */\n      dup3\n      add\n        /* \"#utility.yul\":6862:6905   */\n      mstore\n        /* \"#utility.yul\":6937:6940   */\n      0x80\n        /* \"#utility.yul\":6922:6941   */\n      add\n      swap1\n        /* \"#utility.yul\":6538:6947   */\n      jump\n        /* \"contracts/StudyTokenAuthority.sol\":7107:7158  TokenOperationApproved(to, amount, \"authorityMint\") */\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":7179:7183  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":7172:7183  return true */\n      jump(tag_170)\n        /* \"#utility.yul\":14:187   */\n    tag_215:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:378   */\n    tag_27:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_221:\n        /* \"#utility.yul\":343:372   */\n      tag_165\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_215\n      jump\t// in\n        /* \"#utility.yul\":575:829   */\n    tag_36:\n        /* \"#utility.yul\":643:649   */\n      0x00\n        /* \"#utility.yul\":651:657   */\n      dup1\n        /* \"#utility.yul\":704:706   */\n      0x40\n        /* \"#utility.yul\":692:701   */\n      dup4\n        /* \"#utility.yul\":683:690   */\n      dup6\n        /* \"#utility.yul\":679:702   */\n      sub\n        /* \"#utility.yul\":675:707   */\n      slt\n        /* \"#utility.yul\":672:724   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":720:721   */\n      0x00\n        /* \"#utility.yul\":717:718   */\n      dup1\n        /* \"#utility.yul\":710:722   */\n      revert\n        /* \"#utility.yul\":672:724   */\n    tag_225:\n        /* \"#utility.yul\":743:772   */\n      tag_226\n        /* \"#utility.yul\":762:771   */\n      dup4\n        /* \"#utility.yul\":743:772   */\n      tag_215\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":733:772   */\n      swap5\n        /* \"#utility.yul\":819:821   */\n      0x20\n        /* \"#utility.yul\":804:822   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":791:823   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":575:829   */\n      jump\t// out\n        /* \"#utility.yul\":834:1162   */\n    tag_40:\n        /* \"#utility.yul\":911:917   */\n      0x00\n        /* \"#utility.yul\":919:925   */\n      dup1\n        /* \"#utility.yul\":927:933   */\n      0x00\n        /* \"#utility.yul\":980:982   */\n      0x60\n        /* \"#utility.yul\":968:977   */\n      dup5\n        /* \"#utility.yul\":959:966   */\n      dup7\n        /* \"#utility.yul\":955:978   */\n      sub\n        /* \"#utility.yul\":951:983   */\n      slt\n        /* \"#utility.yul\":948:1000   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":996:997   */\n      0x00\n        /* \"#utility.yul\":993:994   */\n      dup1\n        /* \"#utility.yul\":986:998   */\n      revert\n        /* \"#utility.yul\":948:1000   */\n    tag_228:\n        /* \"#utility.yul\":1019:1048   */\n      tag_229\n        /* \"#utility.yul\":1038:1047   */\n      dup5\n        /* \"#utility.yul\":1019:1048   */\n      tag_215\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1009:1048   */\n      swap3\n      pop\n        /* \"#utility.yul\":1067:1105   */\n      tag_230\n        /* \"#utility.yul\":1101:1103   */\n      0x20\n        /* \"#utility.yul\":1090:1099   */\n      dup6\n        /* \"#utility.yul\":1086:1104   */\n      add\n        /* \"#utility.yul\":1067:1105   */\n      tag_215\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1057:1105   */\n      swap2\n      pop\n        /* \"#utility.yul\":1152:1154   */\n      0x40\n        /* \"#utility.yul\":1141:1150   */\n      dup5\n        /* \"#utility.yul\":1137:1155   */\n      add\n        /* \"#utility.yul\":1124:1156   */\n      calldataload\n        /* \"#utility.yul\":1114:1156   */\n      swap1\n      pop\n        /* \"#utility.yul\":834:1162   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1784:1964   */\n    tag_82:\n        /* \"#utility.yul\":1843:1849   */\n      0x00\n        /* \"#utility.yul\":1896:1898   */\n      0x20\n        /* \"#utility.yul\":1884:1893   */\n      dup3\n        /* \"#utility.yul\":1875:1882   */\n      dup5\n        /* \"#utility.yul\":1871:1894   */\n      sub\n        /* \"#utility.yul\":1867:1899   */\n      slt\n        /* \"#utility.yul\":1864:1916   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1909:1910   */\n      dup1\n        /* \"#utility.yul\":1902:1914   */\n      revert\n        /* \"#utility.yul\":1864:1916   */\n    tag_235:\n      pop\n        /* \"#utility.yul\":1935:1958   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1784:1964   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1969:2366   */\n    tag_102:\n        /* \"#utility.yul\":2171:2173   */\n      0x20\n        /* \"#utility.yul\":2153:2174   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2210:2212   */\n      0x21\n        /* \"#utility.yul\":2190:2208   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2183:2213   */\n      mstore\n        /* \"#utility.yul\":2249:2283   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":2244:2246   */\n      0x40\n        /* \"#utility.yul\":2229:2247   */\n      dup3\n      add\n        /* \"#utility.yul\":2222:2284   */\n      mstore\n      shl(0xf9, 0x37)\n        /* \"#utility.yul\":2315:2317   */\n      0x60\n        /* \"#utility.yul\":2300:2318   */\n      dup3\n      add\n        /* \"#utility.yul\":2293:2324   */\n      mstore\n        /* \"#utility.yul\":2356:2359   */\n      0x80\n        /* \"#utility.yul\":2341:2360   */\n      add\n      swap1\n        /* \"#utility.yul\":1969:2366   */\n      jump\t// out\n        /* \"#utility.yul\":3827:3954   */\n    tag_216:\n        /* \"#utility.yul\":3888:3898   */\n      0x4e487b71\n        /* \"#utility.yul\":3883:3886   */\n      0xe0\n        /* \"#utility.yul\":3879:3899   */\n      shl\n        /* \"#utility.yul\":3876:3877   */\n      0x00\n        /* \"#utility.yul\":3869:3900   */\n      mstore\n        /* \"#utility.yul\":3919:3923   */\n      0x11\n        /* \"#utility.yul\":3916:3917   */\n      0x04\n        /* \"#utility.yul\":3909:3924   */\n      mstore\n        /* \"#utility.yul\":3943:3947   */\n      0x24\n        /* \"#utility.yul\":3940:3941   */\n      0x00\n        /* \"#utility.yul\":3933:3948   */\n      revert\n        /* \"#utility.yul\":3959:4176   */\n    tag_145:\n        /* \"#utility.yul\":3999:4000   */\n      0x00\n        /* \"#utility.yul\":4025:4026   */\n      dup3\n        /* \"#utility.yul\":4015:4147   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":4069:4079   */\n      0x4e487b71\n        /* \"#utility.yul\":4064:4067   */\n      0xe0\n        /* \"#utility.yul\":4060:4080   */\n      shl\n        /* \"#utility.yul\":4057:4058   */\n      0x00\n        /* \"#utility.yul\":4050:4081   */\n      mstore\n        /* \"#utility.yul\":4104:4108   */\n      0x12\n        /* \"#utility.yul\":4101:4102   */\n      0x04\n        /* \"#utility.yul\":4094:4109   */\n      mstore\n        /* \"#utility.yul\":4132:4136   */\n      0x24\n        /* \"#utility.yul\":4129:4130   */\n      0x00\n        /* \"#utility.yul\":4122:4137   */\n      revert\n        /* \"#utility.yul\":4015:4147   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":4161:4170   */\n      div\n      swap1\n        /* \"#utility.yul\":3959:4176   */\n      jump\t// out\n        /* \"#utility.yul\":5242:5367   */\n    tag_174:\n        /* \"#utility.yul\":5307:5316   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5328:5338   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5325:5361   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":5341:5359   */\n      tag_170\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":6126:6254   */\n    tag_197:\n        /* \"#utility.yul\":6193:6202   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6214:6225   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6211:6248   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":6228:6246   */\n      tag_170\n      tag_216\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220367faa81006eb8ec7b0c7ddc297ba351c354280ca61d61d282683a9493a679f864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1206": {
									"entryPoint": null,
									"id": 1206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:717:8",
										"nodeType": "YulBlock",
										"src": "0:717:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "112:253:8",
													"nodeType": "YulBlock",
													"src": "112:253:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "158:16:8",
																"nodeType": "YulBlock",
																"src": "158:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "167:1:8",
																					"nodeType": "YulLiteral",
																					"src": "167:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "170:1:8",
																					"nodeType": "YulLiteral",
																					"src": "170:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "160:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "160:6:8"
																			},
																			"nativeSrc": "160:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "160:12:8"
																		},
																		"nativeSrc": "160:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "160:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "133:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "133:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "142:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "142:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "129:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "129:3:8"
																		},
																		"nativeSrc": "129:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "129:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "154:2:8",
																		"nodeType": "YulLiteral",
																		"src": "154:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "125:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:8"
																},
																"nativeSrc": "125:32:8",
																"nodeType": "YulFunctionCall",
																"src": "125:32:8"
															},
															"nativeSrc": "122:52:8",
															"nodeType": "YulIf",
															"src": "122:52:8"
														},
														{
															"nativeSrc": "183:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "183:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "202:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "202:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "196:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "196:5:8"
																},
																"nativeSrc": "196:16:8",
																"nodeType": "YulFunctionCall",
																"src": "196:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "187:5:8",
																	"nodeType": "YulTypedName",
																	"src": "187:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "275:16:8",
																"nodeType": "YulBlock",
																"src": "275:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "284:1:8",
																					"nodeType": "YulLiteral",
																					"src": "284:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "287:1:8",
																					"nodeType": "YulLiteral",
																					"src": "287:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "277:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:8"
																			},
																			"nativeSrc": "277:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "277:12:8"
																		},
																		"nativeSrc": "277:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "277:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "234:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "234:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "245:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "245:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "260:3:8",
																										"nodeType": "YulLiteral",
																										"src": "260:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "265:1:8",
																										"nodeType": "YulLiteral",
																										"src": "265:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "256:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "256:3:8"
																								},
																								"nativeSrc": "256:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "256:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "269:1:8",
																								"nodeType": "YulLiteral",
																								"src": "269:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "252:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "252:3:8"
																						},
																						"nativeSrc": "252:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "252:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "241:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "241:3:8"
																				},
																				"nativeSrc": "241:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "241:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "231:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "231:2:8"
																		},
																		"nativeSrc": "231:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "231:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "224:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "224:6:8"
																},
																"nativeSrc": "224:50:8",
																"nodeType": "YulFunctionCall",
																"src": "224:50:8"
															},
															"nativeSrc": "221:70:8",
															"nodeType": "YulIf",
															"src": "221:70:8"
														},
														{
															"nativeSrc": "300:15:8",
															"nodeType": "YulAssignment",
															"src": "300:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "310:5:8",
																"nodeType": "YulIdentifier",
																"src": "310:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "300:6:8"
																}
															]
														},
														{
															"nativeSrc": "324:35:8",
															"nodeType": "YulAssignment",
															"src": "324:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "344:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "344:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "355:2:8",
																				"nodeType": "YulLiteral",
																				"src": "355:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "340:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "340:3:8"
																		},
																		"nativeSrc": "340:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "340:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "334:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "334:5:8"
																},
																"nativeSrc": "334:25:8",
																"nodeType": "YulFunctionCall",
																"src": "334:25:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "324:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "14:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "70:9:8",
														"nodeType": "YulTypedName",
														"src": "70:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "81:7:8",
														"nodeType": "YulTypedName",
														"src": "81:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "93:6:8",
														"nodeType": "YulTypedName",
														"src": "93:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "101:6:8",
														"nodeType": "YulTypedName",
														"src": "101:6:8",
														"type": ""
													}
												],
												"src": "14:351:8"
											},
											{
												"body": {
													"nativeSrc": "544:171:8",
													"nodeType": "YulBlock",
													"src": "544:171:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "561:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "561:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "572:2:8",
																		"nodeType": "YulLiteral",
																		"src": "572:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "554:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "554:6:8"
																},
																"nativeSrc": "554:21:8",
																"nodeType": "YulFunctionCall",
																"src": "554:21:8"
															},
															"nativeSrc": "554:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "554:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "595:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "595:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "606:2:8",
																				"nodeType": "YulLiteral",
																				"src": "606:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "591:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "591:3:8"
																		},
																		"nativeSrc": "591:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "591:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "611:2:8",
																		"nodeType": "YulLiteral",
																		"src": "611:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "584:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:8"
																},
																"nativeSrc": "584:30:8",
																"nodeType": "YulFunctionCall",
																"src": "584:30:8"
															},
															"nativeSrc": "584:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "584:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "634:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "645:2:8",
																				"nodeType": "YulLiteral",
																				"src": "645:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "630:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "630:3:8"
																		},
																		"nativeSrc": "630:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "630:18:8"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "650:23:8",
																		"nodeType": "YulLiteral",
																		"src": "650:23:8",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "623:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:8"
																},
																"nativeSrc": "623:51:8",
																"nodeType": "YulFunctionCall",
																"src": "623:51:8"
															},
															"nativeSrc": "623:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "623:51:8"
														},
														{
															"nativeSrc": "683:26:8",
															"nodeType": "YulAssignment",
															"src": "683:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "695:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "695:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "706:2:8",
																		"nodeType": "YulLiteral",
																		"src": "706:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "691:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "691:3:8"
																},
																"nativeSrc": "691:18:8",
																"nodeType": "YulFunctionCall",
																"src": "691:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "683:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "683:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "370:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "521:9:8",
														"nodeType": "YulTypedName",
														"src": "521:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "535:4:8",
														"nodeType": "YulTypedName",
														"src": "535:4:8",
														"type": ""
													}
												],
												"src": "370:345:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid token address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610f60380380610f6083398101604081905261002e916100fb565b6001600160a01b0382166100885760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e20616464726573730000000000000000000000604482015260640160405180910390fd5b60018054336001600160a01b0319918216811783555f80549092166001600160a01b038616178255600484905580825260026020526040808320805460ff191690941790935591517f8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff6519190a25050610132565b5f806040838503121561010c575f80fd5b82516001600160a01b0381168114610122575f80fd5b6020939093015192949293505050565b610e218061013f5f395ff3fe608060405234801561000f575f80fd5b506004361061011c575f3560e01c80638da5cb5b116100a9578063bebbcfe61161006e578063bebbcfe614610273578063c76b088814610286578063d5b9221b1461028f578063ec37d259146102b1578063f0dda65c146102c4575f80fd5b80638da5cb5b146101e65780639b32ea6d14610211578063a7481b5b14610224578063b09a8a0414610236578063b6fa284d14610249575f80fd5b8063360cf54a116100ef578063360cf54a146101785780633e6968b6146101a557806367561d93146101ad5780636e861c0e146101c057806377865f91146101d3575f80fd5b80630a0d6de114610120578063113018c514610148578063177c49a71461015057806332a34ad014610165575b5f80fd5b61013361012e366004610cc0565b6102d7565b60405190151581526020015b60405180910390f35b6101336103fd565b61016361015e366004610cd9565b61048a565b005b610133610173366004610d01565b610559565b610197610186366004610cc0565b60036020525f908152604090205481565b60405190815260200161013f565b61019761062a565b6101636101bb366004610cc0565b61063d565b6101636101ce366004610cc0565b610770565b6101976101e1366004610cc0565b610849565b6001546101f9906001600160a01b031681565b6040516001600160a01b03909116815260200161013f565b61013361021f366004610cd9565b610877565b5f546101f9906001600160a01b031681565b610163610244366004610cc0565b610a1b565b610197610257366004610cd9565b600560209081525f928352604080842090915290825290205481565b610163610281366004610d3a565b610ab4565b61019760045481565b61013361029d366004610cc0565b60026020525f908152604090205460ff1681565b6101976102bf366004610cc0565b610ae3565b6101336102d2366004610cd9565b610b40565b6001545f906001600160a01b0316331461030c5760405162461bcd60e51b815260040161030390610d51565b60405180910390fd5b6001600160a01b0382166103625760405162461bcd60e51b815260206004820152601b60248201527f496e76616c69642073747564792067726f7570206164647265737300000000006044820152606401610303565b5f54604051634c1d96ab60e11b81526001600160a01b0384811660048301529091169063983b2d56906024015f604051808303815f87803b1580156103a5575f80fd5b505af19250505080156103b6575060015b6103c157505f919050565b6040516001600160a01b038316907f8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff651905f90a25060015b919050565b6001545f906001600160a01b031633146104295760405162461bcd60e51b815260040161030390610d51565b5f54604051634c1d96ab60e11b81523060048201526001600160a01b039091169063983b2d56906024015f604051808303815f87803b15801561046a575f80fd5b505af192505050801561047b575060015b61048457505f90565b50600190565b6001546001600160a01b031633146104b45760405162461bcd60e51b815260040161030390610d51565b6001600160a01b0382166105015760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642075736572206164647265737360601b6044820152606401610303565b6001600160a01b0382165f8181526003602052604090819020839055517fc1395320bc4a9778acf4621c40f54fdde0fafa6177d8012972fca4ec8f7cfa369061054d9084815260200190565b60405180910390a25050565b335f9081526002602052604081205460ff168061058057506001546001600160a01b031633145b6105bd5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610303565b836001600160a01b03167f09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b383604051610618918152604060208201819052600890820152673a3930b739b332b960c11b606082015260800190565b60405180910390a25060019392505050565b5f6106386201518042610da6565b905090565b6001546001600160a01b031633146106675760405162461bcd60e51b815260040161030390610d51565b6001600160a01b0381166106bd5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e7472616374206164647265737300000000000000006044820152606401610303565b6001600160a01b0381165f9081526002602052604090205460ff16156107255760405162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c726561647920617574686f72697a656400000000006044820152606401610303565b6001600160a01b0381165f81815260026020526040808220805460ff19166001179055517f8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff6519190a250565b6001546001600160a01b0316331461079a5760405162461bcd60e51b815260040161030390610d51565b6001600160a01b0381165f9081526002602052604090205460ff166108015760405162461bcd60e51b815260206004820152601760248201527f436f6e7472616374206e6f7420617574686f72697a65640000000000000000006044820152606401610303565b6001600160a01b0381165f81815260026020526040808220805460ff19169055517f54142b7cb3ceaa9e564243ce4cc2303723c842a1144192de6b3c594f68b16a9a9190a250565b6001600160a01b0381165f908152600360205260408120548061086e57600454610870565b805b9392505050565b335f9081526002602052604081205460ff168061089e57506001546001600160a01b031633145b6108db5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610303565b5f6108e461062a565b90505f6108f085610849565b6001600160a01b0386165f908152600560209081526040808320868452909152902054909150816109218683610dc5565b116109af576109308582610dc5565b6001600160a01b0387165f818152600560209081526040808320888452825291829020939093558051888152928301819052600490830152631b5a5b9d60e21b6060830152907f09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b39060800160405180910390a260019350505050610a15565b856001600160a01b03167f36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf86604051610a06918152604060208201819052600490820152631b5a5b9d60e21b606082015260800190565b60405180910390a25f93505050505b92915050565b6001546001600160a01b03163314610a455760405162461bcd60e51b815260040161030390610d51565b6001600160a01b038116610a935760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606401610303565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610ade5760405162461bcd60e51b815260040161030390610d51565b600455565b5f80610aed61062a565b6001600160a01b0384165f908152600560209081526040808320848452909152812054919250610b1c85610849565b905080821015610b3557610b308282610dd8565b610b37565b5f5b95945050505050565b6001545f906001600160a01b03163314610b6c5760405162461bcd60e51b815260040161030390610d51565b5f54604051634d24848760e11b81526001600160a01b0385811660048301526024820185905290911690639a49090e906044015f604051808303815f87803b158015610bb6575f80fd5b505af1925050508015610bc7575060015b610c3a57826001600160a01b03167f36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf83604051610c2b918152604060208201819052600d908201526c185d5d1a1bdc9a5d1e535a5b9d609a1b606082015260800190565b60405180910390a2505f610a15565b826001600160a01b03167f09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b383604051610c9a918152604060208201819052600d908201526c185d5d1a1bdc9a5d1e535a5b9d609a1b606082015260800190565b60405180910390a2506001610a15565b80356001600160a01b03811681146103f8575f80fd5b5f60208284031215610cd0575f80fd5b61087082610caa565b5f8060408385031215610cea575f80fd5b610cf383610caa565b946020939093013593505050565b5f805f60608486031215610d13575f80fd5b610d1c84610caa565b9250610d2a60208501610caa565b9150604084013590509250925092565b5f60208284031215610d4a575f80fd5b5035919050565b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b5f82610dc057634e487b7160e01b5f52601260045260245ffd5b500490565b80820180821115610a1557610a15610d92565b81810381811115610a1557610a15610d9256fea2646970667358221220367faa81006eb8ec7b0c7ddc297ba351c354280ca61d61d282683a9493a679f864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF60 CODESIZE SUB DUP1 PUSH2 0xF60 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR DUP4 SSTORE PUSH0 DUP1 SLOAD SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR DUP3 SSTORE PUSH1 0x4 DUP5 SWAP1 SSTORE DUP1 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH32 0x8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651 SWAP2 SWAP1 LOG2 POP POP PUSH2 0x132 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0xE21 DUP1 PUSH2 0x13F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xBEBBCFE6 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xBEBBCFE6 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xC76B0888 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xD5B9221B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xEC37D259 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x2C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x9B32EA6D EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xA7481B5B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB09A8A04 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xB6FA284D EQ PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x360CF54A GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x360CF54A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x3E6968B6 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x67561D93 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6E861C0E EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x77865F91 EQ PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0D6DE1 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x113018C5 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x177C49A7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x32A34AD0 EQ PUSH2 0x165 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x163 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x197 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x133 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x1F9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x197 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3A JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x197 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x362 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073747564792067726F757020616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4C1D96AB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x983B2D56 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3B6 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x3C1 JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651 SWAP1 PUSH0 SWAP1 LOG2 POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4C1D96AB PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x983B2D56 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x47B JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x484 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420757365722061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0xC1395320BC4A9778ACF4621C40F54FDDE0FAFA6177D8012972FCA4EC8F7CFA36 SWAP1 PUSH2 0x54D SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x580 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E7E318D9FDE6F0E5CBB2418A50245C2063CE96946E2711C38E9C2B3127E9B3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x618 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x3A3930B739B332B9 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x638 PUSH3 0x15180 TIMESTAMP PUSH2 0xDA6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420616C726561647920617574686F72697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x54142B7CB3CEAA9E564243CE4CC2303723C842A1144192DE6B3C594F68B16A9A SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x86E JUMPI PUSH1 0x4 SLOAD PUSH2 0x870 JUMP JUMPDEST DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x89E JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH0 PUSH2 0x8E4 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x8F0 DUP6 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 PUSH2 0x921 DUP7 DUP4 PUSH2 0xDC5 JUMP JUMPDEST GT PUSH2 0x9AF JUMPI PUSH2 0x930 DUP6 DUP3 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP4 ADD MSTORE PUSH4 0x1B5A5B9D PUSH1 0xE2 SHL PUSH1 0x60 DUP4 ADD MSTORE SWAP1 PUSH32 0x9E7E318D9FDE6F0E5CBB2418A50245C2063CE96946E2711C38E9C2B3127E9B3 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xA15 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x36E690C5F80DA3F9DA10E957F42FAC89E3FDE772861FFE24E95169AEDDA4E8BF DUP7 PUSH1 0x40 MLOAD PUSH2 0xA06 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x1B5A5B9D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAED PUSH2 0x62A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0xB1C DUP6 PUSH2 0x849 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xB35 JUMPI PUSH2 0xB30 DUP3 DUP3 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH0 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4D248487 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x9A49090E SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBC7 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xC3A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x36E690C5F80DA3F9DA10E957F42FAC89E3FDE772861FFE24E95169AEDDA4E8BF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC2B SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x185D5D1A1BDC9A5D1E535A5B9D PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH0 PUSH2 0xA15 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E7E318D9FDE6F0E5CBB2418A50245C2063CE96946E2711C38E9C2B3127E9B3 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC9A SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x185D5D1A1BDC9A5D1E535A5B9D PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH2 0xA15 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x870 DUP3 PUSH2 0xCAA JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCF3 DUP4 PUSH2 0xCAA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD1C DUP5 PUSH2 0xCAA JUMP JUMPDEST SWAP3 POP PUSH2 0xD2A PUSH1 0x20 DUP6 ADD PUSH2 0xCAA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0xDC0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xA15 PUSH2 0xD92 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xA15 PUSH2 0xD92 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH32 0xAA81006EB8EC7B0C7DDC297BA351C354280CA61D61D282683A9493A679F86473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "194:7728:7:-:0;;;1651:430;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1737:32:7;;1729:66;;;;-1:-1:-1;;;1729:66:7;;572:2:8;1729:66:7;;;554:21:8;611:2;591:18;;;584:30;650:23;630:18;;;623:51;691:18;;1729:66:7;;;;;;;;1805:5;:18;;1813:10;-1:-1:-1;;;;;;1805:18:7;;;;;;;-1:-1:-1;1833:43:7;;;;;-1:-1:-1;;;;;1833:43:7;;;;;1886:17;:38;;;1991:31;;;:19;:31;;;;;;:38;;-1:-1:-1;;1991:38:7;;;;;;;2044:30;;;;-1:-1:-1;2044:30:7;1651:430;;194:7728;;14:351:8;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:8;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:8:o;370:345::-;194:7728:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@authorizeContract_1243": {
									"entryPoint": 1597,
									"id": 1243,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizeMint_1451": {
									"entryPoint": 2167,
									"id": 1451,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@authorizeStudyGroupAsMinter_1601": {
									"entryPoint": 727,
									"id": 1601,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@authorizeTransfer_1474": {
									"entryPoint": 1369,
									"id": 1474,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@authorizedContracts_1089": {
									"entryPoint": null,
									"id": 1089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deauthorizeContract_1269": {
									"entryPoint": 1904,
									"id": 1269,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@defaultDailyLimit_1095": {
									"entryPoint": null,
									"id": 1095,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentDay_1326": {
									"entryPoint": 1578,
									"id": 1326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainingDailyLimit_1385": {
									"entryPoint": 2787,
									"id": 1385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserDailyLimit_1348": {
									"entryPoint": 2121,
									"id": 1348,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintTokens_1563": {
									"entryPoint": 2880,
									"id": 1563,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_1085": {
									"entryPoint": null,
									"id": 1085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestMinterRole_1524": {
									"entryPoint": 1021,
									"id": 1524,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setDefaultDailyLimit_1314": {
									"entryPoint": 2740,
									"id": 1314,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStudyToken_1499": {
									"entryPoint": 2587,
									"id": 1499,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUserDailyLimit_1301": {
									"entryPoint": 1162,
									"id": 1301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@studyToken_1083": {
									"entryPoint": null,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userDailyLimits_1093": {
									"entryPoint": null,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userDailyUsage_1101": {
									"entryPoint": null,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_StudyToken_$1076__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c4945e6b3610d383f734579b5988e80e465f94d13969c86a446ea85a32f996a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74e7f6520574a344a1f78c9de155390cac2c80bfb003917f990401b6467aa610__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b12507f79783e6861b0659e8d96efe9ea7ad495d0339d3c2256f519a077aafd8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_69b48298bc59ad13c9d2dd75d42421a445b62a269d2497d1473d5cf61da463dc__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_b483afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6949:8",
										"nodeType": "YulBlock",
										"src": "0:6949:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:8",
													"nodeType": "YulBlock",
													"src": "63:124:8",
													"statements": [
														{
															"nativeSrc": "73:29:8",
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nativeSrc": "82:20:8",
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:8",
																"nodeType": "YulBlock",
																"src": "165:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:8",
																					"nodeType": "YulLiteral",
																					"src": "174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:8",
																					"nodeType": "YulLiteral",
																					"src": "177:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:8"
																			},
																			"nativeSrc": "167:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:8"
																		},
																		"nativeSrc": "167:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:8",
																										"nodeType": "YulLiteral",
																										"src": "150:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:8",
																										"nodeType": "YulLiteral",
																										"src": "155:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:8"
																								},
																								"nativeSrc": "146:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:8",
																								"nodeType": "YulLiteral",
																								"src": "159:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:8"
																						},
																						"nativeSrc": "142:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nativeSrc": "131:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nativeSrc": "121:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nativeSrc": "114:50:8",
																"nodeType": "YulFunctionCall",
																"src": "114:50:8"
															},
															"nativeSrc": "111:70:8",
															"nodeType": "YulIf",
															"src": "111:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:8",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:8",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:173:8"
											},
											{
												"body": {
													"nativeSrc": "262:116:8",
													"nodeType": "YulBlock",
													"src": "262:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:8",
																"nodeType": "YulBlock",
																"src": "308:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:8",
																					"nodeType": "YulLiteral",
																					"src": "317:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:8",
																					"nodeType": "YulLiteral",
																					"src": "320:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:8"
																			},
																			"nativeSrc": "310:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:8"
																		},
																		"nativeSrc": "310:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:8"
																		},
																		"nativeSrc": "279:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:8",
																		"nodeType": "YulLiteral",
																		"src": "304:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:8"
																},
																"nativeSrc": "275:32:8",
																"nodeType": "YulFunctionCall",
																"src": "275:32:8"
															},
															"nativeSrc": "272:52:8",
															"nodeType": "YulIf",
															"src": "272:52:8"
														},
														{
															"nativeSrc": "333:39:8",
															"nodeType": "YulAssignment",
															"src": "333:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:8"
																},
																"nativeSrc": "343:29:8",
																"nodeType": "YulFunctionCall",
																"src": "343:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:8",
														"nodeType": "YulTypedName",
														"src": "228:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:8",
														"nodeType": "YulTypedName",
														"src": "239:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:8",
														"nodeType": "YulTypedName",
														"src": "251:6:8",
														"type": ""
													}
												],
												"src": "192:186:8"
											},
											{
												"body": {
													"nativeSrc": "478:92:8",
													"nodeType": "YulBlock",
													"src": "478:92:8",
													"statements": [
														{
															"nativeSrc": "488:26:8",
															"nodeType": "YulAssignment",
															"src": "488:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "500:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:2:8",
																		"nodeType": "YulLiteral",
																		"src": "511:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "496:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "496:3:8"
																},
																"nativeSrc": "496:18:8",
																"nodeType": "YulFunctionCall",
																"src": "496:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "488:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "488:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "530:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "530:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "555:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "555:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "548:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "548:6:8"
																				},
																				"nativeSrc": "548:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "548:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "541:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "541:6:8"
																		},
																		"nativeSrc": "541:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "541:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "523:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:8"
																},
																"nativeSrc": "523:41:8",
																"nodeType": "YulFunctionCall",
																"src": "523:41:8"
															},
															"nativeSrc": "523:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "523:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "383:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "447:9:8",
														"nodeType": "YulTypedName",
														"src": "447:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "458:6:8",
														"nodeType": "YulTypedName",
														"src": "458:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "469:4:8",
														"nodeType": "YulTypedName",
														"src": "469:4:8",
														"type": ""
													}
												],
												"src": "383:187:8"
											},
											{
												"body": {
													"nativeSrc": "662:167:8",
													"nodeType": "YulBlock",
													"src": "662:167:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "708:16:8",
																"nodeType": "YulBlock",
																"src": "708:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "717:1:8",
																					"nodeType": "YulLiteral",
																					"src": "717:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "720:1:8",
																					"nodeType": "YulLiteral",
																					"src": "720:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "710:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "710:6:8"
																			},
																			"nativeSrc": "710:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "710:12:8"
																		},
																		"nativeSrc": "710:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "710:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "683:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "683:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "692:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "692:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "679:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "679:3:8"
																		},
																		"nativeSrc": "679:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "679:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "704:2:8",
																		"nodeType": "YulLiteral",
																		"src": "704:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "675:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "675:3:8"
																},
																"nativeSrc": "675:32:8",
																"nodeType": "YulFunctionCall",
																"src": "675:32:8"
															},
															"nativeSrc": "672:52:8",
															"nodeType": "YulIf",
															"src": "672:52:8"
														},
														{
															"nativeSrc": "733:39:8",
															"nodeType": "YulAssignment",
															"src": "733:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "762:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "762:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "743:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "743:18:8"
																},
																"nativeSrc": "743:29:8",
																"nodeType": "YulFunctionCall",
																"src": "743:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "733:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "733:6:8"
																}
															]
														},
														{
															"nativeSrc": "781:42:8",
															"nodeType": "YulAssignment",
															"src": "781:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "808:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "808:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "819:2:8",
																				"nodeType": "YulLiteral",
																				"src": "819:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "804:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "804:3:8"
																		},
																		"nativeSrc": "804:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "804:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "791:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:12:8"
																},
																"nativeSrc": "791:32:8",
																"nodeType": "YulFunctionCall",
																"src": "791:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "781:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "781:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "575:254:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "620:9:8",
														"nodeType": "YulTypedName",
														"src": "620:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "631:7:8",
														"nodeType": "YulTypedName",
														"src": "631:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "643:6:8",
														"nodeType": "YulTypedName",
														"src": "643:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "651:6:8",
														"nodeType": "YulTypedName",
														"src": "651:6:8",
														"type": ""
													}
												],
												"src": "575:254:8"
											},
											{
												"body": {
													"nativeSrc": "938:224:8",
													"nodeType": "YulBlock",
													"src": "938:224:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "984:16:8",
																"nodeType": "YulBlock",
																"src": "984:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "993:1:8",
																					"nodeType": "YulLiteral",
																					"src": "993:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "996:1:8",
																					"nodeType": "YulLiteral",
																					"src": "996:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "986:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "986:6:8"
																			},
																			"nativeSrc": "986:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "986:12:8"
																		},
																		"nativeSrc": "986:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "986:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "959:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "959:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "968:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "968:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:8"
																		},
																		"nativeSrc": "955:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "955:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "980:2:8",
																		"nodeType": "YulLiteral",
																		"src": "980:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "951:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "951:3:8"
																},
																"nativeSrc": "951:32:8",
																"nodeType": "YulFunctionCall",
																"src": "951:32:8"
															},
															"nativeSrc": "948:52:8",
															"nodeType": "YulIf",
															"src": "948:52:8"
														},
														{
															"nativeSrc": "1009:39:8",
															"nodeType": "YulAssignment",
															"src": "1009:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1038:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1038:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1019:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1019:18:8"
																},
																"nativeSrc": "1019:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1019:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1009:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1009:6:8"
																}
															]
														},
														{
															"nativeSrc": "1057:48:8",
															"nodeType": "YulAssignment",
															"src": "1057:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1090:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1090:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1101:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1101:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1086:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1086:3:8"
																		},
																		"nativeSrc": "1086:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1086:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1067:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1067:18:8"
																},
																"nativeSrc": "1067:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1067:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1057:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1057:6:8"
																}
															]
														},
														{
															"nativeSrc": "1114:42:8",
															"nodeType": "YulAssignment",
															"src": "1114:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1141:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1152:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1152:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1137:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:8"
																		},
																		"nativeSrc": "1137:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1137:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1124:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1124:12:8"
																},
																"nativeSrc": "1124:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1124:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "834:328:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "888:9:8",
														"nodeType": "YulTypedName",
														"src": "888:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "899:7:8",
														"nodeType": "YulTypedName",
														"src": "899:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "911:6:8",
														"nodeType": "YulTypedName",
														"src": "911:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "919:6:8",
														"nodeType": "YulTypedName",
														"src": "919:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "927:6:8",
														"nodeType": "YulTypedName",
														"src": "927:6:8",
														"type": ""
													}
												],
												"src": "834:328:8"
											},
											{
												"body": {
													"nativeSrc": "1268:76:8",
													"nodeType": "YulBlock",
													"src": "1268:76:8",
													"statements": [
														{
															"nativeSrc": "1278:26:8",
															"nodeType": "YulAssignment",
															"src": "1278:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1290:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1290:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1286:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1286:3:8"
																},
																"nativeSrc": "1286:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1286:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1278:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1278:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1320:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1320:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1331:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1331:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:8"
																},
																"nativeSrc": "1313:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1313:25:8"
															},
															"nativeSrc": "1313:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1313:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1167:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1237:9:8",
														"nodeType": "YulTypedName",
														"src": "1237:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1248:6:8",
														"nodeType": "YulTypedName",
														"src": "1248:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1259:4:8",
														"nodeType": "YulTypedName",
														"src": "1259:4:8",
														"type": ""
													}
												],
												"src": "1167:177:8"
											},
											{
												"body": {
													"nativeSrc": "1450:102:8",
													"nodeType": "YulBlock",
													"src": "1450:102:8",
													"statements": [
														{
															"nativeSrc": "1460:26:8",
															"nodeType": "YulAssignment",
															"src": "1460:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1472:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1472:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1483:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1483:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1468:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1468:3:8"
																},
																"nativeSrc": "1468:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1468:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1460:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1460:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1502:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1502:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1517:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1517:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1533:3:8",
																								"nodeType": "YulLiteral",
																								"src": "1533:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1538:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1538:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1529:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1529:3:8"
																						},
																						"nativeSrc": "1529:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1529:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1542:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1542:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1525:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1525:3:8"
																				},
																				"nativeSrc": "1525:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1525:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1513:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:8"
																		},
																		"nativeSrc": "1513:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1513:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1495:6:8"
																},
																"nativeSrc": "1495:51:8",
																"nodeType": "YulFunctionCall",
																"src": "1495:51:8"
															},
															"nativeSrc": "1495:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "1495:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1349:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1419:9:8",
														"nodeType": "YulTypedName",
														"src": "1419:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1430:6:8",
														"nodeType": "YulTypedName",
														"src": "1430:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1441:4:8",
														"nodeType": "YulTypedName",
														"src": "1441:4:8",
														"type": ""
													}
												],
												"src": "1349:203:8"
											},
											{
												"body": {
													"nativeSrc": "1677:102:8",
													"nodeType": "YulBlock",
													"src": "1677:102:8",
													"statements": [
														{
															"nativeSrc": "1687:26:8",
															"nodeType": "YulAssignment",
															"src": "1687:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1699:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1699:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1710:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1710:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1695:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1695:3:8"
																},
																"nativeSrc": "1695:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1695:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1687:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1687:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1729:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1729:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1744:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1744:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1760:3:8",
																								"nodeType": "YulLiteral",
																								"src": "1760:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1765:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1765:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1756:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1756:3:8"
																						},
																						"nativeSrc": "1756:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1756:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1769:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1769:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1752:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1752:3:8"
																				},
																				"nativeSrc": "1752:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1752:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1740:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:8"
																		},
																		"nativeSrc": "1740:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1740:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1722:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:8"
																},
																"nativeSrc": "1722:51:8",
																"nodeType": "YulFunctionCall",
																"src": "1722:51:8"
															},
															"nativeSrc": "1722:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "1722:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_StudyToken_$1076__to_t_address__fromStack_reversed",
												"nativeSrc": "1557:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1646:9:8",
														"nodeType": "YulTypedName",
														"src": "1646:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1657:6:8",
														"nodeType": "YulTypedName",
														"src": "1657:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1668:4:8",
														"nodeType": "YulTypedName",
														"src": "1668:4:8",
														"type": ""
													}
												],
												"src": "1557:222:8"
											},
											{
												"body": {
													"nativeSrc": "1854:110:8",
													"nodeType": "YulBlock",
													"src": "1854:110:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1900:16:8",
																"nodeType": "YulBlock",
																"src": "1900:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1909:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1909:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1902:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1902:6:8"
																			},
																			"nativeSrc": "1902:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1902:12:8"
																		},
																		"nativeSrc": "1902:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1902:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1875:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1875:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1884:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1884:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1871:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:8"
																		},
																		"nativeSrc": "1871:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1896:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1896:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1867:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:8"
																},
																"nativeSrc": "1867:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1867:32:8"
															},
															"nativeSrc": "1864:52:8",
															"nodeType": "YulIf",
															"src": "1864:52:8"
														},
														{
															"nativeSrc": "1925:33:8",
															"nodeType": "YulAssignment",
															"src": "1925:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1948:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1948:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1935:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1935:12:8"
																},
																"nativeSrc": "1935:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1935:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1925:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1784:180:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1820:9:8",
														"nodeType": "YulTypedName",
														"src": "1820:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1831:7:8",
														"nodeType": "YulTypedName",
														"src": "1831:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1843:6:8",
														"nodeType": "YulTypedName",
														"src": "1843:6:8",
														"type": ""
													}
												],
												"src": "1784:180:8"
											},
											{
												"body": {
													"nativeSrc": "2143:223:8",
													"nodeType": "YulBlock",
													"src": "2143:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2160:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2160:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2171:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2153:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2153:6:8"
																},
																"nativeSrc": "2153:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2153:21:8"
															},
															"nativeSrc": "2153:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "2153:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2194:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2194:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2205:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2205:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2190:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2190:3:8"
																		},
																		"nativeSrc": "2190:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2190:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2210:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2210:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2183:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:8"
																},
																"nativeSrc": "2183:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2183:30:8"
															},
															"nativeSrc": "2183:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "2183:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2233:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2233:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2244:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2244:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2229:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2229:3:8"
																		},
																		"nativeSrc": "2229:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2229:18:8"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "2249:34:8",
																		"nodeType": "YulLiteral",
																		"src": "2249:34:8",
																		"type": "",
																		"value": "Only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2222:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:8"
																},
																"nativeSrc": "2222:62:8",
																"nodeType": "YulFunctionCall",
																"src": "2222:62:8"
															},
															"nativeSrc": "2222:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "2222:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2304:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2304:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2315:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2315:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2300:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2300:3:8"
																		},
																		"nativeSrc": "2300:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2300:18:8"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "2320:3:8",
																		"nodeType": "YulLiteral",
																		"src": "2320:3:8",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2293:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2293:6:8"
																},
																"nativeSrc": "2293:31:8",
																"nodeType": "YulFunctionCall",
																"src": "2293:31:8"
															},
															"nativeSrc": "2293:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "2293:31:8"
														},
														{
															"nativeSrc": "2333:27:8",
															"nodeType": "YulAssignment",
															"src": "2333:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2345:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2345:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2356:3:8",
																		"nodeType": "YulLiteral",
																		"src": "2356:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2341:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2341:3:8"
																},
																"nativeSrc": "2341:19:8",
																"nodeType": "YulFunctionCall",
																"src": "2341:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2333:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2333:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1969:397:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2120:9:8",
														"nodeType": "YulTypedName",
														"src": "2120:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2134:4:8",
														"nodeType": "YulTypedName",
														"src": "2134:4:8",
														"type": ""
													}
												],
												"src": "1969:397:8"
											},
											{
												"body": {
													"nativeSrc": "2545:177:8",
													"nodeType": "YulBlock",
													"src": "2545:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2562:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2562:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2573:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2573:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2555:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2555:6:8"
																},
																"nativeSrc": "2555:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2555:21:8"
															},
															"nativeSrc": "2555:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "2555:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2596:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2596:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2607:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2607:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2592:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:8"
																		},
																		"nativeSrc": "2592:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2592:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2612:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2612:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2585:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:8"
																},
																"nativeSrc": "2585:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2585:30:8"
															},
															"nativeSrc": "2585:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "2585:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2635:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2635:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2646:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2631:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:8"
																		},
																		"nativeSrc": "2631:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2631:18:8"
																	},
																	{
																		"hexValue": "496e76616c69642073747564792067726f75702061646472657373",
																		"kind": "string",
																		"nativeSrc": "2651:29:8",
																		"nodeType": "YulLiteral",
																		"src": "2651:29:8",
																		"type": "",
																		"value": "Invalid study group address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:8"
																},
																"nativeSrc": "2624:57:8",
																"nodeType": "YulFunctionCall",
																"src": "2624:57:8"
															},
															"nativeSrc": "2624:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "2624:57:8"
														},
														{
															"nativeSrc": "2690:26:8",
															"nodeType": "YulAssignment",
															"src": "2690:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2702:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2702:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2713:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2713:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2698:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2698:3:8"
																},
																"nativeSrc": "2698:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2698:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2690:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2690:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b12507f79783e6861b0659e8d96efe9ea7ad495d0339d3c2256f519a077aafd8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2371:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2522:9:8",
														"nodeType": "YulTypedName",
														"src": "2522:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2536:4:8",
														"nodeType": "YulTypedName",
														"src": "2536:4:8",
														"type": ""
													}
												],
												"src": "2371:351:8"
											},
											{
												"body": {
													"nativeSrc": "2901:170:8",
													"nodeType": "YulBlock",
													"src": "2901:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2918:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2918:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2929:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2911:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:8"
																},
																"nativeSrc": "2911:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2911:21:8"
															},
															"nativeSrc": "2911:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "2911:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2952:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2952:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2963:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2963:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2948:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2948:3:8"
																		},
																		"nativeSrc": "2948:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2948:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2968:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2968:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2941:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:8"
																},
																"nativeSrc": "2941:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2941:30:8"
															},
															"nativeSrc": "2941:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "2941:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2991:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2991:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3002:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3002:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2987:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2987:3:8"
																		},
																		"nativeSrc": "2987:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2987:18:8"
																	},
																	{
																		"hexValue": "496e76616c696420757365722061646472657373",
																		"kind": "string",
																		"nativeSrc": "3007:22:8",
																		"nodeType": "YulLiteral",
																		"src": "3007:22:8",
																		"type": "",
																		"value": "Invalid user address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2980:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2980:6:8"
																},
																"nativeSrc": "2980:50:8",
																"nodeType": "YulFunctionCall",
																"src": "2980:50:8"
															},
															"nativeSrc": "2980:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "2980:50:8"
														},
														{
															"nativeSrc": "3039:26:8",
															"nodeType": "YulAssignment",
															"src": "3039:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3051:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3051:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3062:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3062:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3047:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3047:3:8"
																},
																"nativeSrc": "3047:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3047:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3039:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3039:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2727:344:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2878:9:8",
														"nodeType": "YulTypedName",
														"src": "2878:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2892:4:8",
														"nodeType": "YulTypedName",
														"src": "2892:4:8",
														"type": ""
													}
												],
												"src": "2727:344:8"
											},
											{
												"body": {
													"nativeSrc": "3250:164:8",
													"nodeType": "YulBlock",
													"src": "3250:164:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3267:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3267:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3278:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3278:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3260:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3260:6:8"
																},
																"nativeSrc": "3260:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3260:21:8"
															},
															"nativeSrc": "3260:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3260:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3301:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3301:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3312:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3312:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3297:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:8"
																		},
																		"nativeSrc": "3297:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3297:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3317:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3317:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3290:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:8"
																},
																"nativeSrc": "3290:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3290:30:8"
															},
															"nativeSrc": "3290:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3290:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3340:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3340:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3351:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3351:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3336:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3336:3:8"
																		},
																		"nativeSrc": "3336:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3336:18:8"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "3356:16:8",
																		"nodeType": "YulLiteral",
																		"src": "3356:16:8",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3329:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3329:6:8"
																},
																"nativeSrc": "3329:44:8",
																"nodeType": "YulFunctionCall",
																"src": "3329:44:8"
															},
															"nativeSrc": "3329:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "3329:44:8"
														},
														{
															"nativeSrc": "3382:26:8",
															"nodeType": "YulAssignment",
															"src": "3382:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3394:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3394:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3405:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3405:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3390:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3390:3:8"
																},
																"nativeSrc": "3390:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3390:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3382:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3382:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3076:338:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3227:9:8",
														"nodeType": "YulTypedName",
														"src": "3227:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3241:4:8",
														"nodeType": "YulTypedName",
														"src": "3241:4:8",
														"type": ""
													}
												],
												"src": "3076:338:8"
											},
											{
												"body": {
													"nativeSrc": "3621:201:8",
													"nodeType": "YulBlock",
													"src": "3621:201:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3638:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3638:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3649:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3649:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3631:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3631:6:8"
																},
																"nativeSrc": "3631:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3631:25:8"
															},
															"nativeSrc": "3631:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "3631:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3676:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3676:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3687:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3687:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3672:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3672:3:8"
																		},
																		"nativeSrc": "3672:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3672:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3692:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3692:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3665:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3665:6:8"
																},
																"nativeSrc": "3665:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3665:30:8"
															},
															"nativeSrc": "3665:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3665:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3715:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3715:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3726:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3726:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3711:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3711:3:8"
																		},
																		"nativeSrc": "3711:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3711:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3731:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3731:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3704:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3704:6:8"
																},
																"nativeSrc": "3704:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3704:29:8"
															},
															"nativeSrc": "3704:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "3704:29:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3753:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3753:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3764:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3764:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3749:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3749:3:8"
																		},
																		"nativeSrc": "3749:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3749:18:8"
																	},
																	{
																		"hexValue": "7472616e73666572",
																		"kind": "string",
																		"nativeSrc": "3769:10:8",
																		"nodeType": "YulLiteral",
																		"src": "3769:10:8",
																		"type": "",
																		"value": "transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3742:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3742:6:8"
																},
																"nativeSrc": "3742:38:8",
																"nodeType": "YulFunctionCall",
																"src": "3742:38:8"
															},
															"nativeSrc": "3742:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "3742:38:8"
														},
														{
															"nativeSrc": "3789:27:8",
															"nodeType": "YulAssignment",
															"src": "3789:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3801:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3801:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3812:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3812:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3797:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3797:3:8"
																},
																"nativeSrc": "3797:19:8",
																"nodeType": "YulFunctionCall",
																"src": "3797:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3789:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3789:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_b483afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3419:403:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3590:9:8",
														"nodeType": "YulTypedName",
														"src": "3590:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3601:6:8",
														"nodeType": "YulTypedName",
														"src": "3601:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3612:4:8",
														"nodeType": "YulTypedName",
														"src": "3612:4:8",
														"type": ""
													}
												],
												"src": "3419:403:8"
											},
											{
												"body": {
													"nativeSrc": "3859:95:8",
													"nodeType": "YulBlock",
													"src": "3859:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3876:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3876:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3883:3:8",
																				"nodeType": "YulLiteral",
																				"src": "3883:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3888:10:8",
																				"nodeType": "YulLiteral",
																				"src": "3888:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3879:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3879:3:8"
																		},
																		"nativeSrc": "3879:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3879:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3869:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:8"
																},
																"nativeSrc": "3869:31:8",
																"nodeType": "YulFunctionCall",
																"src": "3869:31:8"
															},
															"nativeSrc": "3869:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "3869:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3916:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3916:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3919:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3919:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3909:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:8"
																},
																"nativeSrc": "3909:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3909:15:8"
															},
															"nativeSrc": "3909:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3909:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3940:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3940:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3943:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3933:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3933:6:8"
																},
																"nativeSrc": "3933:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3933:15:8"
															},
															"nativeSrc": "3933:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3933:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3827:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3827:127:8"
											},
											{
												"body": {
													"nativeSrc": "4005:171:8",
													"nodeType": "YulBlock",
													"src": "4005:171:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4036:111:8",
																"nodeType": "YulBlock",
																"src": "4036:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4057:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4057:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4064:3:8",
																							"nodeType": "YulLiteral",
																							"src": "4064:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4069:10:8",
																							"nodeType": "YulLiteral",
																							"src": "4069:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4060:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4060:3:8"
																					},
																					"nativeSrc": "4060:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4060:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4050:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4050:6:8"
																			},
																			"nativeSrc": "4050:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4050:31:8"
																		},
																		"nativeSrc": "4050:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4050:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4101:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4101:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4104:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4104:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4094:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4094:6:8"
																			},
																			"nativeSrc": "4094:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:15:8"
																		},
																		"nativeSrc": "4094:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4129:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4129:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4132:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4132:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4122:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4122:6:8"
																			},
																			"nativeSrc": "4122:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4122:15:8"
																		},
																		"nativeSrc": "4122:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4122:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4025:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4025:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4018:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4018:6:8"
																},
																"nativeSrc": "4018:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4018:9:8"
															},
															"nativeSrc": "4015:132:8",
															"nodeType": "YulIf",
															"src": "4015:132:8"
														},
														{
															"nativeSrc": "4156:14:8",
															"nodeType": "YulAssignment",
															"src": "4156:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4165:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4165:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4168:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4168:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4161:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4161:3:8"
																},
																"nativeSrc": "4161:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4161:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4156:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "4156:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3959:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3990:1:8",
														"nodeType": "YulTypedName",
														"src": "3990:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3993:1:8",
														"nodeType": "YulTypedName",
														"src": "3993:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3999:1:8",
														"nodeType": "YulTypedName",
														"src": "3999:1:8",
														"type": ""
													}
												],
												"src": "3959:217:8"
											},
											{
												"body": {
													"nativeSrc": "4355:174:8",
													"nodeType": "YulBlock",
													"src": "4355:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4372:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4372:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4383:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4383:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4365:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4365:6:8"
																},
																"nativeSrc": "4365:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4365:21:8"
															},
															"nativeSrc": "4365:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4365:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4417:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4417:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4402:3:8"
																		},
																		"nativeSrc": "4402:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4402:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4422:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4422:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4395:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4395:6:8"
																},
																"nativeSrc": "4395:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4395:30:8"
															},
															"nativeSrc": "4395:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4395:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4445:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4445:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4456:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4456:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4441:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4441:3:8"
																		},
																		"nativeSrc": "4441:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4441:18:8"
																	},
																	{
																		"hexValue": "496e76616c696420636f6e74726163742061646472657373",
																		"kind": "string",
																		"nativeSrc": "4461:26:8",
																		"nodeType": "YulLiteral",
																		"src": "4461:26:8",
																		"type": "",
																		"value": "Invalid contract address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4434:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4434:6:8"
																},
																"nativeSrc": "4434:54:8",
																"nodeType": "YulFunctionCall",
																"src": "4434:54:8"
															},
															"nativeSrc": "4434:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "4434:54:8"
														},
														{
															"nativeSrc": "4497:26:8",
															"nodeType": "YulAssignment",
															"src": "4497:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4509:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4509:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4520:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:8"
																},
																"nativeSrc": "4505:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4505:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4497:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4497:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4181:348:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4332:9:8",
														"nodeType": "YulTypedName",
														"src": "4332:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4346:4:8",
														"nodeType": "YulTypedName",
														"src": "4346:4:8",
														"type": ""
													}
												],
												"src": "4181:348:8"
											},
											{
												"body": {
													"nativeSrc": "4708:177:8",
													"nodeType": "YulBlock",
													"src": "4708:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4725:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4725:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4736:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4736:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4718:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:8"
																},
																"nativeSrc": "4718:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4718:21:8"
															},
															"nativeSrc": "4718:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4718:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4759:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4759:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4770:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4770:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4755:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4755:3:8"
																		},
																		"nativeSrc": "4755:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4755:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4775:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4775:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4748:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4748:6:8"
																},
																"nativeSrc": "4748:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4748:30:8"
															},
															"nativeSrc": "4748:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4748:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4798:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4809:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4794:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:8"
																		},
																		"nativeSrc": "4794:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:8"
																	},
																	{
																		"hexValue": "436f6e747261637420616c726561647920617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "4814:29:8",
																		"nodeType": "YulLiteral",
																		"src": "4814:29:8",
																		"type": "",
																		"value": "Contract already authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4787:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:8"
																},
																"nativeSrc": "4787:57:8",
																"nodeType": "YulFunctionCall",
																"src": "4787:57:8"
															},
															"nativeSrc": "4787:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "4787:57:8"
														},
														{
															"nativeSrc": "4853:26:8",
															"nodeType": "YulAssignment",
															"src": "4853:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4865:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4865:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4876:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4876:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4861:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4861:3:8"
																},
																"nativeSrc": "4861:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4861:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4853:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4853:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74e7f6520574a344a1f78c9de155390cac2c80bfb003917f990401b6467aa610__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4534:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4685:9:8",
														"nodeType": "YulTypedName",
														"src": "4685:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4699:4:8",
														"nodeType": "YulTypedName",
														"src": "4699:4:8",
														"type": ""
													}
												],
												"src": "4534:351:8"
											},
											{
												"body": {
													"nativeSrc": "5064:173:8",
													"nodeType": "YulBlock",
													"src": "5064:173:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5081:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5081:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5092:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5092:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5074:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:8"
																},
																"nativeSrc": "5074:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5074:21:8"
															},
															"nativeSrc": "5074:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5074:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5115:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5115:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5126:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5126:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5111:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5111:3:8"
																		},
																		"nativeSrc": "5111:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5111:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5131:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5131:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5104:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5104:6:8"
																},
																"nativeSrc": "5104:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5104:30:8"
															},
															"nativeSrc": "5104:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5104:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5154:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5154:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5165:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5165:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5150:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5150:3:8"
																		},
																		"nativeSrc": "5150:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5150:18:8"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "5170:25:8",
																		"nodeType": "YulLiteral",
																		"src": "5170:25:8",
																		"type": "",
																		"value": "Contract not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5143:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5143:6:8"
																},
																"nativeSrc": "5143:53:8",
																"nodeType": "YulFunctionCall",
																"src": "5143:53:8"
															},
															"nativeSrc": "5143:53:8",
															"nodeType": "YulExpressionStatement",
															"src": "5143:53:8"
														},
														{
															"nativeSrc": "5205:26:8",
															"nodeType": "YulAssignment",
															"src": "5205:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5217:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5217:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5228:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5228:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5213:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:8"
																},
																"nativeSrc": "5213:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5213:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5205:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5205:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c4945e6b3610d383f734579b5988e80e465f94d13969c86a446ea85a32f996a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4890:347:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5041:9:8",
														"nodeType": "YulTypedName",
														"src": "5041:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5055:4:8",
														"nodeType": "YulTypedName",
														"src": "5055:4:8",
														"type": ""
													}
												],
												"src": "4890:347:8"
											},
											{
												"body": {
													"nativeSrc": "5290:77:8",
													"nodeType": "YulBlock",
													"src": "5290:77:8",
													"statements": [
														{
															"nativeSrc": "5300:16:8",
															"nodeType": "YulAssignment",
															"src": "5300:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5311:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5311:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5314:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5314:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5307:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5307:3:8"
																},
																"nativeSrc": "5307:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5307:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5300:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5339:22:8",
																"nodeType": "YulBlock",
																"src": "5339:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5341:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5341:16:8"
																			},
																			"nativeSrc": "5341:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5341:18:8"
																		},
																		"nativeSrc": "5341:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5341:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5331:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5331:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5334:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5328:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5328:2:8"
																},
																"nativeSrc": "5328:10:8",
																"nodeType": "YulFunctionCall",
																"src": "5328:10:8"
															},
															"nativeSrc": "5325:36:8",
															"nodeType": "YulIf",
															"src": "5325:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5242:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5273:1:8",
														"nodeType": "YulTypedName",
														"src": "5273:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5276:1:8",
														"nodeType": "YulTypedName",
														"src": "5276:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5282:3:8",
														"nodeType": "YulTypedName",
														"src": "5282:3:8",
														"type": ""
													}
												],
												"src": "5242:125:8"
											},
											{
												"body": {
													"nativeSrc": "5574:197:8",
													"nodeType": "YulBlock",
													"src": "5574:197:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5591:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5591:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5602:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5602:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5584:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5584:6:8"
																},
																"nativeSrc": "5584:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5584:25:8"
															},
															"nativeSrc": "5584:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "5584:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5629:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5629:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5640:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5640:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5625:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5625:3:8"
																		},
																		"nativeSrc": "5625:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5625:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5645:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5645:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5618:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5618:6:8"
																},
																"nativeSrc": "5618:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5618:30:8"
															},
															"nativeSrc": "5618:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5618:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5668:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5668:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5679:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5679:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5664:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5664:3:8"
																		},
																		"nativeSrc": "5664:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5664:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5684:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:8",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5657:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:8"
																},
																"nativeSrc": "5657:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5657:29:8"
															},
															"nativeSrc": "5657:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "5657:29:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5706:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5706:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5717:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5717:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5702:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5702:3:8"
																		},
																		"nativeSrc": "5702:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5702:18:8"
																	},
																	{
																		"hexValue": "6d696e74",
																		"kind": "string",
																		"nativeSrc": "5722:6:8",
																		"nodeType": "YulLiteral",
																		"src": "5722:6:8",
																		"type": "",
																		"value": "mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5695:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:8"
																},
																"nativeSrc": "5695:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5695:34:8"
															},
															"nativeSrc": "5695:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5695:34:8"
														},
														{
															"nativeSrc": "5738:27:8",
															"nodeType": "YulAssignment",
															"src": "5738:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5750:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5750:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5761:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5761:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5746:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5746:3:8"
																},
																"nativeSrc": "5746:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5746:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5738:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5738:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5372:399:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5543:9:8",
														"nodeType": "YulTypedName",
														"src": "5543:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5554:6:8",
														"nodeType": "YulTypedName",
														"src": "5554:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5565:4:8",
														"nodeType": "YulTypedName",
														"src": "5565:4:8",
														"type": ""
													}
												],
												"src": "5372:399:8"
											},
											{
												"body": {
													"nativeSrc": "5950:171:8",
													"nodeType": "YulBlock",
													"src": "5950:171:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5967:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5978:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5960:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:8"
																},
																"nativeSrc": "5960:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5960:21:8"
															},
															"nativeSrc": "5960:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5960:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6001:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6001:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6012:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6012:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5997:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5997:3:8"
																		},
																		"nativeSrc": "5997:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5997:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6017:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6017:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5990:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5990:6:8"
																},
																"nativeSrc": "5990:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5990:30:8"
															},
															"nativeSrc": "5990:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5990:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6040:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6040:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6051:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6051:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6036:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6036:3:8"
																		},
																		"nativeSrc": "6036:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6036:18:8"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6056:23:8",
																		"nodeType": "YulLiteral",
																		"src": "6056:23:8",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6029:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6029:6:8"
																},
																"nativeSrc": "6029:51:8",
																"nodeType": "YulFunctionCall",
																"src": "6029:51:8"
															},
															"nativeSrc": "6029:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "6029:51:8"
														},
														{
															"nativeSrc": "6089:26:8",
															"nodeType": "YulAssignment",
															"src": "6089:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6101:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6101:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6112:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6112:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6097:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6097:3:8"
																},
																"nativeSrc": "6097:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6097:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6089:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6089:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5776:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5927:9:8",
														"nodeType": "YulTypedName",
														"src": "5927:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5941:4:8",
														"nodeType": "YulTypedName",
														"src": "5941:4:8",
														"type": ""
													}
												],
												"src": "5776:345:8"
											},
											{
												"body": {
													"nativeSrc": "6175:79:8",
													"nodeType": "YulBlock",
													"src": "6175:79:8",
													"statements": [
														{
															"nativeSrc": "6185:17:8",
															"nodeType": "YulAssignment",
															"src": "6185:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6197:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6197:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6200:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6200:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6193:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6193:3:8"
																},
																"nativeSrc": "6193:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6193:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6185:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6185:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6226:22:8",
																"nodeType": "YulBlock",
																"src": "6226:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6228:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6228:16:8"
																			},
																			"nativeSrc": "6228:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6228:18:8"
																		},
																		"nativeSrc": "6228:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6228:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6217:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6217:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6223:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6223:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6214:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6214:2:8"
																},
																"nativeSrc": "6214:11:8",
																"nodeType": "YulFunctionCall",
																"src": "6214:11:8"
															},
															"nativeSrc": "6211:37:8",
															"nodeType": "YulIf",
															"src": "6211:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6126:128:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6157:1:8",
														"nodeType": "YulTypedName",
														"src": "6157:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6160:1:8",
														"nodeType": "YulTypedName",
														"src": "6160:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6166:4:8",
														"nodeType": "YulTypedName",
														"src": "6166:4:8",
														"type": ""
													}
												],
												"src": "6126:128:8"
											},
											{
												"body": {
													"nativeSrc": "6388:145:8",
													"nodeType": "YulBlock",
													"src": "6388:145:8",
													"statements": [
														{
															"nativeSrc": "6398:26:8",
															"nodeType": "YulAssignment",
															"src": "6398:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6410:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6410:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6421:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6421:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6406:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6406:3:8"
																},
																"nativeSrc": "6406:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6406:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6398:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6398:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6440:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6440:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6455:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6455:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6471:3:8",
																								"nodeType": "YulLiteral",
																								"src": "6471:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6476:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6476:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6467:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6467:3:8"
																						},
																						"nativeSrc": "6467:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6467:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6480:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6480:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6463:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6463:3:8"
																				},
																				"nativeSrc": "6463:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6463:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6451:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6451:3:8"
																		},
																		"nativeSrc": "6451:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6451:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6433:6:8"
																},
																"nativeSrc": "6433:51:8",
																"nodeType": "YulFunctionCall",
																"src": "6433:51:8"
															},
															"nativeSrc": "6433:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "6433:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6504:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6504:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6515:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6500:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6500:3:8"
																		},
																		"nativeSrc": "6500:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6500:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6520:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6520:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6493:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6493:6:8"
																},
																"nativeSrc": "6493:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6493:34:8"
															},
															"nativeSrc": "6493:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6493:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6259:274:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6349:9:8",
														"nodeType": "YulTypedName",
														"src": "6349:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6360:6:8",
														"nodeType": "YulTypedName",
														"src": "6360:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6368:6:8",
														"nodeType": "YulTypedName",
														"src": "6368:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6379:4:8",
														"nodeType": "YulTypedName",
														"src": "6379:4:8",
														"type": ""
													}
												],
												"src": "6259:274:8"
											},
											{
												"body": {
													"nativeSrc": "6740:207:8",
													"nodeType": "YulBlock",
													"src": "6740:207:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6757:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6757:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6768:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6768:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6750:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6750:6:8"
																},
																"nativeSrc": "6750:25:8",
																"nodeType": "YulFunctionCall",
																"src": "6750:25:8"
															},
															"nativeSrc": "6750:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "6750:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6795:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6795:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6806:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6806:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6791:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6791:3:8"
																		},
																		"nativeSrc": "6791:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6791:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6811:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6811:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6784:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6784:6:8"
																},
																"nativeSrc": "6784:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6784:30:8"
															},
															"nativeSrc": "6784:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6784:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6834:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6834:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6845:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6845:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6830:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6830:3:8"
																		},
																		"nativeSrc": "6830:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6830:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6850:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6850:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6823:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6823:6:8"
																},
																"nativeSrc": "6823:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6823:30:8"
															},
															"nativeSrc": "6823:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6823:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6873:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6873:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6884:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6884:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6869:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6869:3:8"
																		},
																		"nativeSrc": "6869:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6869:18:8"
																	},
																	{
																		"hexValue": "617574686f726974794d696e74",
																		"kind": "string",
																		"nativeSrc": "6889:15:8",
																		"nodeType": "YulLiteral",
																		"src": "6889:15:8",
																		"type": "",
																		"value": "authorityMint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6862:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6862:6:8"
																},
																"nativeSrc": "6862:43:8",
																"nodeType": "YulFunctionCall",
																"src": "6862:43:8"
															},
															"nativeSrc": "6862:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "6862:43:8"
														},
														{
															"nativeSrc": "6914:27:8",
															"nodeType": "YulAssignment",
															"src": "6914:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6926:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6926:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6937:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6937:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6922:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6922:3:8"
																},
																"nativeSrc": "6922:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6922:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6914:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6914:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_69b48298bc59ad13c9d2dd75d42421a445b62a269d2497d1473d5cf61da463dc__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6538:409:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6709:9:8",
														"nodeType": "YulTypedName",
														"src": "6709:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6720:6:8",
														"nodeType": "YulTypedName",
														"src": "6720:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6731:4:8",
														"nodeType": "YulTypedName",
														"src": "6731:4:8",
														"type": ""
													}
												],
												"src": "6538:409:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_StudyToken_$1076__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Only owner can call this functio\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b12507f79783e6861b0659e8d96efe9ea7ad495d0339d3c2256f519a077aafd8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid study group address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid user address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_b483afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 8)\n        mstore(add(headStart, 96), \"transfer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid contract address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_74e7f6520574a344a1f78c9de155390cac2c80bfb003917f990401b6467aa610__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Contract already authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5c4945e6b3610d383f734579b5988e80e465f94d13969c86a446ea85a32f996a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Contract not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 4)\n        mstore(add(headStart, 96), \"mint\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid token address\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_69b48298bc59ad13c9d2dd75d42421a445b62a269d2497d1473d5cf61da463dc__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 13)\n        mstore(add(headStart, 96), \"authorityMint\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011c575f3560e01c80638da5cb5b116100a9578063bebbcfe61161006e578063bebbcfe614610273578063c76b088814610286578063d5b9221b1461028f578063ec37d259146102b1578063f0dda65c146102c4575f80fd5b80638da5cb5b146101e65780639b32ea6d14610211578063a7481b5b14610224578063b09a8a0414610236578063b6fa284d14610249575f80fd5b8063360cf54a116100ef578063360cf54a146101785780633e6968b6146101a557806367561d93146101ad5780636e861c0e146101c057806377865f91146101d3575f80fd5b80630a0d6de114610120578063113018c514610148578063177c49a71461015057806332a34ad014610165575b5f80fd5b61013361012e366004610cc0565b6102d7565b60405190151581526020015b60405180910390f35b6101336103fd565b61016361015e366004610cd9565b61048a565b005b610133610173366004610d01565b610559565b610197610186366004610cc0565b60036020525f908152604090205481565b60405190815260200161013f565b61019761062a565b6101636101bb366004610cc0565b61063d565b6101636101ce366004610cc0565b610770565b6101976101e1366004610cc0565b610849565b6001546101f9906001600160a01b031681565b6040516001600160a01b03909116815260200161013f565b61013361021f366004610cd9565b610877565b5f546101f9906001600160a01b031681565b610163610244366004610cc0565b610a1b565b610197610257366004610cd9565b600560209081525f928352604080842090915290825290205481565b610163610281366004610d3a565b610ab4565b61019760045481565b61013361029d366004610cc0565b60026020525f908152604090205460ff1681565b6101976102bf366004610cc0565b610ae3565b6101336102d2366004610cd9565b610b40565b6001545f906001600160a01b0316331461030c5760405162461bcd60e51b815260040161030390610d51565b60405180910390fd5b6001600160a01b0382166103625760405162461bcd60e51b815260206004820152601b60248201527f496e76616c69642073747564792067726f7570206164647265737300000000006044820152606401610303565b5f54604051634c1d96ab60e11b81526001600160a01b0384811660048301529091169063983b2d56906024015f604051808303815f87803b1580156103a5575f80fd5b505af19250505080156103b6575060015b6103c157505f919050565b6040516001600160a01b038316907f8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff651905f90a25060015b919050565b6001545f906001600160a01b031633146104295760405162461bcd60e51b815260040161030390610d51565b5f54604051634c1d96ab60e11b81523060048201526001600160a01b039091169063983b2d56906024015f604051808303815f87803b15801561046a575f80fd5b505af192505050801561047b575060015b61048457505f90565b50600190565b6001546001600160a01b031633146104b45760405162461bcd60e51b815260040161030390610d51565b6001600160a01b0382166105015760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642075736572206164647265737360601b6044820152606401610303565b6001600160a01b0382165f8181526003602052604090819020839055517fc1395320bc4a9778acf4621c40f54fdde0fafa6177d8012972fca4ec8f7cfa369061054d9084815260200190565b60405180910390a25050565b335f9081526002602052604081205460ff168061058057506001546001600160a01b031633145b6105bd5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610303565b836001600160a01b03167f09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b383604051610618918152604060208201819052600890820152673a3930b739b332b960c11b606082015260800190565b60405180910390a25060019392505050565b5f6106386201518042610da6565b905090565b6001546001600160a01b031633146106675760405162461bcd60e51b815260040161030390610d51565b6001600160a01b0381166106bd5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e7472616374206164647265737300000000000000006044820152606401610303565b6001600160a01b0381165f9081526002602052604090205460ff16156107255760405162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c726561647920617574686f72697a656400000000006044820152606401610303565b6001600160a01b0381165f81815260026020526040808220805460ff19166001179055517f8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff6519190a250565b6001546001600160a01b0316331461079a5760405162461bcd60e51b815260040161030390610d51565b6001600160a01b0381165f9081526002602052604090205460ff166108015760405162461bcd60e51b815260206004820152601760248201527f436f6e7472616374206e6f7420617574686f72697a65640000000000000000006044820152606401610303565b6001600160a01b0381165f81815260026020526040808220805460ff19169055517f54142b7cb3ceaa9e564243ce4cc2303723c842a1144192de6b3c594f68b16a9a9190a250565b6001600160a01b0381165f908152600360205260408120548061086e57600454610870565b805b9392505050565b335f9081526002602052604081205460ff168061089e57506001546001600160a01b031633145b6108db5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610303565b5f6108e461062a565b90505f6108f085610849565b6001600160a01b0386165f908152600560209081526040808320868452909152902054909150816109218683610dc5565b116109af576109308582610dc5565b6001600160a01b0387165f818152600560209081526040808320888452825291829020939093558051888152928301819052600490830152631b5a5b9d60e21b6060830152907f09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b39060800160405180910390a260019350505050610a15565b856001600160a01b03167f36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf86604051610a06918152604060208201819052600490820152631b5a5b9d60e21b606082015260800190565b60405180910390a25f93505050505b92915050565b6001546001600160a01b03163314610a455760405162461bcd60e51b815260040161030390610d51565b6001600160a01b038116610a935760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606401610303565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610ade5760405162461bcd60e51b815260040161030390610d51565b600455565b5f80610aed61062a565b6001600160a01b0384165f908152600560209081526040808320848452909152812054919250610b1c85610849565b905080821015610b3557610b308282610dd8565b610b37565b5f5b95945050505050565b6001545f906001600160a01b03163314610b6c5760405162461bcd60e51b815260040161030390610d51565b5f54604051634d24848760e11b81526001600160a01b0385811660048301526024820185905290911690639a49090e906044015f604051808303815f87803b158015610bb6575f80fd5b505af1925050508015610bc7575060015b610c3a57826001600160a01b03167f36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf83604051610c2b918152604060208201819052600d908201526c185d5d1a1bdc9a5d1e535a5b9d609a1b606082015260800190565b60405180910390a2505f610a15565b826001600160a01b03167f09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b383604051610c9a918152604060208201819052600d908201526c185d5d1a1bdc9a5d1e535a5b9d609a1b606082015260800190565b60405180910390a2506001610a15565b80356001600160a01b03811681146103f8575f80fd5b5f60208284031215610cd0575f80fd5b61087082610caa565b5f8060408385031215610cea575f80fd5b610cf383610caa565b946020939093013593505050565b5f805f60608486031215610d13575f80fd5b610d1c84610caa565b9250610d2a60208501610caa565b9150604084013590509250925092565b5f60208284031215610d4a575f80fd5b5035919050565b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b5f82610dc057634e487b7160e01b5f52601260045260245ffd5b500490565b80820180821115610a1557610a15610d92565b81810381811115610a1557610a15610d9256fea2646970667358221220367faa81006eb8ec7b0c7ddc297ba351c354280ca61d61d282683a9493a679f864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xBEBBCFE6 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xBEBBCFE6 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xC76B0888 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xD5B9221B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xEC37D259 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x2C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x9B32EA6D EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xA7481B5B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB09A8A04 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xB6FA284D EQ PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x360CF54A GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x360CF54A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x3E6968B6 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x67561D93 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6E861C0E EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x77865F91 EQ PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0D6DE1 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x113018C5 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x177C49A7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x32A34AD0 EQ PUSH2 0x165 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x163 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x197 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH2 0x163 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x133 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x1F9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x197 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3A JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x197 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x362 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073747564792067726F757020616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4C1D96AB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x983B2D56 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3B6 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x3C1 JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651 SWAP1 PUSH0 SWAP1 LOG2 POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4C1D96AB PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x983B2D56 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x47B JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x484 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420757365722061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0xC1395320BC4A9778ACF4621C40F54FDDE0FAFA6177D8012972FCA4EC8F7CFA36 SWAP1 PUSH2 0x54D SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x580 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E7E318D9FDE6F0E5CBB2418A50245C2063CE96946E2711C38E9C2B3127E9B3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x618 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x3A3930B739B332B9 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x638 PUSH3 0x15180 TIMESTAMP PUSH2 0xDA6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420616C726561647920617574686F72697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x54142B7CB3CEAA9E564243CE4CC2303723C842A1144192DE6B3C594F68B16A9A SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x86E JUMPI PUSH1 0x4 SLOAD PUSH2 0x870 JUMP JUMPDEST DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x89E JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH0 PUSH2 0x8E4 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x8F0 DUP6 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 PUSH2 0x921 DUP7 DUP4 PUSH2 0xDC5 JUMP JUMPDEST GT PUSH2 0x9AF JUMPI PUSH2 0x930 DUP6 DUP3 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP4 ADD MSTORE PUSH4 0x1B5A5B9D PUSH1 0xE2 SHL PUSH1 0x60 DUP4 ADD MSTORE SWAP1 PUSH32 0x9E7E318D9FDE6F0E5CBB2418A50245C2063CE96946E2711C38E9C2B3127E9B3 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xA15 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x36E690C5F80DA3F9DA10E957F42FAC89E3FDE772861FFE24E95169AEDDA4E8BF DUP7 PUSH1 0x40 MLOAD PUSH2 0xA06 SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x1B5A5B9D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x303 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAED PUSH2 0x62A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0xB1C DUP6 PUSH2 0x849 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xB35 JUMPI PUSH2 0xB30 DUP3 DUP3 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH0 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4D248487 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x9A49090E SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBC7 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xC3A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x36E690C5F80DA3F9DA10E957F42FAC89E3FDE772861FFE24E95169AEDDA4E8BF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC2B SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x185D5D1A1BDC9A5D1E535A5B9D PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH0 PUSH2 0xA15 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E7E318D9FDE6F0E5CBB2418A50245C2063CE96946E2711C38E9C2B3127E9B3 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC9A SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x185D5D1A1BDC9A5D1E535A5B9D PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH2 0xA15 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x870 DUP3 PUSH2 0xCAA JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCF3 DUP4 PUSH2 0xCAA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD1C DUP5 PUSH2 0xCAA JUMP JUMPDEST SWAP3 POP PUSH2 0xD2A PUSH1 0x20 DUP6 ADD PUSH2 0xCAA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0xDC0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xA15 PUSH2 0xD92 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xA15 PUSH2 0xD92 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH32 0xAA81006EB8EC7B0C7DDC297BA351C354280CA61D61D282683A9493A679F86473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "194:7728:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7536:384;;;;;;:::i;:::-;;:::i;:::-;;;548:14:8;;541:22;523:41;;511:2;496:18;7536:384:7;;;;;;;;6529:199;;;:::i;3162:231::-;;;;;;:::i;:::-;;:::i;:::-;;5698:325;;;;;;:::i;:::-;;:::i;522:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1313:25:8;;;1301:2;1286:18;522:50:7;1167:177:8;3752:103:7;;;:::i;2244:353::-;;;;;;:::i;:::-;;:::i;2727:277::-;;;;;;:::i;:::-;;:::i;4005:191::-;;;;;;:::i;:::-;;:::i;342:20::-;;;;;-1:-1:-1;;;;;342:20:7;;;;;;-1:-1:-1;;;;;1513:32:8;;;1495:51;;1483:2;1468:18;342:20:7;1349:203:8;4871:570:7;;;;;;:::i;:::-;;:::i;266:28::-;;;;;-1:-1:-1;;;;;266:28:7;;;6172:206;;;;;;:::i;:::-;;:::i;694:69::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3516:106;;;;;;:::i;:::-;;:::i;610:32::-;;;;;;418:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4356:306;;;;;;:::i;:::-;;:::i;6958:354::-;;;;;;:::i;:::-;;:::i;7536:384::-;1230:5;;7628:4;;-1:-1:-1;;;;;1230:5:7;1216:10;:19;1208:65;;;;-1:-1:-1;;;1208:65:7;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;7652:31:7;::::1;7644:71;;;::::0;-1:-1:-1;;;7644:71:7;;2573:2:8;7644:71:7::1;::::0;::::1;2555:21:8::0;2612:2;2592:18;;;2585:30;2651:29;2631:18;;;2624:57;2698:18;;7644:71:7::1;2371:351:8::0;7644:71:7::1;7738:10;::::0;:39:::1;::::0;-1:-1:-1;;;7738:39:7;;-1:-1:-1;;;;;1513:32:8;;;7738:39:7::1;::::0;::::1;1495:51:8::0;7738:10:7;;::::1;::::0;:20:::1;::::0;1468:18:8;;7738:39:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;7734:180;;-1:-1:-1::0;7898:5:7::1;7536:384:::0;;;:::o;7734:180::-:1;7797:37;::::0;-1:-1:-1;;;;;7797:37:7;::::1;::::0;::::1;::::0;;;::::1;-1:-1:-1::0;7855:4:7::1;7734:180;7536:384:::0;;;:::o;6529:199::-;1230:5;;6586:4;;-1:-1:-1;;;;;1230:5:7;1216:10;:19;1208:65;;;;-1:-1:-1;;;1208:65:7;;;;;;;:::i;:::-;6606:10:::1;::::0;:35:::1;::::0;-1:-1:-1;;;6606:35:7;;6635:4:::1;6606:35;::::0;::::1;1495:51:8::0;-1:-1:-1;;;;;6606:10:7;;::::1;::::0;:20:::1;::::0;1468:18:8;;6606:35:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;6602:120;;-1:-1:-1::0;6706:5:7::1;6529:199:::0;:::o;6602:120::-:1;-1:-1:-1::0;6663:4:7::1;6529:199:::0;:::o;3162:231::-;1230:5;;-1:-1:-1;;;;;1230:5:7;1216:10;:19;1208:65;;;;-1:-1:-1;;;1208:65:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;3255:18:7;::::1;3247:51;;;::::0;-1:-1:-1;;;3247:51:7;;2929:2:8;3247:51:7::1;::::0;::::1;2911:21:8::0;2968:2;2948:18;;;2941:30;-1:-1:-1;;;2987:18:8;;;2980:50;3047:18;;3247:51:7::1;2727:344:8::0;3247:51:7::1;-1:-1:-1::0;;;;;3317:21:7;::::1;;::::0;;;:15:::1;:21;::::0;;;;;;:29;;;3361:25;::::1;::::0;::::1;::::0;3341:5;1313:25:8;;1301:2;1286:18;;1167:177;3361:25:7::1;;;;;;;;3162:231:::0;;:::o;5698:325::-;1365:10;5800:4;1345:31;;;:19;:31;;;;;;;;;:54;;-1:-1:-1;1394:5:7;;-1:-1:-1;;;;;1394:5:7;1380:10;:19;1345:54;1337:81;;;;-1:-1:-1;;;1337:81:7;;3278:2:8;1337:81:7;;;3260:21:8;3317:2;3297:18;;;3290:30;-1:-1:-1;;;3336:18:8;;;3329:44;3390:18;;1337:81:7;3076:338:8;1337:81:7;5970:4:::1;-1:-1:-1::0;;;;;5947:48:7::1;;5976:6;5947:48;;;;3631:25:8::0;;3692:2;3687;3672:18;;3665:30;;;3731:1;3711:18;;;3704:29;-1:-1:-1;;;3764:2:8;3749:18;;3742:38;3812:3;3797:19;;3419:403;5947:48:7::1;;;;;;;;-1:-1:-1::0;6012:4:7::1;5698:325:::0;;;;;:::o;3752:103::-;3798:7;3824:24;3842:6;3824:15;:24;:::i;:::-;3817:31;;3752:103;:::o;2244:353::-;1230:5;;-1:-1:-1;;;;;1230:5:7;1216:10;:19;1208:65;;;;-1:-1:-1;;;1208:65:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;2333:29:7;::::1;2325:66;;;::::0;-1:-1:-1;;;2325:66:7;;4383:2:8;2325:66:7::1;::::0;::::1;4365:21:8::0;4422:2;4402:18;;;4395:30;4461:26;4441:18;;;4434:54;4505:18;;2325:66:7::1;4181:348:8::0;2325:66:7::1;-1:-1:-1::0;;;;;2410:36:7;::::1;;::::0;;;:19:::1;:36;::::0;;;;;::::1;;2409:37;2401:77;;;::::0;-1:-1:-1;;;2401:77:7;;4736:2:8;2401:77:7::1;::::0;::::1;4718:21:8::0;4775:2;4755:18;;;4748:30;4814:29;4794:18;;;4787:57;4861:18;;2401:77:7::1;4534:351:8::0;2401:77:7::1;-1:-1:-1::0;;;;;2497:36:7;::::1;;::::0;;;:19:::1;:36;::::0;;;;;:43;;-1:-1:-1;;2497:43:7::1;2536:4;2497:43;::::0;;2555:35;::::1;::::0;2497:36;2555:35:::1;2244:353:::0;:::o;2727:277::-;1230:5;;-1:-1:-1;;;;;1230:5:7;1216:10;:19;1208:65;;;;-1:-1:-1;;;1208:65:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;2818:36:7;::::1;;::::0;;;:19:::1;:36;::::0;;;;;::::1;;2810:72;;;::::0;-1:-1:-1;;;2810:72:7;;5092:2:8;2810:72:7::1;::::0;::::1;5074:21:8::0;5131:2;5111:18;;;5104:30;5170:25;5150:18;;;5143:53;5213:18;;2810:72:7::1;4890:347:8::0;2810:72:7::1;-1:-1:-1::0;;;;;2901:36:7;::::1;2940:5;2901:36:::0;;;:19:::1;:36;::::0;;;;;:44;;-1:-1:-1;;2901:44:7::1;::::0;;2960:37;::::1;::::0;2940:5;2960:37:::1;2727:277:::0;:::o;4005:191::-;-1:-1:-1;;;;;4106:21:7;;4067:7;4106:21;;;:15;:21;;;;;;4144:13;:45;;4172:17;;4144:45;;;4160:9;4144:45;4137:52;4005:191;-1:-1:-1;;;4005:191:7:o;4871:570::-;1365:10;4955:4;1345:31;;;:19;:31;;;;;;;;;:54;;-1:-1:-1;1394:5:7;;-1:-1:-1;;;;;1394:5:7;1380:10;:19;1345:54;1337:81;;;;-1:-1:-1;;;1337:81:7;;3278:2:8;1337:81:7;;;3260:21:8;3317:2;3297:18;;;3290:30;-1:-1:-1;;;3336:18:8;;;3329:44;3390:18;;1337:81:7;3076:338:8;1337:81:7;4971:17:::1;4991:15;:13;:15::i;:::-;4971:35;;5016:17;5036:21;5054:2;5036:17;:21::i;:::-;-1:-1:-1::0;;;;;5087:18:7;::::1;5067:17;5087:18:::0;;;:14:::1;:18;::::0;;;;;;;:29;;;;;;;;;5016:41;;-1:-1:-1;5016:41:7;5139:18:::1;5151:6:::0;5087:29;5139:18:::1;:::i;:::-;:31;5135:300;;5218:18;5230:6:::0;5218:9;:18:::1;:::i;:::-;-1:-1:-1::0;;;;;5186:18:7;::::1;;::::0;;;:14:::1;:18;::::0;;;;;;;:29;;;;;;;;;:50;;;;5255:42;;5584:25:8;;;5625:18;;;5618:30;;;5684:1;5664:18;;;5657:29;-1:-1:-1;;;5717:2:8;5702:18;;5695:34;5186:18:7;5255:42:::1;::::0;5761:3:8;5746:19;5255:42:7::1;;;;;;;5318:4;5311:11;;;;;;;5135:300;5379:2;-1:-1:-1::0;;;;;5358:40:7::1;;5383:6;5358:40;;;;5584:25:8::0;;5645:2;5640;5625:18;;5618:30;;;5684:1;5664:18;;;5657:29;-1:-1:-1;;;5717:2:8;5702:18;;5695:34;5761:3;5746:19;;5372:399;5358:40:7::1;;;;;;;;5419:5;5412:12;;;;;1428:1;4871:570:::0;;;;:::o;6172:206::-;1230:5;;-1:-1:-1;;;;;1230:5:7;1216:10;:19;1208:65;;;;-1:-1:-1;;;1208:65:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;6260:32:7;::::1;6252:66;;;::::0;-1:-1:-1;;;6252:66:7;;5978:2:8;6252:66:7::1;::::0;::::1;5960:21:8::0;6017:2;5997:18;;;5990:30;-1:-1:-1;;;6036:18:8;;;6029:51;6097:18;;6252:66:7::1;5776:345:8::0;6252:66:7::1;6328:10;:43:::0;;-1:-1:-1;;;;;;6328:43:7::1;-1:-1:-1::0;;;;;6328:43:7;;;::::1;::::0;;;::::1;::::0;;6172:206::o;3516:106::-;1230:5;;-1:-1:-1;;;;;1230:5:7;1216:10;:19;1208:65;;;;-1:-1:-1;;;1208:65:7;;;;;;;:::i;:::-;3590:17:::1;:25:::0;3516:106::o;4356:306::-;4423:7;4442:17;4462:15;:13;:15::i;:::-;-1:-1:-1;;;;;4507:20:7;;4487:17;4507:20;;;:14;:20;;;;;;;;:31;;;;;;;;;4442:35;;-1:-1:-1;4564:23:7;4522:4;4564:17;:23::i;:::-;4548:39;;4626:5;4613:9;:18;;:42;;4638:17;4646:9;4638:5;:17;:::i;:::-;4613:42;;;4634:1;4613:42;4606:49;4356:306;-1:-1:-1;;;;;4356:306:7:o;6958:354::-;1230:5;;7034:4;;-1:-1:-1;;;;;1230:5:7;1216:10;:19;1208:65;;;;-1:-1:-1;;;1208:65:7;;;;;;;:::i;:::-;7054:10:::1;::::0;:33:::1;::::0;-1:-1:-1;;;7054:33:7;;-1:-1:-1;;;;;6451:32:8;;;7054:33:7::1;::::0;::::1;6433:51:8::0;6500:18;;;6493:34;;;7054:10:7;;::::1;::::0;:21:::1;::::0;6406:18:8;;7054:33:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;7050:256;;7241:2;-1:-1:-1::0;;;;;7220:49:7::1;;7245:6;7220:49;;;;6750:25:8::0;;6811:2;6806;6791:18;;6784:30;;;6850:2;6830:18;;;6823:30;-1:-1:-1;;;6884:2:8;6869:18;;6862:43;6937:3;6922:19;;6538:409;7220:49:7::1;;;;;;;;-1:-1:-1::0;7290:5:7::1;7283:12;;7050:256;7130:2;-1:-1:-1::0;;;;;7107:51:7::1;;7134:6;7107:51;;;;6750:25:8::0;;6811:2;6806;6791:18;;6784:30;;;6850:2;6830:18;;;6823:30;-1:-1:-1;;;6884:2:8;6869:18;;6862:43;6937:3;6922:19;;6538:409;7107:51:7::1;;;;;;;;-1:-1:-1::0;7179:4:7::1;7172:11;;14:173:8::0;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;575:254::-;643:6;651;704:2;692:9;683:7;679:23;675:32;672:52;;;720:1;717;710:12;672:52;743:29;762:9;743:29;:::i;:::-;733:39;819:2;804:18;;;;791:32;;-1:-1:-1;;;575:254:8:o;834:328::-;911:6;919;927;980:2;968:9;959:7;955:23;951:32;948:52;;;996:1;993;986:12;948:52;1019:29;1038:9;1019:29;:::i;:::-;1009:39;;1067:38;1101:2;1090:9;1086:18;1067:38;:::i;:::-;1057:48;;1152:2;1141:9;1137:18;1124:32;1114:42;;834:328;;;;;:::o;1784:180::-;1843:6;1896:2;1884:9;1875:7;1871:23;1867:32;1864:52;;;1912:1;1909;1902:12;1864:52;-1:-1:-1;1935:23:8;;1784:180;-1:-1:-1;1784:180:8:o;1969:397::-;2171:2;2153:21;;;2210:2;2190:18;;;2183:30;2249:34;2244:2;2229:18;;2222:62;-1:-1:-1;;;2315:2:8;2300:18;;2293:31;2356:3;2341:19;;1969:397::o;3827:127::-;3888:10;3883:3;3879:20;3876:1;3869:31;3919:4;3916:1;3909:15;3943:4;3940:1;3933:15;3959:217;3999:1;4025;4015:132;;4069:10;4064:3;4060:20;4057:1;4050:31;4104:4;4101:1;4094:15;4132:4;4129:1;4122:15;4015:132;-1:-1:-1;4161:9:8;;3959:217::o;5242:125::-;5307:9;;;5328:10;;;5325:36;;;5341:18;;:::i;6126:128::-;6193:9;;;6214:11;;;6211:37;;;6228:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "723400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"authorizeContract(address)": "30206",
								"authorizeMint(address,uint256)": "infinite",
								"authorizeStudyGroupAsMinter(address)": "infinite",
								"authorizeTransfer(address,address,uint256)": "infinite",
								"authorizedContracts(address)": "2583",
								"deauthorizeContract(address)": "30184",
								"defaultDailyLimit()": "2338",
								"getCurrentDay()": "313",
								"getRemainingDailyLimit(address)": "infinite",
								"getUserDailyLimit(address)": "infinite",
								"mintTokens(address,uint256)": "infinite",
								"owner()": "2359",
								"requestMinterRole()": "infinite",
								"setDefaultDailyLimit(uint256)": "24484",
								"setStudyToken(address)": "26832",
								"setUserDailyLimit(address,uint256)": "26216",
								"studyToken()": "2402",
								"userDailyLimits(address)": "2539",
								"userDailyUsage(address,uint256)": "2720"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7922,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1651,
									"end": 2081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1737,
									"end": 1769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1769,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 572,
									"end": 574,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 554,
									"end": 575,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 611,
									"end": 613,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 591,
									"end": 609,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 591,
									"end": 609,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 591,
									"end": 609,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 584,
									"end": 614,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 650,
									"end": 673,
									"name": "PUSH",
									"source": 8,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 630,
									"end": 648,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 630,
									"end": 648,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 630,
									"end": 648,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 623,
									"end": 674,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 691,
									"end": 709,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 691,
									"end": 709,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1729,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1810,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1805,
									"end": 1823,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1823,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1813,
									"end": 1823,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1805,
									"end": 1823,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1823,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1823,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1823,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1823,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1823,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1823,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1876,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1903,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1886,
									"end": 1924,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1924,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1924,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2022,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2022,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2022,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2010,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1991,
									"end": 2022,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1991,
									"end": 2022,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2022,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1991,
									"end": 2022,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2022,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2022,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2029,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2029,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1991,
									"end": 2029,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2029,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2029,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2029,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2029,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2029,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2029,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2074,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2074,
									"name": "PUSH",
									"source": 7,
									"value": "8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651"
								},
								{
									"begin": 2044,
									"end": 2074,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 2044,
									"end": 2074,
									"name": "LOG2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 2081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 365,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 99,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 107,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 154,
									"end": 156,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 151,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 133,
									"end": 140,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 129,
									"end": 152,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 125,
									"end": 157,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 122,
									"end": 174,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 170,
									"end": 171,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 168,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 160,
									"end": 172,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 122,
									"end": 174,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 196,
									"end": 212,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 212,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 241,
									"end": 272,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 241,
									"end": 272,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 231,
									"end": 273,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 231,
									"end": 273,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 221,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 221,
									"end": 291,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 287,
									"end": 288,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 284,
									"end": 285,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 277,
									"end": 289,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 221,
									"end": 291,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 221,
									"end": 291,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 355,
									"end": 357,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 340,
									"end": 358,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 340,
									"end": 358,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 340,
									"end": 358,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 340,
									"end": 358,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 334,
									"end": 359,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 310,
									"end": 315,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 310,
									"end": 315,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 365,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 370,
									"end": 715,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 370,
									"end": 715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7922,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220367faa81006eb8ec7b0c7ddc297ba351c354280ca61d61d282683a9493a679f864736f6c63430008180033",
									".code": [
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "BEBBCFE6"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "BEBBCFE6"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "C76B0888"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "D5B9221B"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "EC37D259"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "F0DDA65C"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "9B32EA6D"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "A7481B5B"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "B09A8A04"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "B6FA284D"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "360CF54A"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "360CF54A"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "3E6968B6"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "67561D93"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "6E861C0E"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "77865F91"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "A0D6DE1"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "113018C5"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "177C49A7"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "32A34AD0"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7922,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 7536,
											"end": 7920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 7536,
											"end": 7920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 548,
											"end": 562,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 541,
											"end": 563,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 523,
											"end": 564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 523,
											"end": 564,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 511,
											"end": 513,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6728,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6529,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 6529,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6529,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3162,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3162,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5698,
											"end": 6023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5698,
											"end": 6023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 522,
											"end": 572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 572,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 522,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1167,
											"end": 1344,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3855,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3752,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3752,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3752,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2244,
											"end": 2597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2244,
											"end": 2597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2727,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2727,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4005,
											"end": 4196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4005,
											"end": 4196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 342,
											"end": 362,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 342,
											"end": 362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 342,
											"end": 362,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 342,
											"end": 362,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 342,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 342,
											"end": 362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 342,
											"end": 362,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 342,
											"end": 362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 342,
											"end": 362,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 342,
											"end": 362,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 342,
											"end": 362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 342,
											"end": 362,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 362,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1513,
											"end": 1545,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1513,
											"end": 1545,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1495,
											"end": 1546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1495,
											"end": 1546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 342,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1349,
											"end": 1552,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4871,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4871,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 266,
											"end": 294,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 266,
											"end": 294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 266,
											"end": 294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 294,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 266,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 266,
											"end": 294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 266,
											"end": 294,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 266,
											"end": 294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 266,
											"end": 294,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6172,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6172,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 694,
											"end": 763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 694,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 694,
											"end": 763,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 694,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 694,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 694,
											"end": 763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 694,
											"end": 763,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 694,
											"end": 763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 763,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 763,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 694,
											"end": 763,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3516,
											"end": 3622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3516,
											"end": 3622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 610,
											"end": 642,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 610,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 610,
											"end": 642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 610,
											"end": 642,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 418,
											"end": 469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 418,
											"end": 469,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 469,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4356,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4356,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 6958,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 6958,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1235,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7652,
											"end": 7683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7683,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 7644,
											"end": 7715,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 7715,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7644,
											"end": 7715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7715,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2575,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7644,
											"end": 7715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7644,
											"end": 7715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 2614,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 2592,
											"end": 2610,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2592,
											"end": 2610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2615,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2651,
											"end": 2680,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642073747564792067726F757020616464726573730000000000"
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7644,
											"end": 7715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2371,
											"end": 2722,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7644,
											"end": 7715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 7644,
											"end": 7715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7748,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7738,
											"end": 7777,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C1D96AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7738,
											"end": 7777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1545,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1513,
											"end": 1545,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1513,
											"end": 1545,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7738,
											"end": 7777,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "983B2D56"
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7738,
											"end": 7777,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7734,
											"end": 7914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7734,
											"end": 7914,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7898,
											"end": 7903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7734,
											"end": 7914,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7734,
											"end": 7914,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7797,
											"end": 7834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7797,
											"end": 7834,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7797,
											"end": 7834,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7797,
											"end": 7834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7797,
											"end": 7834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7797,
											"end": 7834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651"
										},
										{
											"begin": 7797,
											"end": 7834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7797,
											"end": 7834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7797,
											"end": 7834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7797,
											"end": 7834,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7855,
											"end": 7859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7734,
											"end": 7914,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 7734,
											"end": 7914,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6728,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6529,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6586,
											"end": 6590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1235,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6616,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6606,
											"end": 6641,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C1D96AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6606,
											"end": 6641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6639,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6606,
											"end": 6641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6606,
											"end": 6616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6616,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "983B2D56"
										},
										{
											"begin": 6606,
											"end": 6626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6641,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6606,
											"end": 6641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6602,
											"end": 6722,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6706,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6602,
											"end": 6722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6663,
											"end": 6667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6529,
											"end": 6728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1235,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3247,
											"end": 3298,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3298,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3247,
											"end": 3298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3298,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3247,
											"end": 3298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3298,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420757365722061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2980,
											"end": 3030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3065,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3047,
											"end": 3065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2727,
											"end": 3071,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3247,
											"end": 3298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3338,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3317,
											"end": 3338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3338,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3346,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3386,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "C1395320BC4A9778ACF4621C40F54FDDE0FAFA6177D8012972FCA4EC8F7CFA36"
										},
										{
											"begin": 3361,
											"end": 3386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3361,
											"end": 3386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1344,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3386,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1375,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5800,
											"end": 5804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1364,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1345,
											"end": 1399,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1390,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1399,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1399,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1345,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3260,
											"end": 3281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3319,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3320,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 3076,
											"end": 3414,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5970,
											"end": 5974,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9E7E318D9FDE6F0E5CBB2418A50245C2063CE96946E2711C38E9C2B3127E9B3"
										},
										{
											"begin": 5976,
											"end": 5982,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3631,
											"end": 3656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3687,
											"end": 3689,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3731,
											"end": 3732,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3711,
											"end": 3729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3733,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3764,
											"end": 3766,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3742,
											"end": 3780,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3815,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3797,
											"end": 3816,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3822,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5995,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6012,
											"end": 6016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 6023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3855,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3752,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3842,
											"end": 3848,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 3824,
											"end": 3839,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3824,
											"end": 3848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3848,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3824,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1235,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2325,
											"end": 2391,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2391,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2325,
											"end": 2391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2391,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2325,
											"end": 2391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2391,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4424,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4425,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4461,
											"end": 4487,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420636F6E747261637420616464726573730000000000000000"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2325,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4181,
											"end": 4529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2325,
											"end": 2391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2325,
											"end": 2391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2410,
											"end": 2446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2410,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2446,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2446,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2410,
											"end": 2446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2409,
											"end": 2446,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2401,
											"end": 2478,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4738,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2478,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4739,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4775,
											"end": 4777,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4778,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4843,
											"name": "PUSH",
											"source": 8,
											"value": "436F6E747261637420616C726561647920617574686F72697A65640000000000"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4844,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4534,
											"end": 4885,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2401,
											"end": 2478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2497,
											"end": 2533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2540,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2540,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2497,
											"end": 2540,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2540,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651"
										},
										{
											"begin": 2555,
											"end": 2590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2590,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1235,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 2854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2818,
											"end": 2854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2854,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2854,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2854,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2818,
											"end": 2854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2810,
											"end": 2882,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2882,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2810,
											"end": 2882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2882,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5094,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 2882,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5133,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 5111,
											"end": 5129,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5111,
											"end": 5129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5111,
											"end": 5129,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5195,
											"name": "PUSH",
											"source": 8,
											"value": "436F6E7472616374206E6F7420617574686F72697A6564000000000000000000"
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5143,
											"end": 5196,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4890,
											"end": 5237,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2810,
											"end": 2882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2937,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2901,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2937,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2937,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2937,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2945,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2945,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 2997,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 2997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "54142B7CB3CEAA9E564243CE4CC2303723C842A1144192DE6B3C594F68B16A9A"
										},
										{
											"begin": 2960,
											"end": 2997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 2997,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 3004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 3004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4067,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4121,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 4144,
											"end": 4189,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4189,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4172,
											"end": 4189,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4144,
											"end": 4189,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4189,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 4144,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4169,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4189,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4144,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4189,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4196,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4005,
											"end": 4196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1375,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 4959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1364,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1345,
											"end": 1399,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1390,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1399,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1399,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1345,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3260,
											"end": 3281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3319,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3320,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 3076,
											"end": 3414,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1337,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4991,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4991,
											"end": 5006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4991,
											"end": 5006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5036,
											"end": 5057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5054,
											"end": 5056,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5036,
											"end": 5053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5036,
											"end": 5057,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5036,
											"end": 5057,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5036,
											"end": 5057,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5087,
											"end": 5105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5057,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5016,
											"end": 5057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5151,
											"end": 5157,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5139,
											"end": 5157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5139,
											"end": 5157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5170,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5135,
											"end": 5435,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5218,
											"end": 5236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5230,
											"end": 5236,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5218,
											"end": 5236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5218,
											"end": 5236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5218,
											"end": 5236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5218,
											"end": 5236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5186,
											"end": 5204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5215,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5215,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5215,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5215,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5215,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5215,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5236,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5236,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5236,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5236,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5297,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5297,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5717,
											"end": 5719,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9E7E318D9FDE6F0E5CBB2418A50245C2063CE96946E2711C38E9C2B3127E9B3"
										},
										{
											"begin": 5255,
											"end": 5297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5761,
											"end": 5764,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5746,
											"end": 5765,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5255,
											"end": 5297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5255,
											"end": 5297,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5297,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5297,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5297,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5297,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5311,
											"end": 5322,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5311,
											"end": 5322,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5135,
											"end": 5435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5379,
											"end": 5381,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "36E690C5F80DA3F9DA10E957F42FAC89E3FDE772861FFE24E95169AEDDA4E8BF"
										},
										{
											"begin": 5383,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5645,
											"end": 5647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5717,
											"end": 5719,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5761,
											"end": 5764,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5746,
											"end": 5765,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5746,
											"end": 5765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5771,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5424,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1428,
											"end": 1429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 5441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6172,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1235,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6260,
											"end": 6292,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6260,
											"end": 6292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6252,
											"end": 6318,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6252,
											"end": 6318,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6252,
											"end": 6318,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6318,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 5980,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6252,
											"end": 6318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6252,
											"end": 6318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6318,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6017,
											"end": 6019,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 6020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420746F6B656E2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5776,
											"end": 6121,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6318,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6252,
											"end": 6318,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6328,
											"end": 6371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6371,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3516,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1235,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3590,
											"end": 3615,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4459,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4462,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4462,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4477,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4462,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4564,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4522,
											"end": 4526,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4564,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4564,
											"end": 4587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4564,
											"end": 4587,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4564,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4638,
											"end": 4655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4655,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4638,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 4613,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4606,
											"end": 4655,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4662,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 6958,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7034,
											"end": 7038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7034,
											"end": 7038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1235,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1208,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7064,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7087,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D248487"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7054,
											"end": 7087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6451,
											"end": 6483,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6483,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6483,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7054,
											"end": 7087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6433,
											"end": 6484,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6500,
											"end": 6518,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6500,
											"end": 6518,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6500,
											"end": 6518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6527,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9A49090E"
										},
										{
											"begin": 7054,
											"end": 7075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7087,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7054,
											"end": 7087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7050,
											"end": 7306,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7241,
											"end": 7243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "36E690C5F80DA3F9DA10E957F42FAC89E3FDE772861FFE24E95169AEDDA4E8BF"
										},
										{
											"begin": 7245,
											"end": 7251,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6750,
											"end": 6775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6750,
											"end": 6775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6811,
											"end": 6813,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6806,
											"end": 6808,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6814,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6814,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6850,
											"end": 6852,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 6830,
											"end": 6848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6848,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 6853,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185D5D1A1BDC9A5D1E535A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6884,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6905,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 6940,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6922,
											"end": 6941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 6941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6538,
											"end": 6947,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7269,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7290,
											"end": 7295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7283,
											"end": 7295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7283,
											"end": 7295,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7050,
											"end": 7306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7130,
											"end": 7132,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9E7E318D9FDE6F0E5CBB2418A50245C2063CE96946E2711C38E9C2B3127E9B3"
										},
										{
											"begin": 7134,
											"end": 7140,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6750,
											"end": 6775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6750,
											"end": 6775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6811,
											"end": 6813,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6806,
											"end": 6808,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6814,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6814,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6850,
											"end": 6852,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 6830,
											"end": 6848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6848,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 6853,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185D5D1A1BDC9A5D1E535A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6884,
											"end": 6886,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6905,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 6940,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6922,
											"end": 6941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 6941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6538,
											"end": 6947,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7158,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7179,
											"end": 7183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7172,
											"end": 7183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7172,
											"end": 7183,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 575,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 575,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 643,
											"end": 649,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 657,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 704,
											"end": 706,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 701,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 683,
											"end": 690,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 679,
											"end": 702,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 675,
											"end": 707,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 672,
											"end": 724,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 720,
											"end": 721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 710,
											"end": 722,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 672,
											"end": 724,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 762,
											"end": 771,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 743,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 743,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 743,
											"end": 772,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 743,
											"end": 772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 733,
											"end": 772,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 819,
											"end": 821,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 804,
											"end": 822,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 804,
											"end": 822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 804,
											"end": 822,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 804,
											"end": 822,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 823,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 823,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 575,
											"end": 829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 834,
											"end": 1162,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 911,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 927,
											"end": 933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 982,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 959,
											"end": 966,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 955,
											"end": 978,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 951,
											"end": 983,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 948,
											"end": 1000,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 948,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 948,
											"end": 1000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 996,
											"end": 997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 986,
											"end": 998,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 948,
											"end": 1000,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 948,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1038,
											"end": 1047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1019,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1019,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1009,
											"end": 1048,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1009,
											"end": 1048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1067,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1067,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1067,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1067,
											"end": 1105,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1067,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1057,
											"end": 1105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1057,
											"end": 1105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 834,
											"end": 1162,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 834,
											"end": 1162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 834,
											"end": 1162,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 834,
											"end": 1162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 834,
											"end": 1162,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 834,
											"end": 1162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1964,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1784,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1898,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1875,
											"end": 1882,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 1899,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1935,
											"end": 1958,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1935,
											"end": 1958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 2366,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1969,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2174,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2174,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2212,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2213,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2283,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 2244,
											"end": 2246,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2229,
											"end": 2247,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2317,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2300,
											"end": 2318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2324,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2341,
											"end": 2360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2341,
											"end": 2360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 2366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 3954,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3827,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3888,
											"end": 3898,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3883,
											"end": 3886,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3879,
											"end": 3899,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3909,
											"end": 3924,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3947,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3940,
											"end": 3941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3948,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4176,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3959,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4015,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4015,
											"end": 4147,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4064,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4060,
											"end": 4080,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4058,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4081,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4108,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 4101,
											"end": 4102,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4094,
											"end": 4109,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4136,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4129,
											"end": 4130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4137,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4015,
											"end": 4147,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4015,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4161,
											"end": 4170,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5367,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5242,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5307,
											"end": 5316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5307,
											"end": 5316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5307,
											"end": 5316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 5338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 5338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 5338,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5361,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5325,
											"end": 5361,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5341,
											"end": 5359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6254,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 6126,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6202,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 6228,
											"end": 6246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/StudyToken.sol",
								"contracts/StudyTokenAuthority.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authorizeContract(address)": "67561d93",
							"authorizeMint(address,uint256)": "9b32ea6d",
							"authorizeStudyGroupAsMinter(address)": "0a0d6de1",
							"authorizeTransfer(address,address,uint256)": "32a34ad0",
							"authorizedContracts(address)": "d5b9221b",
							"deauthorizeContract(address)": "6e861c0e",
							"defaultDailyLimit()": "c76b0888",
							"getCurrentDay()": "3e6968b6",
							"getRemainingDailyLimit(address)": "ec37d259",
							"getUserDailyLimit(address)": "77865f91",
							"mintTokens(address,uint256)": "f0dda65c",
							"owner()": "8da5cb5b",
							"requestMinterRole()": "113018c5",
							"setDefaultDailyLimit(uint256)": "bebbcfe6",
							"setStudyToken(address)": "b09a8a04",
							"setUserDailyLimit(address,uint256)": "177c49a7",
							"studyToken()": "a7481b5b",
							"userDailyLimits(address)": "360cf54a",
							"userDailyUsage(address,uint256)": "b6fa284d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_studyTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_defaultDailyLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractDeauthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"}],\"name\":\"TokenOperationApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"}],\"name\":\"TokenOperationDenied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"UserLimitSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"authorizeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"authorizeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"studyGroupAddress\",\"type\":\"address\"}],\"name\":\"authorizeStudyGroupAsMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"authorizeTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"deauthorizeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRemainingDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setDefaultDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_studyTokenAddress\",\"type\":\"address\"}],\"name\":\"setStudyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setUserDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"studyToken\",\"outputs\":[{\"internalType\":\"contract StudyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDailyLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userDailyUsage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for managing token authority operations for StudyDAO\",\"kind\":\"dev\",\"methods\":{\"authorizeContract(address)\":{\"details\":\"Authorize a contract to interact with the token authority\",\"params\":{\"contractAddress\":\"Address of the contract to authorize\"}},\"authorizeMint(address,uint256)\":{\"details\":\"Authorize a token mint operation\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"to\":\"Recipient of the tokens\"},\"returns\":{\"_0\":\"Whether the operation is authorized\"}},\"authorizeStudyGroupAsMinter(address)\":{\"details\":\"Add a new StudyGroup contract as an authorized minter on the token\",\"params\":{\"studyGroupAddress\":\"Address of the StudyGroup contract\"},\"returns\":{\"_0\":\"Whether the operation was successful\"}},\"authorizeTransfer(address,address,uint256)\":{\"details\":\"Authorize a token transfer operation\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"from\":\"Sender of the tokens\",\"to\":\"Recipient of the tokens\"},\"returns\":{\"_0\":\"Whether the operation is authorized\"}},\"constructor\":{\"details\":\"Constructor to initialize the token authority\",\"params\":{\"_defaultDailyLimit\":\"Default daily limit for users\",\"_studyTokenAddress\":\"Address of the StudyToken contract\"}},\"deauthorizeContract(address)\":{\"details\":\"Deauthorize a contract\",\"params\":{\"contractAddress\":\"Address of the contract to deauthorize\"}},\"getCurrentDay()\":{\"details\":\"Get the current day number (for daily limit tracking)\",\"returns\":{\"_0\":\"The current day number\"}},\"getRemainingDailyLimit(address)\":{\"details\":\"Get a user's remaining daily limit\",\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The user's remaining daily limit\"}},\"getUserDailyLimit(address)\":{\"details\":\"Get a user's effective daily limit\",\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The user's daily limit\"}},\"mintTokens(address,uint256)\":{\"details\":\"Mint tokens through the authority (if it's a minter)\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"to\":\"Recipient of the tokens\"},\"returns\":{\"_0\":\"Whether the operation was successful\"}},\"requestMinterRole()\":{\"details\":\"Request the token contract to add this authority as a minter\",\"returns\":{\"_0\":\"Whether the operation was successful\"}},\"setDefaultDailyLimit(uint256)\":{\"details\":\"Set default daily limit for all users\",\"params\":{\"limit\":\"Default daily limit amount\"}},\"setStudyToken(address)\":{\"details\":\"Connect to an existing StudyToken contract\",\"params\":{\"_studyTokenAddress\":\"Address of the StudyToken contract\"}},\"setUserDailyLimit(address,uint256)\":{\"details\":\"Set daily token limit for a specific user\",\"params\":{\"limit\":\"Daily limit amount\",\"user\":\"Address of the user\"}}},\"title\":\"StudyTokenAuthority\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StudyTokenAuthority.sol\":\"StudyTokenAuthority\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/StudyToken.sol\":{\"keccak256\":\"0x219a3d7da16fd6da0842383352c6c0ccceb5507b4f5e349214554ea0a7a4566c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a02992842f5b96f294ccdf6cf50cb9e88e85200a4ae2f05427abf43e2d224fb5\",\"dweb:/ipfs/QmRzAF8EvTq177hsD6PP8tUxxLCNiyE3mcWB5PYXpasw7S\"]},\"contracts/StudyTokenAuthority.sol\":{\"keccak256\":\"0x1b7dbaab57958954cdd52c13c7c0cab9d9e58ca5f76749fdff4481f5b5e3b91a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e57ddcb7d5badc30ad65b71f64ebe3c9c8b6e8f14ec5f7e7437fd212b3ca1fe0\",\"dweb:/ipfs/QmXNLU3ESLgUCX9rEKv7mrRKi7wXTcoQCeXBHdFNSrs3jD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1083,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "studyToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(StudyToken)1076"
							},
							{
								"astId": 1085,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1089,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "authorizedContracts",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1093,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "userDailyLimits",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1095,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "defaultDailyLimit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1101,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "userDailyUsage",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(StudyToken)1076": {
								"encoding": "inplace",
								"label": "contract StudyToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/StudyTokenAuthority.sol:165:46:\n    |\n165 |     function authorizeTransfer(address from, address to, uint256 amount) external onlyAuthorized returns (bool) {\n    |                                              ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5749,
					"file": "contracts/StudyTokenAuthority.sol",
					"start": 5739
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/StudyToken.sol": {
				"ast": {
					"absolutePath": "contracts/StudyToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"StudyToken": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"266:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "266:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "266:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"273:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "273:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "273:7:6"
								}
							],
							"canonicalName": "StudyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "168:74:6",
								"text": " @title StudyToken\n @dev ERC20 token for the StudyDAO platform"
							},
							"fullyImplemented": true,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "StudyToken",
							"nameLocation": "252:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f46eccc4",
									"id": 946,
									"mutability": "mutable",
									"name": "minters",
									"nameLocation": "410:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1076,
									"src": "378:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 945,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 943,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "386:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "378:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 944,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "397:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6",
									"id": 950,
									"name": "MinterAdded",
									"nameLocation": "448:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "476:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "460:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:24:6"
									},
									"src": "442:42:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692",
									"id": 954,
									"name": "MinterRemoved",
									"nameLocation": "495:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "525:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "509:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:24:6"
									},
									"src": "489:44:6"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "801:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 969,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "864:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "868:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "864:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 971,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "876:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 973,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "896:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "896:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "892:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "876:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "858:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "858:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "858:49:6"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "543:169:6",
										"text": " @dev Constructor that initializes the token with name and symbol\n @param initialSupply The initial token supply to mint to the contract deployer"
									},
									"id": 980,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5374756479546f6b656e",
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "758:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b0bdfbec7d827df67b1623714873af8de6f3305f2d3753794126e2d269f2245e",
														"typeString": "literal_string \"StudyToken\""
													},
													"value": "StudyToken"
												},
												{
													"hexValue": "5354554459",
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "772:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0e7a187458f4c0f72b52572103140a12af101e84232c0592d3c3d3cbcaa3a420",
														"typeString": "literal_string \"STUDY\""
													},
													"value": "STUDY"
												}
											],
											"id": 962,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 959,
												"name": "ERC20",
												"nameLocations": [
													"752:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "752:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "752:28:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 964,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "789:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "793:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "789:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 966,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 963,
												"name": "Ownable",
												"nameLocations": [
													"781:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "781:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "781:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "737:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "729:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:23:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "801:0:6"
									},
									"scope": 1076,
									"src": "717:197:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "1083:202:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "1101:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1119:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1111:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 990,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1111:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1111:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1101:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696e7465722061646472657373",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1123:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7",
																"typeString": "literal_string \"Invalid minter address\""
															},
															"value": "Invalid minter address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7",
																"typeString": "literal_string \"Invalid minter address\""
															}
														],
														"id": 988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1093:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1093:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "1093:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1166:16:6",
															"subExpression": {
																"baseExpression": {
																	"id": 999,
																	"name": "minters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "1167:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1001,
																"indexExpression": {
																	"id": 1000,
																	"name": "minter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "1175:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1167:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792061206d696e746572",
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_298f04a054c82359551dd013e3db0e6554562c0d7fb0f499c4b95f59c4e86586",
																"typeString": "literal_string \"Already a minter\""
															},
															"value": "Already a minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_298f04a054c82359551dd013e3db0e6554562c0d7fb0f499c4b95f59c4e86586",
																"typeString": "literal_string \"Already a minter\""
															}
														],
														"id": 998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1158:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1158:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "1158:45:6"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1006,
															"name": "minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "1222:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1008,
														"indexExpression": {
															"id": 1007,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "1230:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1222:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1240:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1222:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "1222:22:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1013,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "1271:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1012,
														"name": "MinterAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "1259:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1259:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "EmitStatement",
												"src": "1254:24:6"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "924:100:6",
										"text": " @dev Add a new minter address\n @param minter The address to add as a minter"
									},
									"functionSelector": "983b2d56",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 985,
												"name": "onlyOwner",
												"nameLocations": [
													"1073:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1073:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1073:9:6"
										}
									],
									"name": "addMinter",
									"nameLocation": "1038:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "1056:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1048:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:16:6"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1083:0:6"
									},
									"scope": 1076,
									"src": "1029:256:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "1459:135:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1026,
																"name": "minters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "1477:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1028,
															"indexExpression": {
																"id": 1027,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "1485:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1477:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061206d696e746572",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1494:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8f0daa39c39bac816583bed47118324ef9cb0bd9d20d7485ca08e731f62c009",
																"typeString": "literal_string \"Not a minter\""
															},
															"value": "Not a minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8f0daa39c39bac816583bed47118324ef9cb0bd9d20d7485ca08e731f62c009",
																"typeString": "literal_string \"Not a minter\""
															}
														],
														"id": 1025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1469:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1469:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "1469:40:6"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1032,
															"name": "minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "1528:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"id": 1033,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "1536:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1528:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1546:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1528:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "1528:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1039,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "1580:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1038,
														"name": "MinterRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1566:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "EmitStatement",
												"src": "1561:26:6"
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1295:102:6",
										"text": " @dev Remove a minter address\n @param minter The address to remove as a minter"
									},
									"functionSelector": "3092afd5",
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1023,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1022,
												"name": "onlyOwner",
												"nameLocations": [
													"1449:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1449:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1449:9:6"
										}
									],
									"name": "removeMinter",
									"nameLocation": "1411:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "1432:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1424:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:16:6"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1459:0:6"
									},
									"scope": 1076,
									"src": "1402:192:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "1862:180:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1052,
																"name": "minters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "1880:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1055,
															"indexExpression": {
																"expression": {
																	"id": 1053,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1888:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1892:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1888:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1880:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206d696e746572732063616e206d696e742072657761726473",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1901:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae746fb6f9947269fe9ae6202c76250e81c322322fe58f0b721edbff56d389ff",
																"typeString": "literal_string \"Only minters can mint rewards\""
															},
															"value": "Only minters can mint rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae746fb6f9947269fe9ae6202c76250e81c322322fe58f0b721edbff56d389ff",
																"typeString": "literal_string \"Only minters can mint rewards\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1872:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1872:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "1872:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1060,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "1951:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1965:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1061,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1957:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1957:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1951:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206d696e7420746f207a65726f2061646472657373",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1969:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9",
																"typeString": "literal_string \"Cannot mint to zero address\""
															},
															"value": "Cannot mint to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9",
																"typeString": "literal_string \"Cannot mint to zero address\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1943:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1943:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1070,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "2024:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "2028:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1069,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2018:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2018:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "2018:17:6"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "1604:196:6",
										"text": " @dev Mint new tokens to a recipient (only callable by minters)\n @param to The address that will receive the minted tokens\n @param amount The amount of tokens to mint"
									},
									"functionSelector": "9a49090e",
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintReward",
									"nameLocation": "1814:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1833:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1825:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1845:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1837:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:28:6"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:0:6"
									},
									"scope": 1076,
									"src": "1805:237:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "243:1801:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								950,
								954
							]
						}
					],
					"src": "32:2012:6"
				},
				"id": 6
			},
			"contracts/StudyTokenAuthority.sol": {
				"ast": {
					"absolutePath": "contracts/StudyTokenAuthority.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"StudyToken": [
							1076
						],
						"StudyTokenAuthority": [
							1602
						]
					},
					"id": 1603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "contracts/StudyToken.sol",
							"file": "./StudyToken.sol",
							"id": 1079,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1603,
							"sourceUnit": 1077,
							"src": "58:26:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StudyTokenAuthority",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1080,
								"nodeType": "StructuredDocumentation",
								"src": "86:107:7",
								"text": " @title StudyTokenAuthority\n @dev Contract for managing token authority operations for StudyDAO"
							},
							"fullyImplemented": true,
							"id": 1602,
							"linearizedBaseContracts": [
								1602
							],
							"name": "StudyTokenAuthority",
							"nameLocation": "203:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a7481b5b",
									"id": 1083,
									"mutability": "mutable",
									"name": "studyToken",
									"nameLocation": "284:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "266:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_StudyToken_$1076",
										"typeString": "contract StudyToken"
									},
									"typeName": {
										"id": 1082,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1081,
											"name": "StudyToken",
											"nameLocations": [
												"266:10:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1076,
											"src": "266:10:7"
										},
										"referencedDeclaration": 1076,
										"src": "266:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StudyToken_$1076",
											"typeString": "contract StudyToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1085,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "357:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "342:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1084,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "342:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5b9221b",
									"id": 1089,
									"mutability": "mutable",
									"name": "authorizedContracts",
									"nameLocation": "450:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "418:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1088,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1086,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "426:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "418:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1087,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "437:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "360cf54a",
									"id": 1093,
									"mutability": "mutable",
									"name": "userDailyLimits",
									"nameLocation": "557:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "522:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1092,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1090,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "530:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "522:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1091,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "541:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c76b0888",
									"id": 1095,
									"mutability": "mutable",
									"name": "defaultDailyLimit",
									"nameLocation": "625:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "610:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1094,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6fa284d",
									"id": 1101,
									"mutability": "mutable",
									"name": "userDailyUsage",
									"nameLocation": "749:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "694:69:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1100,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1096,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "702:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "694:47:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1099,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1097,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "721:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "713:27:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1098,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "732:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff651",
									"id": 1105,
									"name": "ContractAuthorized",
									"nameLocation": "794:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"indexed": true,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "829:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "813:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:33:7"
									},
									"src": "788:58:7"
								},
								{
									"anonymous": false,
									"eventSelector": "54142b7cb3ceaa9e564243ce4cc2303723c842a1144192de6b3c594f68b16a9a",
									"id": 1109,
									"name": "ContractDeauthorized",
									"nameLocation": "857:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"indexed": true,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "894:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "878:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:33:7"
									},
									"src": "851:60:7"
								},
								{
									"anonymous": false,
									"eventSelector": "c1395320bc4a9778acf4621c40f54fdde0fafa6177d8012972fca4ec8f7cfa36",
									"id": 1115,
									"name": "UserLimitSet",
									"nameLocation": "922:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "951:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "935:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"indexed": false,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "965:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "957:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:37:7"
									},
									"src": "916:56:7"
								},
								{
									"anonymous": false,
									"eventSelector": "09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b3",
									"id": 1123,
									"name": "TokenOperationApproved",
									"nameLocation": "983:22:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1022:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1006:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1036:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1028:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"indexed": false,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "1051:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1044:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1044:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:56:7"
									},
									"src": "977:85:7"
								},
								{
									"anonymous": false,
									"eventSelector": "36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf",
									"id": 1131,
									"name": "TokenOperationDenied",
									"nameLocation": "1073:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1110:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1094:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1124:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1116:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "1139:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1132:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:56:7"
									},
									"src": "1067:83:7"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "1198:93:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1134,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1216:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1220:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1216:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1136,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "1230:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1216:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1237:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1208:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1208:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "1208:65:7"
											},
											{
												"id": 1141,
												"nodeType": "PlaceholderStatement",
												"src": "1283:1:7"
											}
										]
									},
									"id": 1143,
									"name": "onlyOwner",
									"nameLocation": "1186:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1195:2:7"
									},
									"src": "1177:114:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "1327:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1146,
																	"name": "authorizedContracts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "1345:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1149,
																"indexExpression": {
																	"expression": {
																		"id": 1147,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1365:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1369:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1365:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1345:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1150,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1380:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1384:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1380:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1152,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "1394:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1380:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1345:54:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1401:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 1145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1337:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "1337:81:7"
											},
											{
												"id": 1158,
												"nodeType": "PlaceholderStatement",
												"src": "1428:1:7"
											}
										]
									},
									"id": 1160,
									"name": "onlyAuthorized",
									"nameLocation": "1310:14:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:2:7"
									},
									"src": "1301:135:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "1719:362:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1169,
																"name": "_studyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "1737:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1767:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1759:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1170,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1759:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1759:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1737:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1771:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1729:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "1729:66:7"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1178,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "1805:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1179,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1813:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1817:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1813:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1805:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "1805:18:7"
											},
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "studyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "1833:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StudyToken_$1076",
															"typeString": "contract StudyToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1185,
																"name": "_studyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "1857:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1184,
															"name": "StudyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "1846:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_StudyToken_$1076_$",
																"typeString": "type(contract StudyToken)"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1846:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StudyToken_$1076",
															"typeString": "contract StudyToken"
														}
													},
													"src": "1833:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_StudyToken_$1076",
														"typeString": "contract StudyToken"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "1833:43:7"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1189,
														"name": "defaultDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "1886:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "_defaultDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "1906:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1886:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "1886:38:7"
											},
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1193,
															"name": "authorizedContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "1991:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1196,
														"indexExpression": {
															"expression": {
																"id": 1194,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2011:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2015:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2011:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1991:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2025:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1991:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "1991:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1201,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2063:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2067:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2063:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1200,
														"name": "ContractAuthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "2044:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2044:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "EmitStatement",
												"src": "2039:35:7"
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "1446:200:7",
										"text": " @dev Constructor to initialize the token authority\n @param _studyTokenAddress Address of the StudyToken contract\n @param _defaultDailyLimit Default daily limit for users"
									},
									"id": 1206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "_studyTokenAddress",
												"nameLocation": "1671:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1663:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_defaultDailyLimit",
												"nameLocation": "1699:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1691:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:56:7"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:0:7"
									},
									"scope": 1602,
									"src": "1651:430:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "2315:282:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1215,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "2333:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2360:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2352:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1216,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2352:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2352:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2333:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636f6e74726163742061646472657373",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2364:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															},
															"value": "Invalid contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															}
														],
														"id": 1214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2325:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2325:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "2325:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2409:37:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1225,
																	"name": "authorizedContracts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "2410:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1227,
																"indexExpression": {
																	"id": 1226,
																	"name": "contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "2430:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2410:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420616c726561647920617574686f72697a6564",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2448:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74e7f6520574a344a1f78c9de155390cac2c80bfb003917f990401b6467aa610",
																"typeString": "literal_string \"Contract already authorized\""
															},
															"value": "Contract already authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74e7f6520574a344a1f78c9de155390cac2c80bfb003917f990401b6467aa610",
																"typeString": "literal_string \"Contract already authorized\""
															}
														],
														"id": 1224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "2401:77:7"
											},
											{
												"expression": {
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1232,
															"name": "authorizedContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "2497:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1234,
														"indexExpression": {
															"id": 1233,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "2517:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2497:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2536:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2497:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "2497:43:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1239,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "2574:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1238,
														"name": "ContractAuthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "2555:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2555:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "EmitStatement",
												"src": "2550:40:7"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "2091:148:7",
										"text": " @dev Authorize a contract to interact with the token authority\n @param contractAddress Address of the contract to authorize"
									},
									"functionSelector": "67561d93",
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1212,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1211,
												"name": "onlyOwner",
												"nameLocations": [
													"2305:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1143,
												"src": "2305:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2305:9:7"
										}
									],
									"name": "authorizeContract",
									"nameLocation": "2253:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "2279:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2271:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:25:7"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2315:0:7"
									},
									"scope": 1602,
									"src": "2244:353:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "2800:204:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1252,
																"name": "authorizedContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "2818:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1254,
															"indexExpression": {
																"id": 1253,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "2838:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2818:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617574686f72697a6564",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2856:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c4945e6b3610d383f734579b5988e80e465f94d13969c86a446ea85a32f996a",
																"typeString": "literal_string \"Contract not authorized\""
															},
															"value": "Contract not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c4945e6b3610d383f734579b5988e80e465f94d13969c86a446ea85a32f996a",
																"typeString": "literal_string \"Contract not authorized\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2810:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "2810:72:7"
											},
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1258,
															"name": "authorizedContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "2901:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1260,
														"indexExpression": {
															"id": 1259,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2921:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2901:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2940:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2901:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "2901:44:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1265,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2981:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1264,
														"name": "ContractDeauthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "2960:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2960:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "EmitStatement",
												"src": "2955:42:7"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "2607:115:7",
										"text": " @dev Deauthorize a contract\n @param contractAddress Address of the contract to deauthorize"
									},
									"functionSelector": "6e861c0e",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1248,
												"name": "onlyOwner",
												"nameLocations": [
													"2790:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1143,
												"src": "2790:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2790:9:7"
										}
									],
									"name": "deauthorizeContract",
									"nameLocation": "2736:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "2764:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2756:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2756:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:25:7"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2800:0:7"
									},
									"scope": 1602,
									"src": "2727:277:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "3237:156:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1280,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "3255:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3271:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3263:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3263:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3263:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3255:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420757365722061646472657373",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3275:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993",
																"typeString": "literal_string \"Invalid user address\""
															},
															"value": "Invalid user address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993",
																"typeString": "literal_string \"Invalid user address\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3247:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3247:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "3247:51:7"
											},
											{
												"expression": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1289,
															"name": "userDailyLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "3317:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1291,
														"indexExpression": {
															"id": 1290,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "3333:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3317:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1292,
														"name": "limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "3341:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3317:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "3317:29:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1296,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "3374:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "3380:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1295,
														"name": "UserLimitSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "3361:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3361:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "EmitStatement",
												"src": "3356:30:7"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "3014:143:7",
										"text": " @dev Set daily token limit for a specific user\n @param user Address of the user\n @param limit Daily limit amount"
									},
									"functionSelector": "177c49a7",
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1277,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1276,
												"name": "onlyOwner",
												"nameLocations": [
													"3227:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1143,
												"src": "3227:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3227:9:7"
										}
									],
									"name": "setUserDailyLimit",
									"nameLocation": "3171:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3197:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3189:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3189:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "3211:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3203:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:29:7"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3237:0:7"
									},
									"scope": 1602,
									"src": "3162:231:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "3580:42:7",
										"statements": [
											{
												"expression": {
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1309,
														"name": "defaultDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "3590:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1310,
														"name": "limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "3610:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3590:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "3590:25:7"
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "3403:108:7",
										"text": " @dev Set default daily limit for all users\n @param limit Default daily limit amount"
									},
									"functionSelector": "bebbcfe6",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1306,
												"name": "onlyOwner",
												"nameLocations": [
													"3570:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1143,
												"src": "3570:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3570:9:7"
										}
									],
									"name": "setDefaultDailyLimit",
									"nameLocation": "3525:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "3554:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "3546:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3545:15:7"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3580:0:7"
									},
									"scope": 1602,
									"src": "3516:106:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "3807:48:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1320,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3824:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3830:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3824:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3842:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "3824:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1319,
												"id": 1324,
												"nodeType": "Return",
												"src": "3817:31:7"
											}
										]
									},
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "3632:115:7",
										"text": " @dev Get the current day number (for daily limit tracking)\n @return The current day number"
									},
									"functionSelector": "3e6968b6",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentDay",
									"nameLocation": "3761:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3774:2:7"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "3798:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3798:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3797:9:7"
									},
									"scope": 1602,
									"src": "3752:103:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "4076:120:7",
										"statements": [
											{
												"assignments": [
													1335
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "userLimit",
														"nameLocation": "4094:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "4086:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4086:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1339,
												"initialValue": {
													"baseExpression": {
														"id": 1336,
														"name": "userDailyLimits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "4106:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1338,
													"indexExpression": {
														"id": 1337,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "4122:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4106:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4086:41:7"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1340,
															"name": "userLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "4144:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4156:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4144:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1344,
														"name": "defaultDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "4172:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4144:45:7",
													"trueExpression": {
														"id": 1343,
														"name": "userLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "4160:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1346,
												"nodeType": "Return",
												"src": "4137:52:7"
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "3865:135:7",
										"text": " @dev Get a user's effective daily limit\n @param user Address of the user\n @return The user's daily limit"
									},
									"functionSelector": "77865f91",
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserDailyLimit",
									"nameLocation": "4014:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4040:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "4032:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4031:14:7"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "4067:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4067:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:9:7"
									},
									"scope": 1602,
									"src": "4005:191:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "4432:230:7",
										"statements": [
											{
												"assignments": [
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "dayNumber",
														"nameLocation": "4450:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "4442:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4442:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1360,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1358,
														"name": "getCurrentDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "4462:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4462:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4442:35:7"
											},
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "usedToday",
														"nameLocation": "4495:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "4487:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4487:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1363,
															"name": "userDailyUsage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "4507:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1365,
														"indexExpression": {
															"id": 1364,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "4522:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4507:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1367,
													"indexExpression": {
														"id": 1366,
														"name": "dayNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "4528:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4507:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:51:7"
											},
											{
												"assignments": [
													1370
												],
												"declarations": [
													{
														"constant": false,
														"id": 1370,
														"mutability": "mutable",
														"name": "limit",
														"nameLocation": "4556:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "4548:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1369,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4548:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"arguments": [
														{
															"id": 1372,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "4582:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1371,
														"name": "getUserDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "4564:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4564:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4548:39:7"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1375,
															"name": "usedToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "4613:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 1376,
															"name": "limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4626:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4613:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1379,
															"name": "limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4638:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1380,
															"name": "usedToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "4646:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4638:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4613:42:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4634:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1355,
												"id": 1383,
												"nodeType": "Return",
												"src": "4606:49:7"
											}
										]
									},
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "4206:145:7",
										"text": " @dev Get a user's remaining daily limit\n @param user Address of the user\n @return The user's remaining daily limit"
									},
									"functionSelector": "ec37d259",
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainingDailyLimit",
									"nameLocation": "4365:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4396:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "4388:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4388:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4387:14:7"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "4423:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4422:9:7"
									},
									"scope": 1602,
									"src": "4356:306:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "4961:480:7",
										"statements": [
											{
												"assignments": [
													1398
												],
												"declarations": [
													{
														"constant": false,
														"id": 1398,
														"mutability": "mutable",
														"name": "dayNumber",
														"nameLocation": "4979:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "4971:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1397,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4971:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1401,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1399,
														"name": "getCurrentDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "4991:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4991:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4971:35:7"
											},
											{
												"assignments": [
													1403
												],
												"declarations": [
													{
														"constant": false,
														"id": 1403,
														"mutability": "mutable",
														"name": "userLimit",
														"nameLocation": "5024:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "5016:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5016:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1407,
												"initialValue": {
													"arguments": [
														{
															"id": 1405,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5054:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1404,
														"name": "getUserDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "5036:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5036:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5016:41:7"
											},
											{
												"assignments": [
													1409
												],
												"declarations": [
													{
														"constant": false,
														"id": 1409,
														"mutability": "mutable",
														"name": "usedToday",
														"nameLocation": "5075:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "5067:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5067:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1415,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1410,
															"name": "userDailyUsage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "5087:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1412,
														"indexExpression": {
															"id": 1411,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5102:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5087:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1414,
													"indexExpression": {
														"id": 1413,
														"name": "dayNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "5106:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5087:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5067:49:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1416,
															"name": "usedToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "5139:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1417,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "5151:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5139:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1419,
														"name": "userLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "5161:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5139:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1448,
													"nodeType": "Block",
													"src": "5339:96:7",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1441,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "5379:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1442,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "5383:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "6d696e74",
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5391:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354",
																			"typeString": "literal_string \"mint\""
																		},
																		"value": "mint"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354",
																			"typeString": "literal_string \"mint\""
																		}
																	],
																	"id": 1440,
																	"name": "TokenOperationDenied",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "5358:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,string memory)"
																	}
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5358:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1445,
															"nodeType": "EmitStatement",
															"src": "5353:45:7"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5419:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1396,
															"id": 1447,
															"nodeType": "Return",
															"src": "5412:12:7"
														}
													]
												},
												"id": 1449,
												"nodeType": "IfStatement",
												"src": "5135:300:7",
												"trueBody": {
													"id": 1439,
													"nodeType": "Block",
													"src": "5172:161:7",
													"statements": [
														{
															"expression": {
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1421,
																			"name": "userDailyUsage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "5186:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1424,
																		"indexExpression": {
																			"id": 1422,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "5201:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5186:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1425,
																	"indexExpression": {
																		"id": 1423,
																		"name": "dayNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "5205:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5186:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1426,
																		"name": "usedToday",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "5218:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1427,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "5230:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5218:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5186:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1430,
															"nodeType": "ExpressionStatement",
															"src": "5186:50:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1432,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "5278:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1433,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "5282:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "6d696e74",
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5290:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354",
																			"typeString": "literal_string \"mint\""
																		},
																		"value": "mint"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354",
																			"typeString": "literal_string \"mint\""
																		}
																	],
																	"id": 1431,
																	"name": "TokenOperationApproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "5255:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,string memory)"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5255:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1436,
															"nodeType": "EmitStatement",
															"src": "5250:47:7"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5318:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1396,
															"id": 1438,
															"nodeType": "Return",
															"src": "5311:11:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "4672:194:7",
										"text": " @dev Authorize a token mint operation\n @param to Recipient of the tokens\n @param amount Amount of tokens to mint\n @return Whether the operation is authorized"
									},
									"functionSelector": "9b32ea6d",
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1393,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1392,
												"name": "onlyAuthorized",
												"nameLocations": [
													"4931:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1160,
												"src": "4931:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4931:14:7"
										}
									],
									"name": "authorizeMint",
									"nameLocation": "4880:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4902:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "4894:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4914:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "4906:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4906:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:28:7"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "4955:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4955:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4954:6:7"
									},
									"scope": 1602,
									"src": "4871:570:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "5806:217:7",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1466,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "5970:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "5976:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "7472616e73666572",
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5984:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b483afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e",
																"typeString": "literal_string \"transfer\""
															},
															"value": "transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_b483afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e",
																"typeString": "literal_string \"transfer\""
															}
														],
														"id": 1465,
														"name": "TokenOperationApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "5947:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5947:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "EmitStatement",
												"src": "5942:53:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6012:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1464,
												"id": 1472,
												"nodeType": "Return",
												"src": "6005:11:7"
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "5451:242:7",
										"text": " @dev Authorize a token transfer operation\n @param from Sender of the tokens\n @param to Recipient of the tokens\n @param amount Amount of tokens to transfer\n @return Whether the operation is authorized"
									},
									"functionSelector": "32a34ad0",
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1461,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1460,
												"name": "onlyAuthorized",
												"nameLocations": [
													"5776:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1160,
												"src": "5776:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5776:14:7"
										}
									],
									"name": "authorizeTransfer",
									"nameLocation": "5707:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5733:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "5725:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5747:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "5739:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5759:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "5751:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5751:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:42:7"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "5800:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5800:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5799:6:7"
									},
									"scope": 1602,
									"src": "5698:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "6242:136:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1483,
																"name": "_studyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "6260:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6290:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6282:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1484,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6282:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6282:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6260:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6294:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6252:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6252:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "6252:66:7"
											},
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1492,
														"name": "studyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "6328:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StudyToken_$1076",
															"typeString": "contract StudyToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1494,
																"name": "_studyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "6352:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1493,
															"name": "StudyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "6341:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_StudyToken_$1076_$",
																"typeString": "type(contract StudyToken)"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6341:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StudyToken_$1076",
															"typeString": "contract StudyToken"
														}
													},
													"src": "6328:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_StudyToken_$1076",
														"typeString": "contract StudyToken"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "6328:43:7"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "6033:134:7",
										"text": " @dev Connect to an existing StudyToken contract\n @param _studyTokenAddress Address of the StudyToken contract"
									},
									"functionSelector": "b09a8a04",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1480,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1479,
												"name": "onlyOwner",
												"nameLocations": [
													"6232:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1143,
												"src": "6232:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6232:9:7"
										}
									],
									"name": "setStudyToken",
									"nameLocation": "6181:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "_studyTokenAddress",
												"nameLocation": "6203:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "6195:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6194:28:7"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6242:0:7"
									},
									"scope": 1602,
									"src": "6172:206:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "6592:136:7",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1516,
															"nodeType": "Block",
															"src": "6642:36:7",
															"statements": [
																{
																	"expression": {
																		"hexValue": "74727565",
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6663:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"functionReturnParameters": 1506,
																	"id": 1515,
																	"nodeType": "Return",
																	"src": "6656:11:7"
																}
															]
														},
														"errorName": "",
														"id": 1517,
														"nodeType": "TryCatchClause",
														"src": "6642:36:7"
													},
													{
														"block": {
															"id": 1520,
															"nodeType": "Block",
															"src": "6685:37:7",
															"statements": [
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6706:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 1506,
																	"id": 1519,
																	"nodeType": "Return",
																	"src": "6699:12:7"
																}
															]
														},
														"errorName": "",
														"id": 1521,
														"nodeType": "TryCatchClause",
														"src": "6679:43:7"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1511,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6635:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StudyTokenAuthority_$1602",
																		"typeString": "contract StudyTokenAuthority"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StudyTokenAuthority_$1602",
																		"typeString": "contract StudyTokenAuthority"
																	}
																],
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6627:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1509,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6627:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6627:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1507,
															"name": "studyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "6606:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StudyToken_$1076",
																"typeString": "contract StudyToken"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6617:9:7",
														"memberName": "addMinter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1017,
														"src": "6606:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6606:35:7",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "TryStatement",
												"src": "6602:120:7"
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "6388:136:7",
										"text": " @dev Request the token contract to add this authority as a minter\n @return Whether the operation was successful"
									},
									"functionSelector": "113018c5",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1503,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1502,
												"name": "onlyOwner",
												"nameLocations": [
													"6567:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1143,
												"src": "6567:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6567:9:7"
										}
									],
									"name": "requestMinterRole",
									"nameLocation": "6538:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6555:2:7"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "6586:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6586:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:6:7"
									},
									"scope": 1602,
									"src": "6529:199:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "7040:272:7",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1549,
															"nodeType": "Block",
															"src": "7088:106:7",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 1542,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1527,
																				"src": "7130:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1543,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1529,
																				"src": "7134:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "617574686f726974794d696e74",
																				"id": 1544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7142:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_69b48298bc59ad13c9d2dd75d42421a445b62a269d2497d1473d5cf61da463dc",
																					"typeString": "literal_string \"authorityMint\""
																				},
																				"value": "authorityMint"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_69b48298bc59ad13c9d2dd75d42421a445b62a269d2497d1473d5cf61da463dc",
																					"typeString": "literal_string \"authorityMint\""
																				}
																			],
																			"id": 1541,
																			"name": "TokenOperationApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1123,
																			"src": "7107:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (address,uint256,string memory)"
																			}
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7107:51:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1546,
																	"nodeType": "EmitStatement",
																	"src": "7102:56:7"
																},
																{
																	"expression": {
																		"hexValue": "74727565",
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7179:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"functionReturnParameters": 1535,
																	"id": 1548,
																	"nodeType": "Return",
																	"src": "7172:11:7"
																}
															]
														},
														"errorName": "",
														"id": 1550,
														"nodeType": "TryCatchClause",
														"src": "7088:106:7"
													},
													{
														"block": {
															"id": 1559,
															"nodeType": "Block",
															"src": "7201:105:7",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 1552,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1527,
																				"src": "7241:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1553,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1529,
																				"src": "7245:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "617574686f726974794d696e74",
																				"id": 1554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7253:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_69b48298bc59ad13c9d2dd75d42421a445b62a269d2497d1473d5cf61da463dc",
																					"typeString": "literal_string \"authorityMint\""
																				},
																				"value": "authorityMint"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_69b48298bc59ad13c9d2dd75d42421a445b62a269d2497d1473d5cf61da463dc",
																					"typeString": "literal_string \"authorityMint\""
																				}
																			],
																			"id": 1551,
																			"name": "TokenOperationDenied",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "7220:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (address,uint256,string memory)"
																			}
																		},
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7220:49:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1556,
																	"nodeType": "EmitStatement",
																	"src": "7215:54:7"
																},
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7290:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 1535,
																	"id": 1558,
																	"nodeType": "Return",
																	"src": "7283:12:7"
																}
															]
														},
														"errorName": "",
														"id": 1560,
														"nodeType": "TryCatchClause",
														"src": "7195:111:7"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 1538,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "7076:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1539,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "7080:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1536,
															"name": "studyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "7054:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StudyToken_$1076",
																"typeString": "contract StudyToken"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7065:10:7",
														"memberName": "mintReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1075,
														"src": "7054:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7054:33:7",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "TryStatement",
												"src": "7050:256:7"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "6738:215:7",
										"text": " @dev Mint tokens through the authority (if it's a minter)\n @param to Recipient of the tokens\n @param amount Amount of tokens to mint\n @return Whether the operation was successful"
									},
									"functionSelector": "f0dda65c",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1531,
												"name": "onlyOwner",
												"nameLocations": [
													"7015:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1143,
												"src": "7015:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7015:9:7"
										}
									],
									"name": "mintTokens",
									"nameLocation": "6967:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6986:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "6978:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6998:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "6990:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6990:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6977:28:7"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "7034:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1533,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7034:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7033:6:7"
									},
									"scope": 1602,
									"src": "6958:354:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "7634:286:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1574,
																"name": "studyGroupAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "7652:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7681:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7673:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1575,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7673:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7673:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7652:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642073747564792067726f75702061646472657373",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7685:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b12507f79783e6861b0659e8d96efe9ea7ad495d0339d3c2256f519a077aafd8",
																"typeString": "literal_string \"Invalid study group address\""
															},
															"value": "Invalid study group address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b12507f79783e6861b0659e8d96efe9ea7ad495d0339d3c2256f519a077aafd8",
																"typeString": "literal_string \"Invalid study group address\""
															}
														],
														"id": 1573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7644:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7644:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "7644:71:7"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1593,
															"nodeType": "Block",
															"src": "7778:92:7",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 1588,
																				"name": "studyGroupAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1566,
																				"src": "7816:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1587,
																			"name": "ContractAuthorized",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "7797:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																				"typeString": "function (address)"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7797:37:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1590,
																	"nodeType": "EmitStatement",
																	"src": "7792:42:7"
																},
																{
																	"expression": {
																		"hexValue": "74727565",
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7855:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"functionReturnParameters": 1572,
																	"id": 1592,
																	"nodeType": "Return",
																	"src": "7848:11:7"
																}
															]
														},
														"errorName": "",
														"id": 1594,
														"nodeType": "TryCatchClause",
														"src": "7778:92:7"
													},
													{
														"block": {
															"id": 1597,
															"nodeType": "Block",
															"src": "7877:37:7",
															"statements": [
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7898:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 1572,
																	"id": 1596,
																	"nodeType": "Return",
																	"src": "7891:12:7"
																}
															]
														},
														"errorName": "",
														"id": 1598,
														"nodeType": "TryCatchClause",
														"src": "7871:43:7"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 1585,
															"name": "studyGroupAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "7759:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1583,
															"name": "studyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "7738:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StudyToken_$1076",
																"typeString": "contract StudyToken"
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7749:9:7",
														"memberName": "addMinter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1017,
														"src": "7738:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7738:39:7",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "TryStatement",
												"src": "7734:180:7"
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "7322:209:7",
										"text": " @dev Add a new StudyGroup contract as an authorized minter on the token\n @param studyGroupAddress Address of the StudyGroup contract\n @return Whether the operation was successful"
									},
									"functionSelector": "0a0d6de1",
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1569,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1568,
												"name": "onlyOwner",
												"nameLocations": [
													"7609:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1143,
												"src": "7609:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7609:9:7"
										}
									],
									"name": "authorizeStudyGroupAsMinter",
									"nameLocation": "7545:27:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "studyGroupAddress",
												"nameLocation": "7581:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "7573:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7572:27:7"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "7628:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7628:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7627:6:7"
									},
									"scope": 1602,
									"src": "7536:384:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1603,
							"src": "194:7728:7",
							"usedErrors": [],
							"usedEvents": [
								1105,
								1109,
								1115,
								1123,
								1131
							]
						}
					],
					"src": "32:7890:7"
				},
				"id": 7
			}
		}
	}
}